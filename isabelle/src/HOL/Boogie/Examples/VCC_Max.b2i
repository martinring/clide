type-decl $ctype 0 0
type-decl $ptr 0 0
type-decl $field 0 0
type-decl $kind 0 0
type-decl $type_state 0 0
type-decl $status 0 0
type-decl $primitive 0 0
type-decl $struct 0 0
type-decl $token 0 0
type-decl $state 0 0
type-decl $pure_function 0 0
type-decl $label 0 0
type-decl $memory_t 0 0
type-decl $typemap_t 0 0
type-decl $statusmap_t 0 0
type-decl $record 0 0
type-decl $version 0 0
type-decl $vol_version 0 0
type-decl $ptrset 0 0
fun-decl $kind_of 2 0
    type-con $ctype 0
    type-con $kind 0
fun-decl $kind_composite 1 1
    type-con $kind 0
  attribute unique 0
fun-decl $kind_primitive 1 1
    type-con $kind 0
  attribute unique 0
fun-decl $kind_array 1 1
    type-con $kind 0
  attribute unique 0
fun-decl $kind_thread 1 1
    type-con $kind 0
  attribute unique 0
fun-decl $sizeof 2 0
    type-con $ctype 0
    int
fun-decl ^^i1 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^i2 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^i4 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^i8 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^u1 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^u2 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^u4 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^u8 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^void 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^bool 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^f4 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^f8 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^claim 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^root_emb 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^^mathint 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^$#thread_id_t 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^$#ptrset 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^$#state_t 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl ^$#struct 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl $ptr_to 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $unptr_to 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $ptr_level 2 0
    type-con $ctype 0
    int
fun-decl $map_t 3 0
    type-con $ctype 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $map_domain 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $map_range 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $is_primitive 2 1
    type-con $ctype 0
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $is_primitive_ch 2 1
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_composite 2 1
    type-con $ctype 0
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $is_composite_ch 2 1
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_arraytype 2 1
    type-con $ctype 0
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $is_arraytype_ch 2 1
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_threadtype 2 1
    type-con $ctype 0
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $is_thread 2 1
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_ptr_to_composite 2 1
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $field_offset 2 0
    type-con $field 0
    int
fun-decl $field_parent_type 2 0
    type-con $field 0
    type-con $ctype 0
fun-decl $is_non_primitive 2 0
    type-con $ctype 0
    bool
fun-decl $is_non_primitive_ch 2 1
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_non_primitive_ptr 2 1
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $me_ref 1 0
    int
fun-decl $me 1 0
    type-con $ptr 0
fun-decl $current_state 2 1
    type-con $state 0
    type-con $state 0
  attribute inline 1
    expr-attr
      true
fun-decl $select.mem 3 0
    type-con $memory_t 0
    type-con $ptr 0
    int
fun-decl $store.mem 4 0
    type-con $memory_t 0
    type-con $ptr 0
    int
    type-con $memory_t 0
fun-decl $select.tm 3 0
    type-con $typemap_t 0
    type-con $ptr 0
    type-con $type_state 0
fun-decl $store.tm 4 0
    type-con $typemap_t 0
    type-con $ptr 0
    type-con $type_state 0
    type-con $typemap_t 0
fun-decl $select.sm 3 0
    type-con $statusmap_t 0
    type-con $ptr 0
    type-con $status 0
fun-decl $store.sm 4 0
    type-con $statusmap_t 0
    type-con $ptr 0
    type-con $status 0
    type-con $statusmap_t 0
fun-decl $memory 2 0
    type-con $state 0
    type-con $memory_t 0
fun-decl $typemap 2 0
    type-con $state 0
    type-con $typemap_t 0
fun-decl $statusmap 2 0
    type-con $state 0
    type-con $statusmap_t 0
fun-decl $mem 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute inline 1
    expr-attr
      true
fun-decl $read_any 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute inline 1
    expr-attr
      true
fun-decl $mem_eq 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $st_eq 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $ts_eq 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $extent_hint 3 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $nesting_level 2 0
    type-con $ctype 0
    int
fun-decl $is_nested 3 0
    type-con $ctype 0
    type-con $ctype 0
    bool
fun-decl $nesting_min 3 0
    type-con $ctype 0
    type-con $ctype 0
    int
fun-decl $nesting_max 3 0
    type-con $ctype 0
    type-con $ctype 0
    int
fun-decl $is_nested_range 5 0
    type-con $ctype 0
    type-con $ctype 0
    int
    int
    bool
fun-decl $typ 2 0
    type-con $ptr 0
    type-con $ctype 0
fun-decl $ref 2 0
    type-con $ptr 0
    int
fun-decl $ptr 3 0
    type-con $ctype 0
    int
    type-con $ptr 0
fun-decl $ghost_ref 3 0
    type-con $ptr 0
    type-con $field 0
    int
fun-decl $ghost_emb 2 0
    int
    type-con $ptr 0
fun-decl $ghost_path 2 0
    int
    type-con $field 0
fun-decl $physical_ref 3 0
    type-con $ptr 0
    type-con $field 0
    int
fun-decl $array_path 3 0
    type-con $field 0
    int
    type-con $field 0
fun-decl $is_base_field 2 0
    type-con $field 0
    bool
fun-decl $array_path_1 2 0
    type-con $field 0
    type-con $field 0
fun-decl $array_path_2 2 0
    type-con $field 0
    int
fun-decl $null 1 0
    type-con $ptr 0
fun-decl $is 3 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $ptr_cast 3 1
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $read_ptr 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $dot 3 0
    type-con $ptr 0
    type-con $field 0
    type-con $ptr 0
fun-decl $emb 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $path 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
  attribute inline 1
    expr-attr
      true
fun-decl $containing_struct 3 0
    type-con $ptr 0
    type-con $field 0
    type-con $ptr 0
fun-decl $containing_struct_ref 3 0
    type-con $ptr 0
    type-con $field 0
    int
fun-decl $is_primitive_non_volatile_field 2 0
    type-con $field 0
    bool
fun-decl $is_primitive_volatile_field 2 0
    type-con $field 0
    bool
fun-decl $is_primitive_embedded_array 3 0
    type-con $field 0
    int
    bool
fun-decl $is_primitive_embedded_volatile_array 4 0
    type-con $field 0
    int
    type-con $ctype 0
    bool
fun-decl $static_field_properties 3 1
    type-con $field 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $field_properties 6 1
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    type-con $ctype 0
    bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $ts_typed 2 0
    type-con $type_state 0
    bool
fun-decl $ts_emb 2 0
    type-con $type_state 0
    type-con $ptr 0
fun-decl $ts_path 2 0
    type-con $type_state 0
    type-con $field 0
fun-decl $ts_is_array_elt 2 0
    type-con $type_state 0
    bool
fun-decl $ts_is_volatile 2 0
    type-con $type_state 0
    bool
fun-decl $is_object_root 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_volatile 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_malloc_root 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $current_timestamp 2 0
    type-con $state 0
    int
fun-decl $is_fresh 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_writes_at 3 0
    int
    type-con $ptr 0
    bool
fun-decl $writable 4 1
    type-con $state 0
    int
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $top_writable 4 1
    type-con $state 0
    int
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $struct_zero 1 0
    type-con $struct 0
fun-decl $vs_base 3 1
    type-con $struct 0
    type-con $ctype 0
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $vs_base_ref 2 0
    type-con $struct 0
    int
fun-decl $vs_state 2 0
    type-con $struct 0
    type-con $state 0
fun-decl $vs_ctor 3 0
    type-con $state 0
    type-con $ptr 0
    type-con $struct 0
fun-decl $rec_zero 1 0
    type-con $record 0
fun-decl $rec_update 4 0
    type-con $record 0
    type-con $field 0
    int
    type-con $record 0
fun-decl $rec_fetch 3 0
    type-con $record 0
    type-con $field 0
    int
fun-decl $rec_update_bv 7 0
    type-con $record 0
    type-con $field 0
    int
    int
    int
    int
    type-con $record 0
fun-decl $is_record_type 2 0
    type-con $ctype 0
    bool
fun-decl $is_record_field 4 0
    type-con $ctype 0
    type-con $field 0
    type-con $ctype 0
    bool
fun-decl $as_record_record_field 2 0
    type-con $field 0
    type-con $field 0
fun-decl $rec_eq 3 0
    type-con $record 0
    type-con $record 0
    bool
fun-decl $rec_base_eq 3 0
    int
    int
    bool
fun-decl $int_to_record 2 0
    int
    type-con $record 0
fun-decl $record_to_int 2 0
    type-con $record 0
    int
fun-decl $good_state 2 0
    type-con $state 0
    bool
fun-decl $invok_state 2 0
    type-con $state 0
    bool
fun-decl $has_volatile_owns_set 2 0
    type-con $ctype 0
    bool
fun-decl $owns_set_field 2 0
    type-con $ctype 0
    type-con $field 0
fun-decl $st_owner 2 0
    type-con $status 0
    type-con $ptr 0
fun-decl $st_closed 2 0
    type-con $status 0
    bool
fun-decl $st_timestamp 2 0
    type-con $status 0
    int
fun-decl $st_ref_cnt 2 0
    type-con $status 0
    int
fun-decl $owner 3 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
fun-decl $closed 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $timestamp 3 0
    type-con $state 0
    type-con $ptr 0
    int
fun-decl $position_marker 1 0
    bool
fun-decl $st 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $status 0
  attribute inline 1
    expr-attr
      true
fun-decl $ts 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $type_state 0
  attribute inline 1
    expr-attr
      true
fun-decl $owns 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptrset 0
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $nested 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $nested_in 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $wrapped 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $irrelevant 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $mutable 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $thread_owned 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $thread_owned_or_even_mutable 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $typed 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $typed2 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $ptr_eq 3 1
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $ptr_neq 3 1
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_primitive_field_of 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $instantiate_st 2 0
    type-con $status 0
    bool
fun-decl $is_domain_root 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $in_wrapped_domain 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $thread_local_np 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $thread_local 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $thread_local2 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $dont_instantiate 2 0
    type-con $ptr 0
    bool
fun-decl $dont_instantiate_int 2 0
    int
    bool
fun-decl $dont_instantiate_state 2 0
    type-con $state 0
    bool
fun-decl $instantiate_int 2 0
    int
    bool
fun-decl $instantiate_bool 2 0
    bool
    bool
fun-decl $instantiate_ptr 2 0
    type-con $ptr 0
    bool
fun-decl $instantiate_ptrset 2 0
    type-con $ptrset 0
    bool
fun-decl $inv 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $inv2nt 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $imply_inv 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $inv2 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $inv2_when_closed 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $sequential 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $depends 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $spans_the_same 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $state_spans_the_same 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $nonvolatile_spans_the_same 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $state_nonvolatile_spans_the_same 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $in_extent_of 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_full_extent_of 3 1
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $extent_mutable 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $extent_is_fresh 4 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $forall_inv2_when_closed 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $function_entry 2 0
    type-con $state 0
    bool
fun-decl $full_stop 2 0
    type-con $state 0
    bool
fun-decl $full_stop_ext 3 1
    type-con $token 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $file_name_is 3 0
    int
    type-con $token 0
    bool
fun-decl $closed_is_transitive 2 1
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $call_transition 3 0
    type-con $state 0
    type-con $state 0
    bool
fun-decl $good_state_ext 3 0
    type-con $token 0
    type-con $state 0
    bool
fun-decl $local_value_is 6 0
    type-con $state 0
    type-con $token 0
    type-con $token 0
    int
    type-con $ctype 0
    bool
fun-decl $local_value_is_ptr 6 0
    type-con $state 0
    type-con $token 0
    type-con $token 0
    type-con $ptr 0
    type-con $ctype 0
    bool
fun-decl $read_ptr_m 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
fun-decl $type_code_is 3 0
    int
    type-con $ctype 0
    bool
fun-decl $function_arg_type 4 0
    type-con $pure_function 0
    int
    type-con $ctype 0
    bool
fun-decl $ver_domain 2 0
    type-con $version 0
    type-con $ptrset 0
fun-decl $read_version 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $version 0
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $domain 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptrset 0
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $in_domain 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $in_vdomain 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $in_domain_lab 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $label 0
    bool
fun-decl $in_vdomain_lab 5 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $label 0
    bool
fun-decl $inv_lab 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $label 0
    bool
fun-decl $dom_thread_local 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $fetch_from_domain 3 0
    type-con $version 0
    type-con $ptr 0
    int
fun-decl $in_claim_domain 3 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $by_claim 5 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $ptr 0
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $claim_version 2 0
    type-con $ptr 0
    type-con $version 0
fun-decl $read_vol_version 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $vol_version 0
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $fetch_from_vv 3 0
    type-con $vol_version 0
    type-con $ptr 0
    int
fun-decl $fetch_vol_field 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    int
  attribute inline 1
    expr-attr
      true
fun-decl $is_approved_by 4 0
    type-con $ctype 0
    type-con $field 0
    type-con $field 0
    bool
fun-decl $inv_is_approved_by_ptr 6 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $field 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $inv_is_approved_by 6 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    type-con $field 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_owner_approved 3 0
    type-con $ctype 0
    type-con $field 0
    bool
fun-decl $inv_is_owner_approved 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $good_for_admissibility 2 0
    type-con $state 0
    bool
fun-decl $good_for_post_admissibility 2 0
    type-con $state 0
    bool
fun-decl $stuttering_pre 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $admissibility_pre 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $mutable_increases 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $meta_eq 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_stuttering_check 1 0
    bool
fun-decl $is_unwrap_check 1 0
    bool
fun-decl $is_admissibility_check 1 1
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $good_for_pre_can_unwrap 2 0
    type-con $state 0
    bool
fun-decl $good_for_post_can_unwrap 2 0
    type-con $state 0
    bool
fun-decl $unwrap_check_pre 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $update_int 4 0
    type-con $state 0
    type-con $ptr 0
    int
    type-con $state 0
fun-decl $timestamp_is_now 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $now_writable 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $timestamp_post 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $timestamp_post_strict 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $pre_wrap 2 0
    type-con $state 0
    bool
fun-decl $pre_unwrap 2 0
    type-con $state 0
    bool
fun-decl $pre_static_wrap 2 0
    type-con $state 0
    bool
fun-decl $pre_static_unwrap 2 0
    type-con $state 0
    bool
fun-decl $unwrap_post 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $unwrap_post_claimable 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $keeps 4 2
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
  attribute expand 1
    expr-attr
      true
fun-decl $expect_unreachable 1 0
    bool
fun-decl $taken_over 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $status 0
fun-decl $take_over 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $state 0
fun-decl $released 4 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $status 0
fun-decl $release 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $state 0
fun-decl $post_unwrap 3 0
    type-con $state 0
    type-con $state 0
    bool
fun-decl $new_ownees 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptrset 0
    type-con $ptrset 0
  attribute inline 1
    expr-attr
      true
fun-decl $get_memory_allocator 1 0
    type-con $ptr 0
fun-decl $memory_allocator_type 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl $memory_allocator_ref 1 0
    int
fun-decl $program_entry_point 2 0
    type-con $state 0
    bool
fun-decl $program_entry_point_ch 2 0
    type-con $state 0
    bool
fun-decl $is_global 3 1
    type-con $ptr 0
    type-con $ctype 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_global_array 4 1
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $active_option 3 1
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
  attribute inline 1
    expr-attr
      true
fun-decl $ts_active_option 2 0
    type-con $type_state 0
    type-con $field 0
fun-decl $union_active 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $field 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_union_field 3 0
    type-con $ctype 0
    type-con $field 0
    bool
fun-decl $union_havoced 4 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $full_extent 2 0
    type-con $ptr 0
    type-con $ptrset 0
fun-decl $extent 3 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptrset 0
fun-decl $span 2 0
    type-con $ptr 0
    type-con $ptrset 0
fun-decl $in_span_of 3 1
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $first_option_typed 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $struct_extent 2 1
    type-con $ptr 0
    type-con $ptrset 0
  attribute inline 1
    expr-attr
      true
fun-decl $in_struct_extent_of 3 1
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $volatile_span 3 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptrset 0
fun-decl $left_split 3 0
    type-con $ptr 0
    int
    type-con $ptr 0
fun-decl $right_split 3 0
    type-con $ptr 0
    int
    type-con $ptr 0
fun-decl $joined_array 3 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $ptr 0
fun-decl $mutable_root 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $set_in 3 0
    type-con $ptr 0
    type-con $ptrset 0
    bool
fun-decl $set_empty 1 0
    type-con $ptrset 0
fun-decl $set_singleton 2 0
    type-con $ptr 0
    type-con $ptrset 0
fun-decl $non_null_set_singleton 2 0
    type-con $ptr 0
    type-con $ptrset 0
fun-decl $set_union 3 0
    type-con $ptrset 0
    type-con $ptrset 0
    type-con $ptrset 0
fun-decl $set_difference 3 0
    type-con $ptrset 0
    type-con $ptrset 0
    type-con $ptrset 0
fun-decl $set_intersection 3 0
    type-con $ptrset 0
    type-con $ptrset 0
    type-con $ptrset 0
fun-decl $set_subset 3 0
    type-con $ptrset 0
    type-con $ptrset 0
    bool
fun-decl $set_eq 3 0
    type-con $ptrset 0
    type-con $ptrset 0
    bool
fun-decl $set_cardinality 2 0
    type-con $ptrset 0
    int
fun-decl $set_universe 1 0
    type-con $ptrset 0
fun-decl $set_disjoint 3 0
    type-con $ptrset 0
    type-con $ptrset 0
    bool
fun-decl $id_set_disjoint 4 0
    type-con $ptr 0
    type-con $ptrset 0
    type-con $ptrset 0
    int
fun-decl $set_in3 3 0
    type-con $ptr 0
    type-con $ptrset 0
    bool
fun-decl $set_in2 3 0
    type-con $ptr 0
    type-con $ptrset 0
    bool
fun-decl $in_some_owns 2 0
    type-con $ptr 0
    bool
fun-decl $set_in0 3 0
    type-con $ptr 0
    type-con $ptrset 0
    bool
fun-decl sk_hack 2 0
    bool
    bool
fun-decl $writes_nothing 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $array 3 0
    type-con $ctype 0
    int
    type-con $ctype 0
fun-decl $element_type 2 0
    type-con $ctype 0
    type-con $ctype 0
fun-decl $array_length 2 0
    type-con $ctype 0
    int
fun-decl $is_array_elt 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $inlined_array 3 1
    type-con $ptr 0
    type-con $ctype 0
    type-con $ptr 0
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $idx 4 0
    type-con $ptr 0
    int
    type-con $ctype 0
    type-con $ptr 0
fun-decl $add.mul 4 2
    int
    int
    int
    int
  attribute inline 1
    expr-attr
      true
  attribute expand 1
    expr-attr
      true
fun-decl $add 3 2
    int
    int
    int
  attribute inline 1
    expr-attr
      true
  attribute expand 1
    expr-attr
      true
fun-decl $is_array_vol_or_nonvol 6 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $is_array 5 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $is_thread_local_array 5 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_mutable_array 5 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_array_emb 6 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $is_array_emb_path 8 1
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    type-con $ptr 0
    type-con $field 0
    bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $array_field_properties 6 1
    type-con $field 0
    type-con $ctype 0
    int
    bool
    bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $no_inline_array_field_properties 6 1
    type-con $field 0
    type-con $ctype 0
    int
    bool
    bool
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $array_elt_emb 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $array_members 4 0
    type-con $ptr 0
    type-con $ctype 0
    int
    type-con $ptrset 0
fun-decl $array_range 4 0
    type-con $ptr 0
    type-con $ctype 0
    int
    type-con $ptrset 0
fun-decl $non_null_array_range 4 0
    type-con $ptr 0
    type-con $ctype 0
    int
    type-con $ptrset 0
fun-decl $non_null_extent 3 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptrset 0
fun-decl $as_array 4 1
    type-con $ptr 0
    type-con $ctype 0
    int
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $array_eq 6 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $index_within 3 0
    type-con $ptr 0
    type-con $ptr 0
    int
fun-decl $in_array 5 1
    type-con $ptr 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_array_full_extent_of 5 1
    type-con $ptr 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_array_extent_of 6 1
    type-con $state 0
    type-con $ptr 0
    type-con $ptr 0
    type-con $ctype 0
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range 4 1
    int
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $bool_to_int 2 1
    bool
    int
  attribute inline 1
    expr-attr
      true
fun-decl $int_to_bool 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $read_bool 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $ite.int 4 3
    bool
    int
    int
    int
  attribute external 1
    string-attr ITE
  attribute bvz 1
    string-attr ITE
  attribute bvint 1
    string-attr ITE
fun-decl $ite.bool 4 3
    bool
    bool
    bool
    bool
  attribute external 1
    string-attr ITE
  attribute bvz 1
    string-attr ITE
  attribute bvint 1
    string-attr ITE
fun-decl $ite.ptr 4 3
    bool
    type-con $ptr 0
    type-con $ptr 0
    type-con $ptr 0
  attribute external 1
    string-attr ITE
  attribute bvz 1
    string-attr ITE
  attribute bvint 1
    string-attr ITE
fun-decl $ite.struct 4 3
    bool
    type-con $struct 0
    type-con $struct 0
    type-con $struct 0
  attribute external 1
    string-attr ITE
  attribute bvz 1
    string-attr ITE
  attribute bvint 1
    string-attr ITE
fun-decl $ite.ptrset 4 3
    bool
    type-con $ptrset 0
    type-con $ptrset 0
    type-con $ptrset 0
  attribute external 1
    string-attr ITE
  attribute bvz 1
    string-attr ITE
  attribute bvint 1
    string-attr ITE
fun-decl $ite.primitive 4 3
    bool
    type-con $primitive 0
    type-con $primitive 0
    type-con $primitive 0
  attribute external 1
    string-attr ITE
  attribute bvz 1
    string-attr ITE
  attribute bvint 1
    string-attr ITE
fun-decl $ite.record 4 3
    bool
    type-con $record 0
    type-con $record 0
    type-con $record 0
  attribute external 1
    string-attr ITE
  attribute bvz 1
    string-attr ITE
  attribute bvint 1
    string-attr ITE
fun-decl $bool_id 2 1
    bool
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $min.i1 1 0
    int
fun-decl $max.i1 1 0
    int
fun-decl $min.i2 1 0
    int
fun-decl $max.i2 1 0
    int
fun-decl $min.i4 1 0
    int
fun-decl $max.i4 1 0
    int
fun-decl $min.i8 1 0
    int
fun-decl $max.i8 1 0
    int
fun-decl $max.u1 1 0
    int
fun-decl $max.u2 1 0
    int
fun-decl $max.u4 1 0
    int
fun-decl $max.u8 1 0
    int
fun-decl $in_range_i1 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_i2 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_i4 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_i8 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_u1 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_u2 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_u4 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_u8 2 1
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_div_i1 3 1
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_div_i2 3 1
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_div_i4 3 1
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $in_range_div_i8 3 1
    int
    int
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $read_i1 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $read_i2 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $read_i4 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $read_i8 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $read_u1 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $read_u2 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $read_u4 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $read_u8 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $ptr_to_u8 2 0
    type-con $ptr 0
    int
fun-decl $ptr_to_i8 2 0
    type-con $ptr 0
    int
fun-decl $ptr_to_u4 2 0
    type-con $ptr 0
    int
fun-decl $ptr_to_i4 2 0
    type-con $ptr 0
    int
fun-decl $u8_to_ptr 2 1
    int
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $i8_to_ptr 2 1
    int
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $u4_to_ptr 2 1
    int
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $i4_to_ptr 2 1
    int
    type-con $ptr 0
  attribute inline 1
    expr-attr
      true
fun-decl $byte_ptr_subtraction 3 1
    type-con $ptr 0
    type-con $ptr 0
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $_pow2 2 0
    int
    int
fun-decl $_or 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $_xor 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $_and 4 0
    type-con $ctype 0
    int
    int
    int
fun-decl $_not 3 0
    type-con $ctype 0
    int
    int
fun-decl $unchk_add 4 1
    type-con $ctype 0
    int
    int
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $unchk_sub 4 1
    type-con $ctype 0
    int
    int
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $unchk_mul 4 1
    type-con $ctype 0
    int
    int
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $unchk_div 4 1
    type-con $ctype 0
    int
    int
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $unchk_mod 4 1
    type-con $ctype 0
    int
    int
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $_shl 4 1
    type-con $ctype 0
    int
    int
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $_shr 3 1
    int
    int
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $bv_extract_signed 5 0
    int
    int
    int
    int
    int
fun-decl $bv_extract_unsigned 5 0
    int
    int
    int
    int
    int
fun-decl $bv_update 6 0
    int
    int
    int
    int
    int
    int
fun-decl $unchecked 3 0
    type-con $ctype 0
    int
    int
fun-decl $in_range_t 3 0
    type-con $ctype 0
    int
    bool
fun-decl $_mul 3 1
    int
    int
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $get_string_literal 3 0
    int
    int
    type-con $ptr 0
fun-decl $get_fnptr 3 0
    int
    type-con $ctype 0
    type-con $ptr 0
fun-decl $get_fnptr_ref 2 0
    int
    int
fun-decl $get_fnptr_inv 2 0
    int
    int
fun-decl $is_fnptr_type 2 0
    type-con $ctype 0
    bool
fun-decl $is_math_type 2 0
    type-con $ctype 0
    bool
fun-decl $claims_obj 3 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $valid_claim 3 0
    type-con $state 0
    type-con $ptr 0
    bool
fun-decl $claim_initial_assumptions 4 1
    type-con $state 0
    type-con $ptr 0
    type-con $token 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $claim_transitivity_assumptions 5 1
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $token 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $valid_claim_impl 3 1
    type-con $state 0
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $claims_claim 3 0
    type-con $ptr 0
    type-con $ptr 0
    bool
fun-decl $not_shared 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $claimed_closed 3 1
    type-con $state 0
    type-con $ptr 0
    bool
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $no_claim 1 1
    type-con $ptr 0
  attribute unique 0
fun-decl $ref_cnt 3 1
    type-con $state 0
    type-con $ptr 0
    int
  attribute weight 1
    expr-attr
      int-num 0
fun-decl $is_claimable 2 0
    type-con $ctype 0
    bool
fun-decl $is_thread_local_storage 2 0
    type-con $ctype 0
    bool
fun-decl $frame_level 2 0
    type-con $pure_function 0
    int
fun-decl $current_frame_level 1 0
    int
fun-decl $can_use_all_frame_axioms 2 1
    type-con $state 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $can_use_frame_axiom_of 2 1
    type-con $pure_function 0
    bool
  attribute inline 1
    expr-attr
      true
fun-decl $reads_check_pre 2 0
    type-con $state 0
    bool
fun-decl $reads_check_post 2 0
    type-con $state 0
    bool
fun-decl $start_here 1 0
    bool
fun-decl $ptrset_to_int 2 0
    type-con $ptrset 0
    int
fun-decl $int_to_ptrset 2 0
    int
    type-con $ptrset 0
fun-decl $version_to_int 2 0
    type-con $version 0
    int
fun-decl $int_to_version 2 0
    int
    type-con $version 0
fun-decl $vol_version_to_int 2 0
    type-con $vol_version 0
    int
fun-decl $int_to_vol_version 2 0
    int
    type-con $vol_version 0
fun-decl $ptr_to_int 2 0
    type-con $ptr 0
    int
fun-decl $int_to_ptr 2 0
    int
    type-con $ptr 0
fun-decl $precise_test 2 0
    type-con $ptr 0
    bool
fun-decl $updated_only_values 4 0
    type-con $state 0
    type-con $state 0
    type-con $ptrset 0
    bool
fun-decl $updated_only_domains 4 0
    type-con $state 0
    type-con $state 0
    type-con $ptrset 0
    bool
fun-decl $domain_updated_at 5 0
    type-con $state 0
    type-con $state 0
    type-con $ptr 0
    type-con $ptrset 0
    bool
fun-decl l#public 1 1
    type-con $label 0
  attribute unique 0
fun-decl #tok$1^16.24 1 1
    type-con $token 0
  attribute unique 0
fun-decl #tok$1^24.47 1 1
    type-con $token 0
  attribute unique 0
fun-decl #tok$1^23.7 1 1
    type-con $token 0
  attribute unique 0
fun-decl #tok$1^16.3 1 1
    type-con $token 0
  attribute unique 0
fun-decl #loc.p 1 1
    type-con $token 0
  attribute unique 0
fun-decl #tok$1^16.8 1 1
    type-con $token 0
  attribute unique 0
fun-decl #loc.witness 1 1
    type-con $token 0
  attribute unique 0
fun-decl #tok$1^14.3 1 1
    type-con $token 0
  attribute unique 0
fun-decl #loc.max 1 1
    type-con $token 0
  attribute unique 0
fun-decl #tok$1^12.3 1 1
    type-con $token 0
  attribute unique 0
fun-decl #loc.len 1 1
    type-con $token 0
  attribute unique 0
fun-decl #distTp1 1 1
    type-con $ctype 0
  attribute unique 0
fun-decl #loc.arr 1 1
    type-con $token 0
  attribute unique 0
fun-decl #tok$1^6.1 1 1
    type-con $token 0
  attribute unique 0
fun-decl #file^Z?3A?5CC?5Cmax.c 1 1
    type-con $token 0
  attribute unique 0
axiom 0
    =
    fun $sizeof 1
    fun ^^i1 0
    int-num 1
axiom 0
    =
    fun $sizeof 1
    fun ^^i2 0
    int-num 2
axiom 0
    =
    fun $sizeof 1
    fun ^^i4 0
    int-num 4
axiom 0
    =
    fun $sizeof 1
    fun ^^i8 0
    int-num 8
axiom 0
    =
    fun $sizeof 1
    fun ^^u1 0
    int-num 1
axiom 0
    =
    fun $sizeof 1
    fun ^^u2 0
    int-num 2
axiom 0
    =
    fun $sizeof 1
    fun ^^u4 0
    int-num 4
axiom 0
    =
    fun $sizeof 1
    fun ^^u8 0
    int-num 8
axiom 0
    =
    fun $sizeof 1
    fun ^^f4 0
    int-num 4
axiom 0
    =
    fun $sizeof 1
    fun ^^f8 0
    int-num 8
axiom 0
    =
    fun $sizeof 1
    fun ^$#thread_id_t 0
    int-num 1
axiom 0
    =
    fun $sizeof 1
    fun ^$#ptrset 0
    int-num 1
axiom 0
    =
    fun $ptr_level 1
    fun ^^i1 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^i2 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^i4 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^i8 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^u1 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^u2 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^u4 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^u8 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^f4 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^f8 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^mathint 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^bool 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^void 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^claim 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^^root_emb 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^$#ptrset 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^$#thread_id_t 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^$#state_t 0
    int-num 0
axiom 0
    =
    fun $ptr_level 1
    fun ^$#struct 0
    int-num 0
axiom 0
    fun $is_composite 1
    fun ^^claim 0
axiom 0
    fun $is_composite 1
    fun ^^root_emb 0
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $ptr_to 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.145:15
      attribute uniqueId 1
        string-attr 4
      attribute bvZ3Native 1
        string-attr False
    =
    fun $unptr_to 1
    fun $ptr_to 1
    var #n
      type-con $ctype 0
    var #n
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $ptr_to 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.146:15
      attribute uniqueId 1
        string-attr 5
      attribute bvZ3Native 1
        string-attr False
    =
    fun $sizeof 1
    fun $ptr_to 1
    var #n
      type-con $ctype 0
    int-num 8
axiom 0
    forall 2 1 3
      var #r
        type-con $ctype 0
      var #d
        type-con $ctype 0
      pat 1
        fun $map_t 2
        var #r
          type-con $ctype 0
        var #d
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.152:15
      attribute uniqueId 1
        string-attr 6
      attribute bvZ3Native 1
        string-attr False
    =
    fun $map_domain 1
    fun $map_t 2
    var #r
      type-con $ctype 0
    var #d
      type-con $ctype 0
    var #d
      type-con $ctype 0
axiom 0
    forall 2 1 3
      var #r
        type-con $ctype 0
      var #d
        type-con $ctype 0
      pat 1
        fun $map_t 2
        var #r
          type-con $ctype 0
        var #d
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.153:15
      attribute uniqueId 1
        string-attr 7
      attribute bvZ3Native 1
        string-attr False
    =
    fun $map_range 1
    fun $map_t 2
    var #r
      type-con $ctype 0
    var #d
      type-con $ctype 0
    var #r
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $ptr_to 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.158:15
      attribute uniqueId 1
        string-attr 8
      attribute bvZ3Native 1
        string-attr False
    =
    fun $ptr_level 1
    fun $ptr_to 1
    var #n
      type-con $ctype 0
    +
    fun $ptr_level 1
    var #n
      type-con $ctype 0
    int-num 17
axiom 0
    forall 2 1 3
      var #r
        type-con $ctype 0
      var #d
        type-con $ctype 0
      pat 1
        fun $map_t 2
        var #r
          type-con $ctype 0
        var #d
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.159:15
      attribute uniqueId 1
        string-attr 9
      attribute bvZ3Native 1
        string-attr False
    =
    fun $ptr_level 1
    fun $map_t 2
    var #r
      type-con $ctype 0
    var #d
      type-con $ctype 0
    +
    fun $ptr_level 1
    var #r
      type-con $ctype 0
    int-num 23
axiom 0
    forall 1 1 4
      var t
        type-con $ctype 0
      pat 1
        fun $is_primitive 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.167:36
      attribute uniqueId 1
        string-attr 10
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $is_primitive 1
    var t
      type-con $ctype 0
    =
    fun $kind_of 1
    var t
      type-con $ctype 0
    fun $kind_primitive 0
axiom 0
    forall 1 1 4
      var t
        type-con $ctype 0
      pat 1
        fun $is_composite 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.173:36
      attribute uniqueId 1
        string-attr 11
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $is_composite 1
    var t
      type-con $ctype 0
    =
    fun $kind_of 1
    var t
      type-con $ctype 0
    fun $kind_composite 0
axiom 0
    forall 1 1 4
      var t
        type-con $ctype 0
      pat 1
        fun $is_arraytype 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.179:36
      attribute uniqueId 1
        string-attr 12
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $is_arraytype 1
    var t
      type-con $ctype 0
    =
    fun $kind_of 1
    var t
      type-con $ctype 0
    fun $kind_array 0
axiom 0
    forall 1 1 4
      var t
        type-con $ctype 0
      pat 1
        fun $is_threadtype 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.185:37
      attribute uniqueId 1
        string-attr 13
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $is_threadtype 1
    var t
      type-con $ctype 0
    =
    fun $kind_of 1
    var t
      type-con $ctype 0
    fun $kind_thread 0
axiom 0
    forall 1 1 4
      var t
        type-con $ctype 0
      pat 1
        fun $is_composite 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.198:15
      attribute uniqueId 1
        string-attr 14
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $is_composite 1
    var t
      type-con $ctype 0
    fun $is_non_primitive 1
    var t
      type-con $ctype 0
axiom 0
    forall 1 1 4
      var t
        type-con $ctype 0
      pat 1
        fun $is_arraytype 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.199:15
      attribute uniqueId 1
        string-attr 15
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $is_arraytype 1
    var t
      type-con $ctype 0
    fun $is_non_primitive 1
    var t
      type-con $ctype 0
axiom 0
    forall 1 1 4
      var t
        type-con $ctype 0
      pat 1
        fun $is_threadtype 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.200:15
      attribute uniqueId 1
        string-attr 16
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $is_threadtype 1
    var t
      type-con $ctype 0
    fun $is_non_primitive 1
    var t
      type-con $ctype 0
axiom 0
    forall 2 1 3
      var #r
        type-con $ctype 0
      var #d
        type-con $ctype 0
      pat 1
        fun $map_t 2
        var #r
          type-con $ctype 0
        var #d
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.208:15
      attribute uniqueId 1
        string-attr 17
      attribute bvZ3Native 1
        string-attr False
    fun $is_primitive 1
    fun $map_t 2
    var #r
      type-con $ctype 0
    var #d
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $ptr_to 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.209:15
      attribute uniqueId 1
        string-attr 18
      attribute bvZ3Native 1
        string-attr False
    fun $is_primitive 1
    fun $ptr_to 1
    var #n
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var #n
        type-con $ctype 0
      pat 1
        fun $is_primitive 1
        var #n
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.210:15
      attribute uniqueId 1
        string-attr 19
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is_primitive 1
    var #n
      type-con $ctype 0
    not
    fun $is_claimable 1
    var #n
      type-con $ctype 0
axiom 0
    fun $is_primitive 1
    fun ^^void 0
axiom 0
    fun $is_primitive 1
    fun ^^bool 0
axiom 0
    fun $is_primitive 1
    fun ^^mathint 0
axiom 0
    fun $is_primitive 1
    fun ^$#ptrset 0
axiom 0
    fun $is_primitive 1
    fun ^$#state_t 0
axiom 0
    fun $is_threadtype 1
    fun ^$#thread_id_t 0
axiom 0
    fun $is_primitive 1
    fun ^^i1 0
axiom 0
    fun $is_primitive 1
    fun ^^i2 0
axiom 0
    fun $is_primitive 1
    fun ^^i4 0
axiom 0
    fun $is_primitive 1
    fun ^^i8 0
axiom 0
    fun $is_primitive 1
    fun ^^u1 0
axiom 0
    fun $is_primitive 1
    fun ^^u2 0
axiom 0
    fun $is_primitive 1
    fun ^^u4 0
axiom 0
    fun $is_primitive 1
    fun ^^u8 0
axiom 0
    fun $is_primitive 1
    fun ^^f4 0
axiom 0
    fun $is_primitive 1
    fun ^^f8 0
axiom 0
    =
    fun $me 0
    fun $ptr 2
    fun ^$#thread_id_t 0
    fun $me_ref 0
axiom 0
    forall 3 0 4
      var M
        type-con $memory_t 0
      var p
        type-con $ptr 0
      var v
        int
      attribute qid 1
        string-attr VccPrelu.238:15
      attribute uniqueId 1
        string-attr 20
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $select.mem 2
    fun $store.mem 3
    var M
      type-con $memory_t 0
    var p
      type-con $ptr 0
    var v
      int
    var p
      type-con $ptr 0
    var v
      int
axiom 0
    forall 4 0 4
      var M
        type-con $memory_t 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var v
        int
      attribute qid 1
        string-attr VccPrelu.240:15
      attribute uniqueId 1
        string-attr 21
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    or 2
    =
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    =
    fun $select.mem 2
    fun $store.mem 3
    var M
      type-con $memory_t 0
    var p
      type-con $ptr 0
    var v
      int
    var q
      type-con $ptr 0
    fun $select.mem 2
    var M
      type-con $memory_t 0
    var q
      type-con $ptr 0
axiom 0
    forall 3 0 4
      var M
        type-con $typemap_t 0
      var p
        type-con $ptr 0
      var v
        type-con $type_state 0
      attribute qid 1
        string-attr VccPrelu.249:15
      attribute uniqueId 1
        string-attr 22
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $select.tm 2
    fun $store.tm 3
    var M
      type-con $typemap_t 0
    var p
      type-con $ptr 0
    var v
      type-con $type_state 0
    var p
      type-con $ptr 0
    var v
      type-con $type_state 0
axiom 0
    forall 4 0 4
      var M
        type-con $typemap_t 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var v
        type-con $type_state 0
      attribute qid 1
        string-attr VccPrelu.251:15
      attribute uniqueId 1
        string-attr 23
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    or 2
    =
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    =
    fun $select.tm 2
    fun $store.tm 3
    var M
      type-con $typemap_t 0
    var p
      type-con $ptr 0
    var v
      type-con $type_state 0
    var q
      type-con $ptr 0
    fun $select.tm 2
    var M
      type-con $typemap_t 0
    var q
      type-con $ptr 0
axiom 0
    forall 3 0 4
      var M
        type-con $statusmap_t 0
      var p
        type-con $ptr 0
      var v
        type-con $status 0
      attribute qid 1
        string-attr VccPrelu.260:15
      attribute uniqueId 1
        string-attr 24
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $select.sm 2
    fun $store.sm 3
    var M
      type-con $statusmap_t 0
    var p
      type-con $ptr 0
    var v
      type-con $status 0
    var p
      type-con $ptr 0
    var v
      type-con $status 0
axiom 0
    forall 4 0 4
      var M
        type-con $statusmap_t 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var v
        type-con $status 0
      attribute qid 1
        string-attr VccPrelu.262:15
      attribute uniqueId 1
        string-attr 25
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    or 2
    =
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    =
    fun $select.sm 2
    fun $store.sm 3
    var M
      type-con $statusmap_t 0
    var p
      type-con $ptr 0
    var v
      type-con $status 0
    var q
      type-con $ptr 0
    fun $select.sm 2
    var M
      type-con $statusmap_t 0
    var q
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var r
        type-con $ptr 0
      pat 2
        fun $extent_hint 2
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        fun $extent_hint 2
        var q
          type-con $ptr 0
        var r
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.288:15
      attribute uniqueId 1
        string-attr 26
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $extent_hint 2
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    fun $extent_hint 2
    var q
      type-con $ptr 0
    var r
      type-con $ptr 0
    fun $extent_hint 2
    var p
      type-con $ptr 0
    var r
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $typ 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.290:15
      attribute uniqueId 1
        string-attr 27
      attribute bvZ3Native 1
        string-attr False
    fun $extent_hint 2
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var t
        type-con $ctype 0
      var s
        type-con $ctype 0
      var min
        int
      var max
        int
      pat 1
        fun $is_nested_range 4
        var t
          type-con $ctype 0
        var s
          type-con $ctype 0
        var min
          int
        var max
          int
      attribute qid 1
        string-attr VccPrelu.297:27
      attribute uniqueId 1
        string-attr 28
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_nested_range 4
    var t
      type-con $ctype 0
    var s
      type-con $ctype 0
    var min
      int
    var max
      int
    and 3
    fun $is_nested 2
    var t
      type-con $ctype 0
    var s
      type-con $ctype 0
    =
    fun $nesting_min 2
    var t
      type-con $ctype 0
    var s
      type-con $ctype 0
    var min
      int
    =
    fun $nesting_max 2
    var t
      type-con $ctype 0
    var s
      type-con $ctype 0
    var max
      int
axiom 0
    forall 2 0 4
      var #t
        type-con $ctype 0
      var #b
        int
      attribute qid 1
        string-attr VccPrelu.334:15
      attribute uniqueId 1
        string-attr 29
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $typ 1
    fun $ptr 2
    var #t
      type-con $ctype 0
    var #b
      int
    var #t
      type-con $ctype 0
axiom 0
    forall 2 0 4
      var #t
        type-con $ctype 0
      var #b
        int
      attribute qid 1
        string-attr VccPrelu.335:15
      attribute uniqueId 1
        string-attr 30
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $ref 1
    fun $ptr 2
    var #t
      type-con $ctype 0
    var #b
      int
    var #b
      int
axiom 0
    forall 2 1 4
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        fun $ghost_ref 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.344:15
      attribute uniqueId 1
        string-attr 31
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    and 2
    =
    fun $ghost_emb 1
    fun $ghost_ref 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
    =
    fun $ghost_path 1
    fun $ghost_ref 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var f
      type-con $field 0
axiom 0
    forall 2 1 4
      var fld
        type-con $field 0
      var off
        int
      pat 1
        fun $array_path 2
        var fld
          type-con $field 0
        var off
          int
      attribute qid 1
        string-attr VccPrelu.355:15
      attribute uniqueId 1
        string-attr 32
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    and 3
    not
    fun $is_base_field 1
    fun $array_path 2
    var fld
      type-con $field 0
    var off
      int
    =
    fun $array_path_1 1
    fun $array_path 2
    var fld
      type-con $field 0
    var off
      int
    var fld
      type-con $field 0
    =
    fun $array_path_2 1
    fun $array_path 2
    var fld
      type-con $field 0
    var off
      int
    var off
      int
axiom 0
    =
    fun $null 0
    fun $ptr 2
    fun ^^void 0
    int-num 0
axiom 0
    forall 2 0 4
      var #p
        type-con $ptr 0
      var #t
        type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.368:15
      attribute uniqueId 1
        string-attr 33
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $is 2
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
    =
    fun $typ 1
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
axiom 0
    forall 2 1 3
      var #p
        type-con $ptr 0
      var #t
        type-con $ctype 0
      pat 1
        fun $is 2
        var #p
          type-con $ptr 0
        var #t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.370:15
      attribute uniqueId 1
        string-attr 34
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is 2
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
    =
    var #p
      type-con $ptr 0
    fun $ptr 2
    var #t
      type-con $ctype 0
    fun $ref 1
    var #p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var r
        int
      var f
        type-con $field 0
      pat 1
        fun $containing_struct 2
        fun $dot 2
        fun $ptr 2
        fun $field_parent_type 1
        var f
          type-con $field 0
        var r
          int
        var f
          type-con $field 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.388:15
      attribute uniqueId 1
        string-attr 35
      attribute bvZ3Native 1
        string-attr False
    =
    fun $containing_struct 2
    fun $dot 2
    fun $ptr 2
    fun $field_parent_type 1
    var f
      type-con $field 0
    var r
      int
    var f
      type-con $field 0
    var f
      type-con $field 0
    fun $ptr 2
    fun $field_parent_type 1
    var f
      type-con $field 0
    var r
      int
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        fun $containing_struct 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.392:15
      attribute uniqueId 1
        string-attr 36
      attribute bvZ3Native 1
        string-attr False
    =
    fun $containing_struct 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    fun $ptr 2
    fun $field_parent_type 1
    var f
      type-con $field 0
    fun $containing_struct_ref 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      pat 1
        fun $dot 2
        fun $containing_struct 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.396:15
      attribute uniqueId 1
        string-attr 37
      attribute bvZ3Native 1
        string-attr False
    implies
    >=
    fun $field_offset 1
    var f
      type-con $field 0
    int-num 0
    =
    fun $ref 1
    fun $dot 2
    fun $containing_struct 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var f
      type-con $field 0
    fun $ref 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var ts
        type-con $type_state 0
      pat 1
        fun $ts_emb 1
        var ts
          type-con $type_state 0
      attribute qid 1
        string-attr VccPrelu.427:15
      attribute uniqueId 1
        string-attr 38
      attribute bvZ3Native 1
        string-attr False
    and 2
    not
    =
    fun $kind_of 1
    fun $typ 1
    fun $ts_emb 1
    var ts
      type-con $type_state 0
    fun $kind_primitive 0
    fun $is_non_primitive 1
    fun $typ 1
    fun $ts_emb 1
    var ts
      type-con $type_state 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 2
        fun $typed 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        fun $ts_emb 1
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.430:15
      attribute uniqueId 1
        string-attr 39
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $typed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $typed 2
    var S
      type-con $state 0
    fun $ts_emb 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $ts_is_volatile 1
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.440:15
      attribute uniqueId 1
        string-attr 40
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $good_state 1
    var S
      type-con $state 0
    fun $ts_is_volatile 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    =
    fun $kind_of 1
    fun $typ 1
    var p
      type-con $ptr 0
    fun $kind_primitive 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $select.sm 2
        fun $statusmap 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.456:15
      attribute uniqueId 1
        string-attr 41
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    or 2
    <=
    fun $timestamp 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $current_timestamp 1
    var S
      type-con $state 0
    not
    fun $ts_typed 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    fun $good_state 1
    fun $vs_state 1
    fun $struct_zero 0
axiom 0
    forall 1 0 3
      var s
        type-con $struct 0
      attribute qid 1
        string-attr VccPrelu.486:15
      attribute uniqueId 1
        string-attr 42
      attribute bvZ3Native 1
        string-attr False
    fun $good_state 1
    fun $vs_state 1
    var s
      type-con $struct 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $vs_ctor 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.489:15
      attribute uniqueId 1
        string-attr 43
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    =
    fun $vs_base_ref 1
    fun $vs_ctor 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $ref 1
    var p
      type-con $ptr 0
    =
    fun $vs_state 1
    fun $vs_ctor 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var S
      type-con $state 0
axiom 0
    forall 6 1 3
      var r
        type-con $record 0
      var f
        type-con $field 0
      var val_bitsize
        int
      var from
        int
      var to
        int
      var repl
        int
      pat 1
        fun $rec_update_bv 6
        var r
          type-con $record 0
        var f
          type-con $field 0
        var val_bitsize
          int
        var from
          int
        var to
          int
        var repl
          int
      attribute qid 1
        string-attr VccPrelu.502:25
      attribute uniqueId 1
        string-attr 44
      attribute bvZ3Native 1
        string-attr False
    =
    fun $rec_update_bv 6
    var r
      type-con $record 0
    var f
      type-con $field 0
    var val_bitsize
      int
    var from
      int
    var to
      int
    var repl
      int
    fun $rec_update 3
    var r
      type-con $record 0
    var f
      type-con $field 0
    fun $bv_update 5
    fun $rec_fetch 2
    var r
      type-con $record 0
    var f
      type-con $field 0
    var val_bitsize
      int
    var from
      int
    var to
      int
    var repl
      int
axiom 0
    forall 1 0 3
      var f
        type-con $field 0
      attribute qid 1
        string-attr VccPrelu.505:15
      attribute uniqueId 1
        string-attr 45
      attribute bvZ3Native 1
        string-attr False
    =
    fun $rec_fetch 2
    fun $rec_zero 0
    var f
      type-con $field 0
    int-num 0
axiom 0
    forall 3 1 3
      var r
        type-con $record 0
      var f
        type-con $field 0
      var v
        int
      pat 1
        fun $rec_fetch 2
        fun $rec_update 3
        var r
          type-con $record 0
        var f
          type-con $field 0
        var v
          int
        var f
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.507:15
      attribute uniqueId 1
        string-attr 46
      attribute bvZ3Native 1
        string-attr False
    =
    fun $rec_fetch 2
    fun $rec_update 3
    var r
      type-con $record 0
    var f
      type-con $field 0
    var v
      int
    var f
      type-con $field 0
    var v
      int
axiom 0
    forall 4 1 3
      var r
        type-con $record 0
      var f1
        type-con $field 0
      var f2
        type-con $field 0
      var v
        int
      pat 1
        fun $rec_fetch 2
        fun $rec_update 3
        var r
          type-con $record 0
        var f1
          type-con $field 0
        var v
          int
        var f2
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.510:15
      attribute uniqueId 1
        string-attr 47
      attribute bvZ3Native 1
        string-attr False
    or 2
    =
    fun $rec_fetch 2
    fun $rec_update 3
    var r
      type-con $record 0
    var f1
      type-con $field 0
    var v
      int
    var f2
      type-con $field 0
    fun $rec_fetch 2
    var r
      type-con $record 0
    var f2
      type-con $field 0
    =
    var f1
      type-con $field 0
    var f2
      type-con $field 0
axiom 0
    forall 1 1 3
      var t
        type-con $ctype 0
      pat 1
        fun $is_record_type 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.516:15
      attribute uniqueId 1
        string-attr 48
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is_record_type 1
    var t
      type-con $ctype 0
    fun $is_primitive 1
    var t
      type-con $ctype 0
axiom 0
    forall 3 1 3
      var p
        type-con $ctype 0
      var f
        type-con $field 0
      var ft
        type-con $ctype 0
      pat 2
        fun $is_record_field 3
        var p
          type-con $ctype 0
        var f
          type-con $field 0
        var ft
          type-con $ctype 0
        fun $is_record_type 1
        var ft
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.519:15
      attribute uniqueId 1
        string-attr 49
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $is_record_field 3
    var p
      type-con $ctype 0
    var f
      type-con $field 0
    var ft
      type-con $ctype 0
    fun $is_record_type 1
    var ft
      type-con $ctype 0
    =
    fun $as_record_record_field 1
    var f
      type-con $field 0
    var f
      type-con $field 0
axiom 0
    forall 2 1 3
      var r1
        type-con $record 0
      var r2
        type-con $record 0
      pat 1
        fun $rec_eq 2
        var r1
          type-con $record 0
        var r2
          type-con $record 0
      attribute qid 1
        string-attr VccPrelu.522:18
      attribute uniqueId 1
        string-attr 50
      attribute bvZ3Native 1
        string-attr False
    =
    fun $rec_eq 2
    var r1
      type-con $record 0
    var r2
      type-con $record 0
    =
    var r1
      type-con $record 0
    var r2
      type-con $record 0
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        fun $rec_base_eq 2
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.524:23
      attribute uniqueId 1
        string-attr 51
      attribute bvZ3Native 1
        string-attr False
    =
    fun $rec_base_eq 2
    var x
      int
    var y
      int
    =
    var x
      int
    var y
      int
axiom 0
    forall 1 0 3
      var r
        type-con $record 0
      attribute qid 1
        string-attr VccPrelu.530:15
      attribute uniqueId 1
        string-attr 52
      attribute bvZ3Native 1
        string-attr False
    =
    fun $int_to_record 1
    fun $record_to_int 1
    var r
      type-con $record 0
    var r
      type-con $record 0
axiom 0
    forall 2 1 3
      var r1
        type-con $record 0
      var r2
        type-con $record 0
      pat 1
        fun $rec_eq 2
        var r1
          type-con $record 0
        var r2
          type-con $record 0
      attribute qid 1
        string-attr VccPrelu.532:15
      attribute uniqueId 1
        string-attr 54
      attribute bvZ3Native 1
        string-attr False
    implies
    forall 1 0 3
      var f
        type-con $field 0
      attribute qid 1
        string-attr VccPrelu.534:11
      attribute uniqueId 1
        string-attr 53
      attribute bvZ3Native 1
        string-attr False
    fun $rec_base_eq 2
    fun $rec_fetch 2
    var r1
      type-con $record 0
    var f
      type-con $field 0
    fun $rec_fetch 2
    var r2
      type-con $record 0
    var f
      type-con $field 0
    fun $rec_eq 2
    var r1
      type-con $record 0
    var r2
      type-con $record 0
axiom 0
    forall 3 1 3
      var r1
        type-con $record 0
      var r2
        type-con $record 0
      var f
        type-con $field 0
      pat 1
        fun $rec_base_eq 2
        fun $rec_fetch 2
        var r1
          type-con $record 0
        var f
          type-con $field 0
        fun $rec_fetch 2
        var r2
          type-con $record 0
        fun $as_record_record_field 1
        var f
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.536:15
      attribute uniqueId 1
        string-attr 55
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $rec_eq 2
    fun $int_to_record 1
    fun $rec_fetch 2
    var r1
      type-con $record 0
    var f
      type-con $field 0
    fun $int_to_record 1
    fun $rec_fetch 2
    var r2
      type-con $record 0
    var f
      type-con $field 0
    fun $rec_base_eq 2
    fun $rec_fetch 2
    var r1
      type-con $record 0
    var f
      type-con $field 0
    fun $rec_fetch 2
    var r2
      type-con $record 0
    var f
      type-con $field 0
axiom 0
    fun $has_volatile_owns_set 1
    fun ^^claim 0
axiom 0
    forall 2 1 3
      var #p
        type-con $ptr 0
      var t
        type-con $ctype 0
      pat 1
        fun $dot 2
        var #p
          type-con $ptr 0
        fun $owns_set_field 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.555:15
      attribute uniqueId 1
        string-attr 56
      attribute bvZ3Native 1
        string-attr False
    =
    fun $dot 2
    var #p
      type-con $ptr 0
    fun $owns_set_field 1
    var t
      type-con $ctype 0
    fun $ptr 2
    fun ^$#ptrset 0
    fun $ghost_ref 2
    var #p
      type-con $ptr 0
    fun $owns_set_field 1
    var t
      type-con $ctype 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 2
        fun $is_primitive 1
        fun $typ 1
        var p
          type-con $ptr 0
        fun $owner 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.567:15
      attribute uniqueId 1
        string-attr 57
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $is_primitive 1
    fun $typ 1
    var p
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $owner 2
    var S
      type-con $state 0
    fun $ts_emb 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 2
        fun $is_non_primitive 1
        fun $typ 1
        var p
          type-con $ptr 0
        fun $owner 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.569:15
      attribute uniqueId 1
        string-attr 58
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $is_non_primitive 1
    fun $typ 1
    var p
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $st_owner 1
    fun $select.sm 2
    fun $statusmap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 2
        fun $is_primitive 1
        fun $typ 1
        var p
          type-con $ptr 0
        fun $closed 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.572:15
      attribute uniqueId 1
        string-attr 59
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $is_primitive 1
    fun $typ 1
    var p
      type-con $ptr 0
    =
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $st_closed 1
    fun $select.sm 2
    fun $statusmap 1
    var S
      type-con $state 0
    fun $ts_emb 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 2
        fun $is_non_primitive 1
        fun $typ 1
        var p
          type-con $ptr 0
        fun $closed 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.574:15
      attribute uniqueId 1
        string-attr 60
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $is_non_primitive 1
    fun $typ 1
    var p
      type-con $ptr 0
    =
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $st_closed 1
    fun $select.sm 2
    fun $statusmap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 2
        fun $is_primitive 1
        fun $typ 1
        var p
          type-con $ptr 0
        fun $timestamp 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.577:15
      attribute uniqueId 1
        string-attr 61
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $is_primitive 1
    fun $typ 1
    var p
      type-con $ptr 0
    =
    fun $timestamp 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $st_timestamp 1
    fun $select.sm 2
    fun $statusmap 1
    var S
      type-con $state 0
    fun $ts_emb 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 2
        fun $is_non_primitive 1
        fun $typ 1
        var p
          type-con $ptr 0
        fun $timestamp 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.579:15
      attribute uniqueId 1
        string-attr 62
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $is_non_primitive 1
    fun $typ 1
    var p
      type-con $ptr 0
    =
    fun $timestamp 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $st_timestamp 1
    fun $select.sm 2
    fun $statusmap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    fun $position_marker 0
axiom 0
    forall 1 1 3
      var s
        type-con $status 0
      pat 1
        fun $st_owner 1
        var s
          type-con $status 0
      attribute qid 1
        string-attr VccPrelu.585:15
      attribute uniqueId 1
        string-attr 63
      attribute bvZ3Native 1
        string-attr False
    and 2
    not
    =
    fun $kind_of 1
    fun $typ 1
    fun $st_owner 1
    var s
      type-con $status 0
    fun $kind_primitive 0
    fun $is_non_primitive 1
    fun $typ 1
    fun $st_owner 1
    var s
      type-con $status 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var #p
        type-con $ptr 0
      pat 1
        fun $owns 2
        var S
          type-con $state 0
        var #p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.593:28
      attribute uniqueId 1
        string-attr 64
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $owns 2
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $int_to_ptrset 1
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    fun $dot 2
    var #p
      type-con $ptr 0
    fun $owns_set_field 1
    fun $typ 1
    var #p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $mutable 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.608:31
      attribute uniqueId 1
        string-attr 65
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $mutable 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 3
    fun $typed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    not
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var #p
        type-con $ptr 0
      pat 1
        fun $typed 2
        var S
          type-con $state 0
        var #p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.619:11
      attribute uniqueId 1
        string-attr 66
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $good_state 1
    var S
      type-con $state 0
    =
    fun $typed 2
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $ts_typed 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var #p
        type-con $ptr 0
      pat 1
        fun $typed 2
        var S
          type-con $state 0
        var #p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.621:11
      attribute uniqueId 1
        string-attr 67
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $good_state 1
    var S
      type-con $state 0
    fun $typed 2
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    >
    fun $ref 1
    var #p
      type-con $ptr 0
    int-num 0
axiom 0
    forall 3 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var p
        type-con $ptr 0
      pat 2
        fun $select.sm 2
        fun $statusmap 1
        var S2
          type-con $state 0
        var p
          type-con $ptr 0
        fun $call_transition 2
        var S1
          type-con $state 0
        var S2
          type-con $state 0
      attribute qid 1
        string-attr VccPrelu.685:15
      attribute uniqueId 1
        string-attr 68
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $call_transition 2
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    fun $instantiate_st 1
    fun $select.sm 2
    fun $statusmap 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $is_domain_root 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.711:26
      attribute uniqueId 1
        string-attr 69
      attribute bvZ3Native 1
        string-attr False
    =
    fun $is_domain_root 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    true
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $in_wrapped_domain 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.714:29
      attribute uniqueId 1
        string-attr 71
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_wrapped_domain 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    exists 1 1 3
      var q
        type-con $ptr 0
      pat 1
        fun $set_in2 2
        var p
          type-con $ptr 0
        fun $ver_domain 1
        fun $read_version 2
        var S
          type-con $state 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.715:13
      attribute uniqueId 1
        string-attr 70
      attribute bvZ3Native 1
        string-attr False
    and 8
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $ver_domain 1
    fun $read_version 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    fun $me 0
    fun $is 2
    var q
      type-con $ptr 0
    fun $typ 1
    var q
      type-con $ptr 0
    fun $typed 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    not
    =
    fun $kind_of 1
    fun $typ 1
    var q
      type-con $ptr 0
    fun $kind_primitive 0
    fun $is_non_primitive 1
    fun $typ 1
    var q
      type-con $ptr 0
    fun $is_domain_root 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $thread_local 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.728:24
      attribute uniqueId 1
        string-attr 72
      attribute bvZ3Native 1
        string-attr False
    =
    fun $thread_local 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    fun $typed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    or 2
    and 4
    =
    fun $kind_of 1
    fun $typ 1
    var p
      type-con $ptr 0
    fun $kind_primitive 0
    or 2
    not
    fun $ts_is_volatile 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    not
    fun $closed 2
    var S
      type-con $state 0
    fun $ts_emb 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    not
    =
    fun $kind_of 1
    fun $typ 1
    fun $ts_emb 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $kind_primitive 0
    or 2
    =
    fun $owner 2
    var S
      type-con $state 0
    fun $ts_emb 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    fun $in_wrapped_domain 2
    var S
      type-con $state 0
    fun $ts_emb 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    not
    =
    fun $kind_of 1
    fun $typ 1
    var p
      type-con $ptr 0
    fun $kind_primitive 0
    or 2
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    fun $in_wrapped_domain 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var #s1
        type-con $state 0
      var #p
        type-con $ptr 0
      var typ
        type-con $ctype 0
      pat 1
        fun $inv2 4
        var #s1
          type-con $state 0
        var #s1
          type-con $state 0
        var #p
          type-con $ptr 0
        var typ
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.766:15
      attribute uniqueId 1
        string-attr 73
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $imply_inv 3
    var #s1
      type-con $state 0
    var #p
      type-con $ptr 0
    var typ
      type-con $ctype 0
    fun $inv2 4
    var #s1
      type-con $state 0
    var #s1
      type-con $state 0
    var #p
      type-con $ptr 0
    var typ
      type-con $ctype 0
axiom 0
    forall 4 1 4
      var #s1
        type-con $state 0
      var #s2
        type-con $state 0
      var #p
        type-con $ptr 0
      var #t
        type-con $ctype 0
      pat 1
        fun $sequential 4
        var #s1
          type-con $state 0
        var #s2
          type-con $state 0
        var #p
          type-con $ptr 0
        var #t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.778:34
      attribute uniqueId 1
        string-attr 74
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $sequential 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
    implies
    and 2
    fun $closed 2
    var #s1
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $closed 2
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $spans_the_same 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
axiom 0
    forall 4 1 4
      var #s1
        type-con $state 0
      var #s2
        type-con $state 0
      var #dependant
        type-con $ptr 0
      var #this
        type-con $ptr 0
      pat 1
        fun $depends 4
        var #s1
          type-con $state 0
        var #s2
          type-con $state 0
        var #dependant
          type-con $ptr 0
        var #this
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.781:31
      attribute uniqueId 1
        string-attr 75
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $depends 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #dependant
      type-con $ptr 0
    var #this
      type-con $ptr 0
    or 4
    fun $spans_the_same 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #this
      type-con $ptr 0
    fun $typ 1
    var #this
      type-con $ptr 0
    and 2
    not
    fun $closed 2
    var #s1
      type-con $state 0
    var #dependant
      type-con $ptr 0
    not
    fun $closed 2
    var #s2
      type-con $state 0
    var #dependant
      type-con $ptr 0
    and 2
    fun $inv2 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #dependant
      type-con $ptr 0
    fun $typ 1
    var #dependant
      type-con $ptr 0
    fun $nonvolatile_spans_the_same 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #dependant
      type-con $ptr 0
    fun $typ 1
    var #dependant
      type-con $ptr 0
    fun $is_threadtype 1
    fun $typ 1
    var #dependant
      type-con $ptr 0
axiom 0
    forall 4 1 4
      var #s1
        type-con $state 0
      var #s2
        type-con $state 0
      var #p
        type-con $ptr 0
      var #t
        type-con $ctype 0
      pat 1
        fun $spans_the_same 4
        var #s1
          type-con $state 0
        var #s2
          type-con $state 0
        var #p
          type-con $ptr 0
        var #t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.786:38
      attribute uniqueId 1
        string-attr 76
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $spans_the_same 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
    and 4
    =
    fun $read_version 2
    var #s1
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $read_version 2
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    =
    fun $owns 2
    var #s1
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $owns 2
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    =
    fun $select.tm 2
    fun $typemap 1
    var #s1
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $select.tm 2
    fun $typemap 1
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $state_spans_the_same 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
axiom 0
    forall 4 1 4
      var #s1
        type-con $state 0
      var #s2
        type-con $state 0
      var #p
        type-con $ptr 0
      var #t
        type-con $ctype 0
      pat 1
        fun $nonvolatile_spans_the_same 4
        var #s1
          type-con $state 0
        var #s2
          type-con $state 0
        var #p
          type-con $ptr 0
        var #t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.795:50
      attribute uniqueId 1
        string-attr 77
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $nonvolatile_spans_the_same 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
    and 3
    =
    fun $read_version 2
    var #s1
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $read_version 2
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    =
    fun $select.tm 2
    fun $typemap 1
    var #s1
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $select.tm 2
    fun $typemap 1
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $state_nonvolatile_spans_the_same 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var T
        type-con $ctype 0
      pat 1
        fun $is_primitive 1
        var T
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.813:15
      attribute uniqueId 1
        string-attr 79
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is_primitive 1
    var T
      type-con $ctype 0
    forall 2 1 3
      var r
        int
      var p
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $full_extent 1
        fun $ptr 2
        var T
          type-con $ctype 0
        var r
          int
      attribute qid 1
        string-attr VccPrelu.815:13
      attribute uniqueId 1
        string-attr 78
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $full_extent 1
    fun $ptr 2
    var T
      type-con $ctype 0
    var r
      int
    =
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var r
      int
axiom 0
    forall 1 1 3
      var T
        type-con $ctype 0
      pat 1
        fun $is_primitive 1
        var T
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.818:15
      attribute uniqueId 1
        string-attr 81
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is_primitive 1
    var T
      type-con $ctype 0
    forall 3 1 3
      var S
        type-con $state 0
      var r
        int
      var p
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $extent 2
        var S
          type-con $state 0
        fun $ptr 2
        var T
          type-con $ctype 0
        var r
          int
      attribute qid 1
        string-attr VccPrelu.820:13
      attribute uniqueId 1
        string-attr 80
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $extent 2
    var S
      type-con $state 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var r
      int
    =
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var r
      int
axiom 0
    forall 1 1 3
      var S
        type-con $state 0
      pat 1
        fun $function_entry 1
        var S
          type-con $state 0
      attribute qid 1
        string-attr VccPrelu.835:15
      attribute uniqueId 1
        string-attr 83
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $function_entry 1
    var S
      type-con $state 0
    and 2
    fun $full_stop 1
    var S
      type-con $state 0
    >=
    fun $current_timestamp 1
    var S
      type-con $state 0
    int-num 0
axiom 0
    forall 1 1 3
      var S
        type-con $state 0
      pat 1
        fun $full_stop 1
        var S
          type-con $state 0
      attribute qid 1
        string-attr VccPrelu.838:15
      attribute uniqueId 1
        string-attr 84
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $full_stop 1
    var S
      type-con $state 0
    and 2
    fun $good_state 1
    var S
      type-con $state 0
    fun $invok_state 1
    var S
      type-con $state 0
axiom 0
    forall 1 1 3
      var S
        type-con $state 0
      pat 1
        fun $invok_state 1
        var S
          type-con $state 0
      attribute qid 1
        string-attr VccPrelu.841:15
      attribute uniqueId 1
        string-attr 85
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $invok_state 1
    var S
      type-con $state 0
    fun $good_state 1
    var S
      type-con $state 0
axiom 0
    forall 2 1 3
      var id
        type-con $token 0
      var S
        type-con $state 0
      pat 1
        fun $good_state_ext 2
        var id
          type-con $token 0
        var S
          type-con $state 0
      attribute qid 1
        string-attr VccPrelu.860:15
      attribute uniqueId 1
        string-attr 87
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state_ext 2
    var id
      type-con $token 0
    var S
      type-con $state 0
    fun $good_state 1
    var S
      type-con $state 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var r
        int
      var t
        type-con $ctype 0
      pat 1
        fun $ptr 2
        var t
          type-con $ctype 0
        fun $select.mem 2
        fun $memory 1
        var S
          type-con $state 0
        fun $ptr 2
        fun $ptr_to 1
        var t
          type-con $ctype 0
        var r
          int
      attribute qid 1
        string-attr VccPrelu.872:15
      attribute uniqueId 1
        string-attr 88
      attribute bvZ3Native 1
        string-attr False
    =
    fun $ptr 2
    var t
      type-con $ctype 0
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    fun $ptr 2
    fun $ptr_to 1
    var t
      type-con $ctype 0
    var r
      int
    fun $read_ptr_m 3
    var S
      type-con $state 0
    fun $ptr 2
    fun $ptr_to 1
    var t
      type-con $ctype 0
    var r
      int
    var t
      type-con $ctype 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_version 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.886:36
      attribute uniqueId 1
        string-attr 89
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $read_version 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $int_to_version 1
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $domain 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.889:30
      attribute uniqueId 1
        string-attr 90
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $domain 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $ver_domain 1
    fun $read_version 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 4 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var l
        type-con $label 0
      pat 1
        fun $in_domain_lab 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        var l
          type-con $label 0
      attribute qid 1
        string-attr VccPrelu.899:15
      attribute uniqueId 1
        string-attr 91
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $in_domain_lab 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    var l
      type-con $label 0
    fun $inv_lab 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var l
      type-con $label 0
axiom 0
    forall 4 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var l
        type-con $label 0
      pat 1
        fun $in_domain_lab 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        var l
          type-con $label 0
      attribute qid 1
        string-attr VccPrelu.902:15
      attribute uniqueId 1
        string-attr 92
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $in_domain_lab 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    var l
      type-con $label 0
    fun $in_domain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 4 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var l
        type-con $label 0
      pat 1
        fun $in_vdomain_lab 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        var l
          type-con $label 0
      attribute qid 1
        string-attr VccPrelu.905:15
      attribute uniqueId 1
        string-attr 93
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $in_vdomain_lab 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    var l
      type-con $label 0
    fun $inv_lab 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var l
      type-con $label 0
axiom 0
    forall 4 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var l
        type-con $label 0
      pat 1
        fun $in_vdomain_lab 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
        var l
          type-con $label 0
      attribute qid 1
        string-attr VccPrelu.908:15
      attribute uniqueId 1
        string-attr 94
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $in_vdomain_lab 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    var l
      type-con $label 0
    fun $in_vdomain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 3 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      pat 1
        fun $in_domain 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.914:15
      attribute uniqueId 1
        string-attr 96
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $in_domain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    and 3
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $domain 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    forall 1 1 3
      var r
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var r
          type-con $ptr 0
        fun $owns 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.918:16
      attribute uniqueId 1
        string-attr 95
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    not
    fun $has_volatile_owns_set 1
    fun $typ 1
    var p
      type-con $ptr 0
    fun $set_in 2
    var r
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $set_in2 2
    var r
      type-con $ptr 0
    fun $ver_domain 1
    fun $read_version 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $in_domain 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.923:15
      attribute uniqueId 1
        string-attr 97
      attribute bvZ3Native 1
        string-attr False
    implies
    and 7
    fun $full_stop 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    fun $is 2
    var p
      type-con $ptr 0
    fun $typ 1
    var p
      type-con $ptr 0
    fun $typed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    not
    =
    fun $kind_of 1
    fun $typ 1
    var p
      type-con $ptr 0
    fun $kind_primitive 0
    fun $is_non_primitive 1
    fun $typ 1
    var p
      type-con $ptr 0
    fun $in_domain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      pat 1
        fun $in_domain 3
        var S
          type-con $state 0
        var q
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.932:15
      attribute uniqueId 1
        string-attr 98
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    and 2
    fun $full_stop 1
    var S
      type-con $state 0
    fun $set_in 2
    var q
      type-con $ptr 0
    fun $domain 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $in_domain 3
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 4 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var r
        type-con $ptr 0
      pat 2
        fun $set_in 2
        var q
          type-con $ptr 0
        fun $domain 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        fun $in_domain 3
        var S
          type-con $state 0
        var r
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.936:15
      attribute uniqueId 1
        string-attr 99
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    and 3
    not
    fun $has_volatile_owns_set 1
    fun $typ 1
    var q
      type-con $ptr 0
    fun $set_in 2
    var q
      type-con $ptr 0
    fun $domain 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $set_in0 2
    var r
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    and 2
    fun $in_domain 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $set_in0 2
    var r
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
axiom 0
    forall 4 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      var r
        type-con $ptr 0
      pat 2
        fun $set_in 2
        var q
          type-con $ptr 0
        fun $domain 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        fun $in_vdomain 3
        var S
          type-con $state 0
        var r
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.941:15
      attribute uniqueId 1
        string-attr 101
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    and 3
    fun $has_volatile_owns_set 1
    fun $typ 1
    var q
      type-con $ptr 0
    fun $set_in 2
    var q
      type-con $ptr 0
    fun $domain 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    forall 1 0 3
      var S1
        type-con $state 0
      attribute qid 1
        string-attr VccPrelu.945:11
      attribute uniqueId 1
        string-attr 100
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $inv2 4
    var S1
      type-con $state 0
    var S1
      type-con $state 0
    var q
      type-con $ptr 0
    fun $typ 1
    var q
      type-con $ptr 0
    =
    fun $read_version 2
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $read_version 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    =
    fun $domain 2
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $domain 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $set_in0 2
    var r
      type-con $ptr 0
    fun $owns 2
    var S1
      type-con $state 0
    var q
      type-con $ptr 0
    and 2
    fun $in_vdomain 3
    var S
      type-con $state 0
    var r
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $set_in0 2
    var r
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
axiom 0
    forall 3 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      pat 1
        fun $in_vdomain 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.952:15
      attribute uniqueId 1
        string-attr 102
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $in_vdomain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    fun $in_domain 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var d
        type-con $ptr 0
      var f
        type-con $field 0
      pat 3
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $domain 2
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        fun $is_primitive_non_volatile_field 1
        var f
          type-con $field 0
        fun $select.mem 2
        fun $memory 1
        var S
          type-con $state 0
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.957:15
      attribute uniqueId 1
        string-attr 103
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $domain 2
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    fun $is_primitive_non_volatile_field 1
    var f
      type-con $field 0
    =
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    fun $fetch_from_domain 2
    fun $read_version 2
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 3 2 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var d
        type-con $ptr 0
      pat 3
        fun $full_stop 1
        var S
          type-con $state 0
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $domain 2
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        fun $select.sm 2
        fun $statusmap 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      pat 3
        fun $full_stop 1
        var S
          type-con $state 0
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $domain 2
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.962:15
      attribute uniqueId 1
        string-attr 104
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $full_stop 1
    var S
      type-con $state 0
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $domain 2
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    and 2
    fun $typed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    not
    fun $ts_is_volatile 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 4 2 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var d
        type-con $ptr 0
      var f
        type-con $field 0
      pat 3
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $domain 2
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        fun $is_primitive_non_volatile_field 1
        var f
          type-con $field 0
        fun $owner 2
        var S
          type-con $state 0
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      pat 3
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $domain 2
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        fun $is_primitive_non_volatile_field 1
        var f
          type-con $field 0
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.968:15
      attribute uniqueId 1
        string-attr 105
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $full_stop 1
    var S
      type-con $state 0
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $domain 2
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    fun $is_primitive_non_volatile_field 1
    var f
      type-con $field 0
    and 2
    fun $typed 2
    var S
      type-con $state 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    not
    fun $ts_is_volatile 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 7 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var d
        type-con $ptr 0
      var f
        type-con $field 0
      var sz
        int
      var i
        int
      var t
        type-con $ctype 0
      pat 3
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $domain 2
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        fun $is_primitive_embedded_array 2
        var f
          type-con $field 0
        var sz
          int
        fun $select.mem 2
        fun $memory 1
        var S
          type-con $state 0
        fun $idx 3
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        var i
          int
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.974:15
      attribute uniqueId 1
        string-attr 106
      attribute bvZ3Native 1
        string-attr False
    implies
    and 5
    fun $full_stop 1
    var S
      type-con $state 0
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $domain 2
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    fun $is_primitive_embedded_array 2
    var f
      type-con $field 0
    var sz
      int
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    =
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    fun $idx 3
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var i
      int
    var t
      type-con $ctype 0
    fun $fetch_from_domain 2
    fun $read_version 2
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    fun $idx 3
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var i
      int
    var t
      type-con $ctype 0
axiom 0
    forall 7 2 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var d
        type-con $ptr 0
      var f
        type-con $field 0
      var sz
        int
      var i
        int
      var t
        type-con $ctype 0
      pat 3
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $domain 2
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        fun $is_primitive_embedded_array 2
        var f
          type-con $field 0
        var sz
          int
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        fun $idx 3
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        var i
          int
        var t
          type-con $ctype 0
      pat 3
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $domain 2
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        fun $is_primitive_embedded_array 2
        var f
          type-con $field 0
        var sz
          int
        fun $owner 2
        var S
          type-con $state 0
        fun $idx 3
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        var i
          int
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.979:15
      attribute uniqueId 1
        string-attr 107
      attribute bvZ3Native 1
        string-attr False
    implies
    and 5
    fun $full_stop 1
    var S
      type-con $state 0
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $domain 2
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    fun $is_primitive_embedded_array 2
    var f
      type-con $field 0
    var sz
      int
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    and 2
    fun $typed 2
    var S
      type-con $state 0
    fun $idx 3
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var i
      int
    var t
      type-con $ctype 0
    not
    fun $ts_is_volatile 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    fun $idx 3
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var i
      int
    var t
      type-con $ctype 0
axiom 0
    forall 6 2 3
      var S
        type-con $state 0
      var r
        int
      var d
        type-con $ptr 0
      var sz
        int
      var i
        int
      var t
        type-con $ctype 0
      pat 3
        fun $set_in 2
        fun $ptr 2
        fun $array 2
        var t
          type-con $ctype 0
        var sz
          int
        var r
          int
        fun $domain 2
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        fun $idx 3
        fun $ptr 2
        var t
          type-con $ctype 0
        var r
          int
        var i
          int
        var t
          type-con $ctype 0
        fun $is_primitive 1
        var t
          type-con $ctype 0
      pat 3
        fun $set_in 2
        fun $ptr 2
        fun $array 2
        var t
          type-con $ctype 0
        var sz
          int
        var r
          int
        fun $domain 2
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        fun $owner 2
        var S
          type-con $state 0
        fun $idx 3
        fun $ptr 2
        var t
          type-con $ctype 0
        var r
          int
        var i
          int
        var t
          type-con $ctype 0
        fun $is_primitive 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.985:15
      attribute uniqueId 1
        string-attr 108
      attribute bvZ3Native 1
        string-attr False
    implies
    and 5
    fun $full_stop 1
    var S
      type-con $state 0
    fun $is_primitive 1
    var t
      type-con $ctype 0
    fun $set_in 2
    fun $ptr 2
    fun $array 2
    var t
      type-con $ctype 0
    var sz
      int
    var r
      int
    fun $domain 2
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    and 2
    fun $typed 2
    var S
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    var i
      int
    var t
      type-con $ctype 0
    not
    fun $ts_is_volatile 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    var i
      int
    var t
      type-con $ctype 0
axiom 0
    forall 6 1 3
      var S
        type-con $state 0
      var r
        int
      var d
        type-con $ptr 0
      var sz
        int
      var i
        int
      var t
        type-con $ctype 0
      pat 3
        fun $set_in 2
        fun $ptr 2
        fun $array 2
        var t
          type-con $ctype 0
        var sz
          int
        var r
          int
        fun $domain 2
        var S
          type-con $state 0
        var d
          type-con $ptr 0
        fun $select.mem 2
        fun $memory 1
        var S
          type-con $state 0
        fun $idx 3
        fun $ptr 2
        var t
          type-con $ctype 0
        var r
          int
        var i
          int
        var t
          type-con $ctype 0
        fun $is_primitive 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.994:15
      attribute uniqueId 1
        string-attr 109
      attribute bvZ3Native 1
        string-attr False
    implies
    and 5
    fun $full_stop 1
    var S
      type-con $state 0
    fun $is_primitive 1
    var t
      type-con $ctype 0
    fun $set_in 2
    fun $ptr 2
    fun $array 2
    var t
      type-con $ctype 0
    var sz
      int
    var r
      int
    fun $domain 2
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    =
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    var i
      int
    var t
      type-con $ctype 0
    fun $fetch_from_domain 2
    fun $read_version 2
    var S
      type-con $state 0
    var d
      type-con $ptr 0
    fun $idx 3
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    var i
      int
    var t
      type-con $ctype 0
axiom 0
    forall 6 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var f
        type-con $field 0
      var sz
        int
      var i
        int
      var t
        type-con $ctype 0
      pat 2
        fun $is_primitive_embedded_volatile_array 3
        var f
          type-con $field 0
        var sz
          int
        var t
          type-con $ctype 0
        fun $ts_is_volatile 1
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        fun $idx 3
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        var i
          int
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.1002:15
      attribute uniqueId 1
        string-attr 110
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    fun $good_state 1
    var S
      type-con $state 0
    fun $is_primitive_embedded_volatile_array 3
    var f
      type-con $field 0
    var sz
      int
    var t
      type-con $ctype 0
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    fun $ts_is_volatile 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    fun $idx 3
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var i
      int
    var t
      type-con $ctype 0
axiom 0
    forall 4 1 4
      var p
        type-con $ptr 0
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var q
        type-con $ptr 0
      pat 2
        fun $set_in 2
        var q
          type-con $ptr 0
        fun $domain 2
        var S1
          type-con $state 0
        var p
          type-con $ptr 0
        fun $call_transition 2
        var S1
          type-con $state 0
        var S2
          type-con $state 0
      attribute qid 1
        string-attr VccPrelu.1013:15
      attribute uniqueId 1
        string-attr 111
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    fun $instantiate_bool 1
    fun $set_in 2
    var q
      type-con $ptr 0
    fun $domain 2
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 4 1 4
      var p
        type-con $ptr 0
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var q
        type-con $ptr 0
      pat 2
        fun $set_in 2
        var q
          type-con $ptr 0
        fun $ver_domain 1
        fun $read_version 2
        var S1
          type-con $state 0
        var p
          type-con $ptr 0
        fun $call_transition 2
        var S1
          type-con $state 0
        var S2
          type-con $state 0
      attribute qid 1
        string-attr VccPrelu.1017:15
      attribute uniqueId 1
        string-attr 112
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    fun $instantiate_bool 1
    fun $set_in 2
    var q
      type-con $ptr 0
    fun $ver_domain 1
    fun $read_version 2
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var c
        type-con $ptr 0
      pat 1
        fun $in_claim_domain 2
        var p
          type-con $ptr 0
        var c
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1022:15
      attribute uniqueId 1
        string-attr 114
      attribute bvZ3Native 1
        string-attr False
    implies
    forall 1 1 3
      var s
        type-con $state 0
      pat 1
        fun $dont_instantiate_state 1
        var s
          type-con $state 0
      attribute qid 1
        string-attr VccPrelu.1023:11
      attribute uniqueId 1
        string-attr 113
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $valid_claim 2
    var s
      type-con $state 0
    var c
      type-con $ptr 0
    fun $closed 2
    var s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $in_claim_domain 2
    var p
      type-con $ptr 0
    var c
      type-con $ptr 0
axiom 0
    forall 4 1 4
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      var obj
        type-con $ptr 0
      var ptr
        type-con $ptr 0
      pat 1
        fun $by_claim 4
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        var obj
          type-con $ptr 0
        var ptr
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1026:32
      attribute uniqueId 1
        string-attr 115
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $by_claim 4
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    var obj
      type-con $ptr 0
    var ptr
      type-con $ptr 0
    var ptr
      type-con $ptr 0
axiom 0
    forall 4 2 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var c
        type-con $ptr 0
      var f
        type-con $field 0
      pat 2
        fun $in_claim_domain 2
        var p
          type-con $ptr 0
        var c
          type-con $ptr 0
        fun $select.mem 2
        fun $memory 1
        var S
          type-con $state 0
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      pat 1
        fun $by_claim 4
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        var p
          type-con $ptr 0
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.1031:15
      attribute uniqueId 1
        string-attr 116
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    fun $good_state 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $in_claim_domain 2
    var p
      type-con $ptr 0
    var c
      type-con $ptr 0
    fun $is_primitive_non_volatile_field 1
    var f
      type-con $field 0
    and 2
    fun $in_claim_domain 2
    var p
      type-con $ptr 0
    var c
      type-con $ptr 0
    =
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    fun $fetch_from_domain 2
    fun $claim_version 1
    var c
      type-con $ptr 0
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
axiom 0
    forall 7 2 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var c
        type-con $ptr 0
      var f
        type-con $field 0
      var i
        int
      var sz
        int
      var t
        type-con $ctype 0
      pat 4
        fun $valid_claim 2
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        fun $in_claim_domain 2
        var p
          type-con $ptr 0
        var c
          type-con $ptr 0
        fun $select.mem 2
        fun $memory 1
        var S
          type-con $state 0
        fun $idx 3
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        var i
          int
        var t
          type-con $ctype 0
        fun $is_primitive_embedded_array 2
        var f
          type-con $field 0
        var sz
          int
      pat 2
        fun $by_claim 4
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        var p
          type-con $ptr 0
        fun $idx 3
        fun $dot 2
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        var i
          int
        var t
          type-con $ctype 0
        fun $is_primitive_embedded_array 2
        var f
          type-con $field 0
        var sz
          int
      attribute qid 1
        string-attr VccPrelu.1040:15
      attribute uniqueId 1
        string-attr 117
      attribute bvZ3Native 1
        string-attr False
    implies
    and 6
    fun $good_state 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $in_claim_domain 2
    var p
      type-con $ptr 0
    var c
      type-con $ptr 0
    fun $is_primitive_embedded_array 2
    var f
      type-con $field 0
    var sz
      int
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    =
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    fun $idx 3
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var i
      int
    var t
      type-con $ctype 0
    fun $fetch_from_domain 2
    fun $claim_version 1
    var c
      type-con $ptr 0
    fun $idx 3
    fun $dot 2
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var i
      int
    var t
      type-con $ctype 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_vol_version 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1067:40
      attribute uniqueId 1
        string-attr 119
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $read_vol_version 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $int_to_vol_version 1
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 5 1 3
      var S
        type-con $state 0
      var r
        int
      var t
        type-con $ctype 0
      var approver
        type-con $field 0
      var subject
        type-con $field 0
      pat 2
        fun $is_approved_by 3
        var t
          type-con $ctype 0
        var approver
          type-con $field 0
        var subject
          type-con $field 0
        fun $select.mem 2
        fun $memory 1
        var S
          type-con $state 0
        fun $dot 2
        fun $ptr 2
        var t
          type-con $ctype 0
        var r
          int
        var subject
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.1078:15
      attribute uniqueId 1
        string-attr 120
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    fun $full_stop 1
    var S
      type-con $state 0
    fun $is_approved_by 3
    var t
      type-con $ctype 0
    var approver
      type-con $field 0
    var subject
      type-con $field 0
    fun $closed 2
    var S
      type-con $state 0
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    or 2
    =
    fun $int_to_ptr 1
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    fun $dot 2
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    var approver
      type-con $field 0
    fun $me 0
    =
    fun $int_to_ptr 1
    fun $fetch_from_vv 2
    fun $read_vol_version 2
    var S
      type-con $state 0
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    fun $dot 2
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    var approver
      type-con $field 0
    fun $me 0
    =
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    fun $dot 2
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    var subject
      type-con $field 0
    fun $fetch_from_vv 2
    fun $read_vol_version 2
    var S
      type-con $state 0
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    fun $dot 2
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    var subject
      type-con $field 0
axiom 0
    forall 4 1 3
      var S
        type-con $state 0
      var r
        int
      var t
        type-con $ctype 0
      var subject
        type-con $field 0
      pat 2
        fun $is_owner_approved 2
        var t
          type-con $ctype 0
        var subject
          type-con $field 0
        fun $select.mem 2
        fun $memory 1
        var S
          type-con $state 0
        fun $dot 2
        fun $ptr 2
        var t
          type-con $ctype 0
        var r
          int
        var subject
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.1103:15
      attribute uniqueId 1
        string-attr 121
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    fun $full_stop 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    fun $is_owner_approved 2
    var t
      type-con $ctype 0
    var subject
      type-con $field 0
    =
    fun $owner 2
    var S
      type-con $state 0
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    fun $me 0
    =
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    fun $dot 2
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    var subject
      type-con $field 0
    fun $fetch_from_vv 2
    fun $read_vol_version 2
    var S
      type-con $state 0
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    fun $dot 2
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    var subject
      type-con $field 0
axiom 0
    forall 5 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var r
        int
      var t
        type-con $ctype 0
      var subject
        type-con $field 0
      pat 3
        fun $is_owner_approved 2
        var t
          type-con $ctype 0
        var subject
          type-con $field 0
        fun $post_unwrap 2
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        fun $select.mem 2
        fun $memory 1
        var S1
          type-con $state 0
        fun $dot 2
        fun $ptr 2
        var t
          type-con $ctype 0
        var r
          int
        var subject
          type-con $field 0
      attribute qid 1
        string-attr VccPrelu.1111:15
      attribute uniqueId 1
        string-attr 122
      attribute bvZ3Native 1
        string-attr False
    fun $instantiate_int 1
    fun $select.mem 2
    fun $memory 1
    var S2
      type-con $state 0
    fun $dot 2
    fun $ptr 2
    var t
      type-con $ctype 0
    var r
      int
    var subject
      type-con $field 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      pat 2
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $owns 2
        var S
          type-con $state 0
        var q
          type-con $ptr 0
        fun $is_non_primitive 1
        fun $typ 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1133:15
      attribute uniqueId 1
        string-attr 124
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $good_state 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    fun $is_non_primitive 1
    fun $typ 1
    var p
      type-con $ptr 0
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
axiom 0
    forall 4 1 3
      var #s1
        type-con $state 0
      var #s2
        type-con $state 0
      var #p
        type-con $ptr 0
      var #t
        type-con $ctype 0
      pat 2
        fun $is_arraytype 1
        var #t
          type-con $ctype 0
        fun $inv2 4
        var #s1
          type-con $state 0
        var #s2
          type-con $state 0
        var #p
          type-con $ptr 0
        var #t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.1140:15
      attribute uniqueId 1
        string-attr 125
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $is_arraytype 1
    var #t
      type-con $ctype 0
    =
    fun $typ 1
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
    and 2
    =
    fun $inv2 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
    fun $typed 2
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $sequential 4
    var #s1
      type-con $state 0
    var #s2
      type-con $state 0
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var #r
        int
      var #t
        type-con $ctype 0
      pat 2
        fun $owns 2
        var S
          type-con $state 0
        fun $ptr 2
        var #t
          type-con $ctype 0
        var #r
          int
        fun $is_arraytype 1
        var #t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.1145:15
      attribute uniqueId 1
        string-attr 126
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    implies
    fun $is_arraytype 1
    var #t
      type-con $ctype 0
    =
    fun $owns 2
    var S
      type-con $state 0
    fun $ptr 2
    var #t
      type-con $ctype 0
    var #r
      int
    fun $set_empty 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var #p
        type-con $ptr 0
      var #t
        type-con $ctype 0
      pat 1
        fun $inv2 4
        var S
          type-con $state 0
        var S
          type-con $state 0
        var #p
          type-con $ptr 0
        var #t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.1149:15
      attribute uniqueId 1
        string-attr 127
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $invok_state 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    fun $inv2 4
    var S
      type-con $state 0
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    var #t
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var S
        type-con $state 0
      pat 1
        fun $good_state 1
        var S
          type-con $state 0
      attribute qid 1
        string-attr VccPrelu.1152:15
      attribute uniqueId 1
        string-attr 128
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    forall 2 1 3
      var #p
        type-con $ptr 0
      var #q
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var #p
          type-con $ptr 0
        fun $owns 2
        var S
          type-con $state 0
        var #q
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.846:13
      attribute uniqueId 1
        string-attr 86
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $good_state 1
    var S
      type-con $state 0
    fun $set_in 2
    var #p
      type-con $ptr 0
    fun $owns 2
    var S
      type-con $state 0
    var #q
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var #q
      type-con $ptr 0
    and 2
    fun $closed 2
    var S
      type-con $state 0
    var #p
      type-con $ptr 0
    not
    =
    fun $ref 1
    var #p
      type-con $ptr 0
    int-num 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var v
        int
      pat 1
        fun $update_int 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var v
          int
      attribute qid 1
        string-attr VccPrelu.1260:15
      attribute uniqueId 1
        string-attr 138
      attribute bvZ3Native 1
        string-attr False
    and 6
    =
    fun $typemap 1
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    fun $typemap 1
    var S
      type-con $state 0
    =
    fun $statusmap 1
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    fun $statusmap 1
    var S
      type-con $state 0
    =
    fun $memory 1
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    fun $store.mem 3
    fun $memory 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    <
    fun $current_timestamp 1
    var S
      type-con $state 0
    fun $current_timestamp 1
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    forall 1 1 4
      var p
        type-con $ptr 0
      pat 1
        fun $timestamp 2
        fun $update_int 3
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var v
          int
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1280:13
      attribute uniqueId 1
        string-attr 140
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    <=
    fun $timestamp 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $timestamp 2
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
    var p
      type-con $ptr 0
    fun $call_transition 2
    var S
      type-con $state 0
    fun $update_int 3
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var v
      int
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var l
        type-con $ptr 0
      var p
        type-con $ptr 0
      pat 1
        fun $take_over 3
        var S
          type-con $state 0
        var l
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1309:15
      attribute uniqueId 1
        string-attr 141
      attribute bvZ3Native 1
        string-attr False
    implies
    not
    =
    fun $kind_of 1
    fun $typ 1
    var l
      type-con $ptr 0
    fun $kind_primitive 0
    and 5
    =
    fun $statusmap 1
    fun $take_over 3
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $store.sm 3
    fun $statusmap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $taken_over 3
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $closed 2
    fun $take_over 3
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    =
    fun $owner 2
    fun $take_over 3
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    var l
      type-con $ptr 0
    =
    fun $ref_cnt 2
    fun $take_over 3
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $ref_cnt 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    true
axiom 0
    forall 4 1 3
      var S0
        type-con $state 0
      var S
        type-con $state 0
      var l
        type-con $ptr 0
      var p
        type-con $ptr 0
      pat 1
        fun $release 4
        var S0
          type-con $state 0
        var S
          type-con $state 0
        var l
          type-con $ptr 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1325:15
      attribute uniqueId 1
        string-attr 142
      attribute bvZ3Native 1
        string-attr False
    and 6
    =
    fun $statusmap 1
    fun $release 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $store.sm 3
    fun $statusmap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $released 3
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $closed 2
    fun $release 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    =
    fun $owner 2
    fun $release 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $me 0
    =
    fun $ref_cnt 2
    fun $release 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $ref_cnt 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    =
    fun $timestamp 2
    fun $release 4
    var S0
      type-con $state 0
    var S
      type-con $state 0
    var l
      type-con $ptr 0
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    fun $current_timestamp 1
    var S0
      type-con $state 0
    true
axiom 0
    =
    fun $get_memory_allocator 0
    fun $ptr 2
    fun $memory_allocator_type 0
    fun $memory_allocator_ref 0
axiom 0
    =
    fun $ptr_level 1
    fun $memory_allocator_type 0
    int-num 0
axiom 0
    forall 1 1 3
      var S
        type-con $state 0
      pat 1
        fun $program_entry_point 1
        var S
          type-con $state 0
      attribute qid 1
        string-attr VccPrelu.1661:15
      attribute uniqueId 1
        string-attr 175
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $program_entry_point 1
    var S
      type-con $state 0
    fun $program_entry_point_ch 1
    var S
      type-con $state 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var q
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $volatile_span 2
        var S
          type-con $state 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1745:15
      attribute uniqueId 1
        string-attr 186
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $volatile_span 2
    var S
      type-con $state 0
    var q
      type-con $ptr 0
    or 2
    =
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    and 2
    fun $ts_is_volatile 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $span 1
    var q
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var a
        type-con $ptr 0
      var i
        int
      pat 1
        fun $left_split 2
        var a
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr VccPrelu.1752:22
      attribute uniqueId 1
        string-attr 187
      attribute bvZ3Native 1
        string-attr False
    =
    fun $left_split 2
    var a
      type-con $ptr 0
    var i
      int
    fun $ptr 2
    fun $array 2
    fun $element_type 1
    fun $typ 1
    var a
      type-con $ptr 0
    var i
      int
    fun $ref 1
    var a
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var a
        type-con $ptr 0
      var i
        int
      pat 1
        fun $right_split 2
        var a
          type-con $ptr 0
        var i
          int
      attribute qid 1
        string-attr VccPrelu.1754:23
      attribute uniqueId 1
        string-attr 188
      attribute bvZ3Native 1
        string-attr False
    =
    fun $right_split 2
    var a
      type-con $ptr 0
    var i
      int
    fun $ptr 2
    fun $array 2
    fun $element_type 1
    fun $typ 1
    var a
      type-con $ptr 0
    -
    fun $array_length 1
    fun $typ 1
    var a
      type-con $ptr 0
    var i
      int
    fun $ref 1
    fun $idx 3
    fun $ptr 2
    fun $element_type 1
    fun $typ 1
    var a
      type-con $ptr 0
    fun $ref 1
    var a
      type-con $ptr 0
    var i
      int
    fun $element_type 1
    fun $typ 1
    var a
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var a1
        type-con $ptr 0
      var a2
        type-con $ptr 0
      pat 1
        fun $joined_array 2
        var a1
          type-con $ptr 0
        var a2
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1757:24
      attribute uniqueId 1
        string-attr 189
      attribute bvZ3Native 1
        string-attr False
    =
    fun $joined_array 2
    var a1
      type-con $ptr 0
    var a2
      type-con $ptr 0
    fun $ptr 2
    fun $array 2
    fun $element_type 1
    fun $typ 1
    var a1
      type-con $ptr 0
    +
    fun $array_length 1
    fun $typ 1
    var a1
      type-con $ptr 0
    fun $array_length 1
    fun $typ 1
    var a2
      type-con $ptr 0
    fun $ref 1
    var a1
      type-con $ptr 0
axiom 0
    forall 1 1 4
      var #o
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var #o
          type-con $ptr 0
        fun $set_empty 0
      attribute qid 1
        string-attr VccPrelu.1854:15
      attribute uniqueId 1
        string-attr 198
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    not
    fun $set_in 2
    var #o
      type-con $ptr 0
    fun $set_empty 0
axiom 0
    forall 2 1 4
      var #r
        type-con $ptr 0
      var #o
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var #o
          type-con $ptr 0
        fun $set_singleton 1
        var #r
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1857:15
      attribute uniqueId 1
        string-attr 199
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_in 2
    var #o
      type-con $ptr 0
    fun $set_singleton 1
    var #r
      type-con $ptr 0
    =
    var #r
      type-con $ptr 0
    var #o
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var #r
        type-con $ptr 0
      var #o
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var #o
          type-con $ptr 0
        fun $non_null_set_singleton 1
        var #r
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1860:15
      attribute uniqueId 1
        string-attr 200
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_in 2
    var #o
      type-con $ptr 0
    fun $non_null_set_singleton 1
    var #r
      type-con $ptr 0
    and 2
    =
    var #r
      type-con $ptr 0
    var #o
      type-con $ptr 0
    not
    =
    fun $ref 1
    var #r
      type-con $ptr 0
    fun $ref 1
    fun $null 0
axiom 0
    forall 3 1 4
      var #a
        type-con $ptrset 0
      var #b
        type-con $ptrset 0
      var #o
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var #o
          type-con $ptr 0
        fun $set_union 2
        var #a
          type-con $ptrset 0
        var #b
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1863:15
      attribute uniqueId 1
        string-attr 201
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_in 2
    var #o
      type-con $ptr 0
    fun $set_union 2
    var #a
      type-con $ptrset 0
    var #b
      type-con $ptrset 0
    or 2
    fun $set_in 2
    var #o
      type-con $ptr 0
    var #a
      type-con $ptrset 0
    fun $set_in 2
    var #o
      type-con $ptr 0
    var #b
      type-con $ptrset 0
axiom 0
    forall 3 1 4
      var #a
        type-con $ptrset 0
      var #b
        type-con $ptrset 0
      var #o
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var #o
          type-con $ptr 0
        fun $set_difference 2
        var #a
          type-con $ptrset 0
        var #b
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1867:15
      attribute uniqueId 1
        string-attr 202
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_in 2
    var #o
      type-con $ptr 0
    fun $set_difference 2
    var #a
      type-con $ptrset 0
    var #b
      type-con $ptrset 0
    and 2
    fun $set_in 2
    var #o
      type-con $ptr 0
    var #a
      type-con $ptrset 0
    not
    fun $set_in 2
    var #o
      type-con $ptr 0
    var #b
      type-con $ptrset 0
axiom 0
    forall 3 1 4
      var #a
        type-con $ptrset 0
      var #b
        type-con $ptrset 0
      var #o
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var #o
          type-con $ptr 0
        fun $set_intersection 2
        var #a
          type-con $ptrset 0
        var #b
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1871:15
      attribute uniqueId 1
        string-attr 203
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_in 2
    var #o
      type-con $ptr 0
    fun $set_intersection 2
    var #a
      type-con $ptrset 0
    var #b
      type-con $ptrset 0
    and 2
    fun $set_in 2
    var #o
      type-con $ptr 0
    var #a
      type-con $ptrset 0
    fun $set_in 2
    var #o
      type-con $ptr 0
    var #b
      type-con $ptrset 0
axiom 0
    forall 2 1 4
      var #a
        type-con $ptrset 0
      var #b
        type-con $ptrset 0
      pat 1
        fun $set_subset 2
        var #a
          type-con $ptrset 0
        var #b
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1875:14
      attribute uniqueId 1
        string-attr 205
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_subset 2
    var #a
      type-con $ptrset 0
    var #b
      type-con $ptrset 0
    forall 1 2 4
      var #o
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var #o
          type-con $ptr 0
        var #a
          type-con $ptrset 0
      pat 1
        fun $set_in 2
        var #o
          type-con $ptr 0
        var #b
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1876:35
      attribute uniqueId 1
        string-attr 204
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $set_in 2
    var #o
      type-con $ptr 0
    var #a
      type-con $ptrset 0
    fun $set_in 2
    var #o
      type-con $ptr 0
    var #b
      type-con $ptrset 0
axiom 0
    forall 2 1 4
      var #a
        type-con $ptrset 0
      var #b
        type-con $ptrset 0
      pat 1
        fun $set_eq 2
        var #a
          type-con $ptrset 0
        var #b
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1880:15
      attribute uniqueId 1
        string-attr 207
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    forall 1 1 4
      var #o
        type-con $ptr 0
      pat 1
        fun $dont_instantiate 1
        var #o
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1881:11
      attribute uniqueId 1
        string-attr 206
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_in 2
    var #o
      type-con $ptr 0
    var #a
      type-con $ptrset 0
    fun $set_in 2
    var #o
      type-con $ptr 0
    var #b
      type-con $ptrset 0
    fun $set_eq 2
    var #a
      type-con $ptrset 0
    var #b
      type-con $ptrset 0
axiom 0
    forall 2 1 4
      var #a
        type-con $ptrset 0
      var #b
        type-con $ptrset 0
      pat 1
        fun $set_eq 2
        var #a
          type-con $ptrset 0
        var #b
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1882:15
      attribute uniqueId 1
        string-attr 208
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $set_eq 2
    var #a
      type-con $ptrset 0
    var #b
      type-con $ptrset 0
    =
    var #a
      type-con $ptrset 0
    var #b
      type-con $ptrset 0
axiom 0
    =
    fun $set_cardinality 1
    fun $set_empty 0
    int-num 0
axiom 0
    forall 1 0 4
      var p
        type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1888:15
      attribute uniqueId 1
        string-attr 209
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_cardinality 1
    fun $set_singleton 1
    var p
      type-con $ptr 0
    int-num 1
axiom 0
    forall 1 1 4
      var #o
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var #o
          type-con $ptr 0
        fun $set_universe 0
      attribute qid 1
        string-attr VccPrelu.1891:15
      attribute uniqueId 1
        string-attr 210
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    fun $set_in 2
    var #o
      type-con $ptr 0
    fun $set_universe 0
axiom 0
    forall 3 1 4
      var p
        type-con $ptr 0
      var s1
        type-con $ptrset 0
      var s2
        type-con $ptrset 0
      pat 2
        fun $set_disjoint 2
        var s1
          type-con $ptrset 0
        var s2
          type-con $ptrset 0
        fun $set_in 2
        var p
          type-con $ptr 0
        var s1
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1896:15
      attribute uniqueId 1
        string-attr 211
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    and 2
    fun $set_disjoint 2
    var s1
      type-con $ptrset 0
    var s2
      type-con $ptrset 0
    fun $set_in 2
    var p
      type-con $ptr 0
    var s1
      type-con $ptrset 0
    =
    fun $id_set_disjoint 3
    var p
      type-con $ptr 0
    var s1
      type-con $ptrset 0
    var s2
      type-con $ptrset 0
    int-num 1
axiom 0
    forall 3 1 4
      var p
        type-con $ptr 0
      var s1
        type-con $ptrset 0
      var s2
        type-con $ptrset 0
      pat 2
        fun $set_disjoint 2
        var s1
          type-con $ptrset 0
        var s2
          type-con $ptrset 0
        fun $set_in 2
        var p
          type-con $ptr 0
        var s2
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1899:15
      attribute uniqueId 1
        string-attr 212
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    and 2
    fun $set_disjoint 2
    var s1
      type-con $ptrset 0
    var s2
      type-con $ptrset 0
    fun $set_in 2
    var p
      type-con $ptr 0
    var s2
      type-con $ptrset 0
    =
    fun $id_set_disjoint 3
    var p
      type-con $ptr 0
    var s1
      type-con $ptrset 0
    var s2
      type-con $ptrset 0
    int-num 2
axiom 0
    forall 2 1 4
      var s1
        type-con $ptrset 0
      var s2
        type-con $ptrset 0
      pat 1
        fun $set_disjoint 2
        var s1
          type-con $ptrset 0
        var s2
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1903:15
      attribute uniqueId 1
        string-attr 214
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $dont_instantiate 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1904:11
      attribute uniqueId 1
        string-attr 213
      attribute bvZ3Native 1
        string-attr False
    and 2
    implies
    fun $set_in 2
    var p
      type-con $ptr 0
    var s1
      type-con $ptrset 0
    not
    fun $set_in 2
    var p
      type-con $ptr 0
    var s2
      type-con $ptrset 0
    implies
    fun $set_in 2
    var p
      type-con $ptr 0
    var s2
      type-con $ptrset 0
    not
    fun $set_in 2
    var p
      type-con $ptr 0
    var s1
      type-con $ptrset 0
    fun $set_disjoint 2
    var s1
      type-con $ptrset 0
    var s2
      type-con $ptrset 0
axiom 0
    forall 3 1 4
      var p
        type-con $ptr 0
      var S1
        type-con $state 0
      var p1
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $owns 2
        var S1
          type-con $state 0
        var p1
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1914:15
      attribute uniqueId 1
        string-attr 215
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    implies
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $owns 2
    var S1
      type-con $state 0
    var p1
      type-con $ptr 0
    fun $in_some_owns 1
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 4
      var p
        type-con $ptr 0
      var S1
        type-con $state 0
      var p1
        type-con $ptr 0
      pat 2
        fun $set_in2 2
        var p
          type-con $ptr 0
        fun $owns 2
        var S1
          type-con $state 0
        var p1
          type-con $ptr 0
        fun $in_some_owns 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1918:15
      attribute uniqueId 1
        string-attr 216
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $owns 2
    var S1
      type-con $state 0
    var p1
      type-con $ptr 0
    fun $set_in2 2
    var p
      type-con $ptr 0
    fun $owns 2
    var S1
      type-con $state 0
    var p1
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var p
        type-con $ptr 0
      var s
        type-con $ptrset 0
      pat 1
        fun $set_in 2
        var p
          type-con $ptr 0
        var s
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1922:15
      attribute uniqueId 1
        string-attr 217
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    var s
      type-con $ptrset 0
    fun $set_in2 2
    var p
      type-con $ptr 0
    var s
      type-con $ptrset 0
axiom 0
    forall 2 1 4
      var p
        type-con $ptr 0
      var s
        type-con $ptrset 0
      pat 1
        fun $set_in 2
        var p
          type-con $ptr 0
        var s
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1924:15
      attribute uniqueId 1
        string-attr 218
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    var s
      type-con $ptrset 0
    fun $set_in3 2
    var p
      type-con $ptr 0
    var s
      type-con $ptrset 0
axiom 0
    forall 2 1 4
      var p
        type-con $ptr 0
      var s
        type-con $ptrset 0
      pat 1
        fun $set_in0 2
        var p
          type-con $ptr 0
        var s
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.1928:15
      attribute uniqueId 1
        string-attr 219
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    var s
      type-con $ptrset 0
    fun $set_in0 2
    var p
      type-con $ptr 0
    var s
      type-con $ptrset 0
axiom 0
    forall 2 1 3
      var T
        type-con $ctype 0
      var s
        int
      pat 1
        fun $array 2
        var T
          type-con $ctype 0
        var s
          int
      attribute qid 1
        string-attr VccPrelu.1989:15
      attribute uniqueId 1
        string-attr 224
      attribute bvZ3Native 1
        string-attr False
    =
    fun $element_type 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
    var T
      type-con $ctype 0
axiom 0
    forall 2 1 3
      var T
        type-con $ctype 0
      var s
        int
      pat 1
        fun $array 2
        var T
          type-con $ctype 0
        var s
          int
      attribute qid 1
        string-attr VccPrelu.1990:15
      attribute uniqueId 1
        string-attr 225
      attribute bvZ3Native 1
        string-attr False
    =
    fun $array_length 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
    var s
      int
axiom 0
    forall 2 1 3
      var T
        type-con $ctype 0
      var s
        int
      pat 1
        fun $array 2
        var T
          type-con $ctype 0
        var s
          int
      attribute qid 1
        string-attr VccPrelu.1991:15
      attribute uniqueId 1
        string-attr 226
      attribute bvZ3Native 1
        string-attr False
    =
    fun $ptr_level 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
    int-num 0
axiom 0
    forall 2 1 3
      var T
        type-con $ctype 0
      var s
        int
      pat 1
        fun $array 2
        var T
          type-con $ctype 0
        var s
          int
      attribute qid 1
        string-attr VccPrelu.1992:15
      attribute uniqueId 1
        string-attr 227
      attribute bvZ3Native 1
        string-attr False
    fun $is_arraytype 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
axiom 0
    forall 2 1 3
      var T
        type-con $ctype 0
      var s
        int
      pat 1
        fun $array 2
        var T
          type-con $ctype 0
        var s
          int
      attribute qid 1
        string-attr VccPrelu.1993:15
      attribute uniqueId 1
        string-attr 228
      attribute bvZ3Native 1
        string-attr False
    not
    fun $is_claimable 1
    fun $array 2
    var T
      type-con $ctype 0
    var s
      int
axiom 0
    forall 2 1 4
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      pat 1
        fun $inlined_array 2
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.1998:37
      attribute uniqueId 1
        string-attr 229
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $inlined_array 2
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var #p
        type-con $ptr 0
      var #i
        int
      var #t
        type-con $ctype 0
      pat 1
        fun $idx 3
        var #p
          type-con $ptr 0
        var #i
          int
        var #t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.2002:15
      attribute uniqueId 1
        string-attr 230
      attribute bvZ3Native 1
        string-attr False
    and 2
    fun $extent_hint 2
    fun $idx 3
    var #p
      type-con $ptr 0
    var #i
      int
    var #t
      type-con $ctype 0
    var #p
      type-con $ptr 0
    =
    fun $idx 3
    var #p
      type-con $ptr 0
    var #i
      int
    var #t
      type-con $ctype 0
    fun $ptr 2
    var #t
      type-con $ctype 0
    +
    fun $ref 1
    var #p
      type-con $ptr 0
    *
    var #i
      int
    fun $sizeof 1
    var #t
      type-con $ctype 0
axiom 0
    forall 4 1 3
      var p
        type-con $ptr 0
      var i
        int
      var j
        int
      var T
        type-con $ctype 0
      pat 1
        fun $idx 3
        fun $idx 3
        var p
          type-con $ptr 0
        var i
          int
        var T
          type-con $ctype 0
        var j
          int
        var T
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.2016:15
      attribute uniqueId 1
        string-attr 231
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    not
    =
    var i
      int
    int-num 0
    not
    =
    var j
      int
    int-num 0
    =
    fun $idx 3
    fun $idx 3
    var p
      type-con $ptr 0
    var i
      int
    var T
      type-con $ctype 0
    var j
      int
    var T
      type-con $ctype 0
    fun $idx 3
    var p
      type-con $ptr 0
    +
    var i
      int
    var j
      int
    var T
      type-con $ctype 0
axiom 0
    forall 5 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      var vol
        bool
      pat 1
        fun $is_array_vol_or_nonvol 5
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
        var vol
          bool
      attribute qid 1
        string-attr VccPrelu.2020:46
      attribute uniqueId 1
        string-attr 233
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $is_array_vol_or_nonvol 5
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    var vol
      bool
    and 2
    fun $is 2
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    forall 1 3 3
      var i
        int
      pat 1
        fun $select.sm 2
        fun $statusmap 1
        var S
          type-con $state 0
        fun $idx 3
        var p
          type-con $ptr 0
        var i
          int
        var T
          type-con $ctype 0
      pat 1
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        fun $idx 3
        var p
          type-con $ptr 0
        var i
          int
        var T
          type-con $ctype 0
      pat 1
        fun $select.mem 2
        fun $memory 1
        var S
          type-con $state 0
        fun $idx 3
        var p
          type-con $ptr 0
        var i
          int
        var T
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.2022:13
      attribute uniqueId 1
        string-attr 232
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    and 3
    =
    fun $ts_is_volatile 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    fun $idx 3
    var p
      type-con $ptr 0
    var i
      int
    var T
      type-con $ctype 0
    var vol
      bool
    fun $ts_is_array_elt 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    fun $idx 3
    var p
      type-con $ptr 0
    var i
      int
    var T
      type-con $ctype 0
    fun $typed 2
    var S
      type-con $state 0
    fun $idx 3
    var p
      type-con $ptr 0
    var i
      int
    var T
      type-con $ctype 0
axiom 0
    forall 4 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $is_array 4
        var S
          type-con $state 0
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr VccPrelu.2026:32
      attribute uniqueId 1
        string-attr 235
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $is_array 4
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    and 2
    fun $is 2
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    forall 1 3 3
      var i
        int
      pat 1
        fun $select.sm 2
        fun $statusmap 1
        var S
          type-con $state 0
        fun $idx 3
        var p
          type-con $ptr 0
        var i
          int
        var T
          type-con $ctype 0
      pat 1
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        fun $idx 3
        var p
          type-con $ptr 0
        var i
          int
        var T
          type-con $ctype 0
      pat 1
        fun $select.mem 2
        fun $memory 1
        var S
          type-con $state 0
        fun $idx 3
        var p
          type-con $ptr 0
        var i
          int
        var T
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.2028:13
      attribute uniqueId 1
        string-attr 234
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    and 2
    fun $ts_is_array_elt 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    fun $idx 3
    var p
      type-con $ptr 0
    var i
      int
    var T
      type-con $ctype 0
    fun $typed 2
    var S
      type-con $state 0
    fun $idx 3
    var p
      type-con $ptr 0
    var i
      int
    var T
      type-con $ctype 0
axiom 0
    forall 4 1 3
      var p
        type-con $ptr 0
      var #r
        int
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $full_extent 1
        fun $ptr 2
        fun $array 2
        var T
          type-con $ctype 0
        var sz
          int
        var #r
          int
      attribute qid 1
        string-attr VccPrelu.2094:15
      attribute uniqueId 1
        string-attr 243
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $full_extent 1
    fun $ptr 2
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    var #r
      int
    or 2
    =
    var p
      type-con $ptr 0
    fun $ptr 2
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    var #r
      int
    and 3
    <=
    int-num 0
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    <=
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    -
    var sz
      int
    int-num 1
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $full_extent 1
    fun $idx 3
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    var T
      type-con $ctype 0
axiom 0
    forall 5 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      var #r
        int
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $extent 2
        var S
          type-con $state 0
        fun $ptr 2
        fun $array 2
        var T
          type-con $ctype 0
        var sz
          int
        var #r
          int
      attribute qid 1
        string-attr VccPrelu.2099:15
      attribute uniqueId 1
        string-attr 244
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $extent 2
    var S
      type-con $state 0
    fun $ptr 2
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    var #r
      int
    or 2
    =
    var p
      type-con $ptr 0
    fun $ptr 2
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    var #r
      int
    and 3
    <=
    int-num 0
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    <=
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    -
    var sz
      int
    int-num 1
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $extent 2
    var S
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    var T
      type-con $ctype 0
axiom 0
    forall 5 2 3
      var S
        type-con $state 0
      var #r
        int
      var T
        type-con $ctype 0
      var sz
        int
      var i
        int
      pat 2
        fun $select.sm 2
        fun $statusmap 1
        var S
          type-con $state 0
        fun $idx 3
        fun $ptr 2
        var T
          type-con $ctype 0
        var #r
          int
        var i
          int
        var T
          type-con $ctype 0
        fun $ptr 2
        fun $array 2
        var T
          type-con $ctype 0
        var sz
          int
        var #r
          int
      pat 2
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        fun $idx 3
        fun $ptr 2
        var T
          type-con $ctype 0
        var #r
          int
        var i
          int
        var T
          type-con $ctype 0
        fun $ptr 2
        fun $array 2
        var T
          type-con $ctype 0
        var sz
          int
        var #r
          int
      attribute qid 1
        string-attr VccPrelu.2107:15
      attribute uniqueId 1
        string-attr 245
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $typed 2
    var S
      type-con $state 0
    fun $ptr 2
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    var #r
      int
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    and 4
    =
    fun $ts_emb 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    var #r
      int
    var i
      int
    var T
      type-con $ctype 0
    fun $ptr 2
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    var #r
      int
    not
    fun $ts_is_volatile 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    var #r
      int
    var i
      int
    var T
      type-con $ctype 0
    fun $ts_is_array_elt 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    var #r
      int
    var i
      int
    var T
      type-con $ctype 0
    fun $typed 2
    var S
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun $array 2
    var T
      type-con $ctype 0
    var sz
      int
    var #r
      int
    var i
      int
    var T
      type-con $ctype 0
axiom 0
    forall 4 1 3
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      var elem
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var elem
          type-con $ptr 0
        fun $array_members 3
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr VccPrelu.2116:15
      attribute uniqueId 1
        string-attr 246
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_in 2
    var elem
      type-con $ptr 0
    fun $array_members 3
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    and 3
    <=
    int-num 0
    fun $index_within 2
    var elem
      type-con $ptr 0
    var p
      type-con $ptr 0
    <=
    fun $index_within 2
    var elem
      type-con $ptr 0
    var p
      type-con $ptr 0
    -
    var sz
      int
    int-num 1
    =
    var elem
      type-con $ptr 0
    fun $idx 3
    var p
      type-con $ptr 0
    fun $index_within 2
    var elem
      type-con $ptr 0
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
axiom 0
    forall 4 1 3
      var p
        type-con $ptr 0
      var #r
        int
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $array_range 3
        fun $ptr 2
        var T
          type-con $ctype 0
        var #r
          int
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr VccPrelu.2122:15
      attribute uniqueId 1
        string-attr 247
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $array_range 3
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    var T
      type-con $ctype 0
    var sz
      int
    and 3
    <=
    int-num 0
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    <=
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    -
    var sz
      int
    int-num 1
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $full_extent 1
    fun $idx 3
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    var T
      type-con $ctype 0
axiom 0
    forall 5 1 3
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      var idx
        int
      var S
        type-con $ptrset 0
      pat 2
        fun $idx 3
        var p
          type-con $ptr 0
        var idx
          int
        var T
          type-con $ctype 0
        fun $set_disjoint 2
        fun $array_range 3
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
        var S
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.2126:15
      attribute uniqueId 1
        string-attr 248
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var idx
      int
    <
    var idx
      int
    var sz
      int
    =
    fun $id_set_disjoint 3
    fun $idx 3
    var p
      type-con $ptr 0
    var idx
      int
    var T
      type-con $ctype 0
    fun $array_range 3
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    var S
      type-con $ptrset 0
    int-num 1
axiom 0
    forall 5 1 3
      var p
        type-con $ptr 0
      var T
        type-con $ctype 0
      var sz
        int
      var idx
        int
      var S
        type-con $ptrset 0
      pat 2
        fun $idx 3
        var p
          type-con $ptr 0
        var idx
          int
        var T
          type-con $ctype 0
        fun $set_disjoint 2
        var S
          type-con $ptrset 0
        fun $array_range 3
        var p
          type-con $ptr 0
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr VccPrelu.2130:15
      attribute uniqueId 1
        string-attr 249
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var idx
      int
    <
    var idx
      int
    var sz
      int
    =
    fun $id_set_disjoint 3
    fun $idx 3
    var p
      type-con $ptr 0
    var idx
      int
    var T
      type-con $ctype 0
    var S
      type-con $ptrset 0
    fun $array_range 3
    var p
      type-con $ptr 0
    var T
      type-con $ctype 0
    var sz
      int
    int-num 2
axiom 0
    forall 4 1 3
      var p
        type-con $ptr 0
      var #r
        int
      var T
        type-con $ctype 0
      var sz
        int
      pat 1
        fun $set_in 2
        var p
          type-con $ptr 0
        fun $non_null_array_range 3
        fun $ptr 2
        var T
          type-con $ctype 0
        var #r
          int
        var T
          type-con $ctype 0
        var sz
          int
      attribute qid 1
        string-attr VccPrelu.2135:15
      attribute uniqueId 1
        string-attr 250
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $non_null_array_range 3
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    var T
      type-con $ctype 0
    var sz
      int
    and 4
    not
    =
    var #r
      int
    int-num 0
    <=
    int-num 0
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    <=
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    -
    var sz
      int
    int-num 1
    fun $set_in 2
    var p
      type-con $ptr 0
    fun $full_extent 1
    fun $idx 3
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    fun $index_within 2
    var p
      type-con $ptr 0
    fun $ptr 2
    var T
      type-con $ctype 0
    var #r
      int
    var T
      type-con $ctype 0
axiom 0
    forall 3 1 3
      var q
        type-con $ptr 0
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $set_in 2
        var q
          type-con $ptr 0
        fun $non_null_extent 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2142:15
      attribute uniqueId 1
        string-attr 251
      attribute bvZ3Native 1
        string-attr False
    =
    fun $set_in 2
    var q
      type-con $ptr 0
    fun $non_null_extent 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    not
    =
    fun $ref 1
    var p
      type-con $ptr 0
    fun $ref 1
    fun $null 0
    fun $set_in 2
    var q
      type-con $ptr 0
    fun $extent 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var p
        type-con $ptr 0
      var k
        int
      pat 1
        fun $idx 3
        var p
          type-con $ptr 0
        var k
          int
        fun $typ 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2154:15
      attribute uniqueId 1
        string-attr 253
      attribute bvZ3Native 1
        string-attr False
    =
    fun $index_within 2
    fun $idx 3
    var p
      type-con $ptr 0
    var k
      int
    fun $typ 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
    var k
      int
axiom 0
    forall 3 1 3
      var p
        type-con $ptr 0
      var k
        int
      var f
        type-con $field 0
      pat 1
        fun $index_within 2
        fun $dot 2
        fun $idx 3
        var p
          type-con $ptr 0
        var k
          int
        fun $typ 1
        var p
          type-con $ptr 0
        var f
          type-con $field 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2156:15
      attribute uniqueId 1
        string-attr 254
      attribute bvZ3Native 1
        string-attr False
    =
    fun $index_within 2
    fun $dot 2
    fun $idx 3
    var p
      type-con $ptr 0
    var k
      int
    fun $typ 1
    var p
      type-con $ptr 0
    var f
      type-con $field 0
    var p
      type-con $ptr 0
    var k
      int
axiom 0
    forall 5 1 3
      var s1
        type-con $state 0
      var s2
        type-con $state 0
      var p
        type-con $ptr 0
      var t
        type-con $ctype 0
      var sz
        int
      pat 2
        fun $state_spans_the_same 4
        var s1
          type-con $state 0
        var s2
          type-con $state 0
        var p
          type-con $ptr 0
        fun $array 2
        var t
          type-con $ctype 0
        var sz
          int
        fun $is_primitive 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.2168:15
      attribute uniqueId 1
        string-attr 256
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is_primitive 1
    var t
      type-con $ctype 0
    implies
    fun $state_spans_the_same 4
    var s1
      type-con $state 0
    var s2
      type-con $state 0
    var p
      type-con $ptr 0
    fun $array 2
    var t
      type-con $ctype 0
    var sz
      int
    forall 1 1 3
      var i
        int
      pat 1
        fun $select.mem 2
        fun $memory 1
        var s2
          type-con $state 0
        fun $idx 3
        fun $ptr 2
        var t
          type-con $ctype 0
        fun $ref 1
        var p
          type-con $ptr 0
        var i
          int
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.2171:15
      attribute uniqueId 1
        string-attr 255
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var sz
      int
    =
    fun $select.mem 2
    fun $memory 1
    var s1
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    var t
      type-con $ctype 0
    fun $ref 1
    var p
      type-con $ptr 0
    var i
      int
    var t
      type-con $ctype 0
    fun $select.mem 2
    fun $memory 1
    var s2
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    var t
      type-con $ctype 0
    fun $ref 1
    var p
      type-con $ptr 0
    var i
      int
    var t
      type-con $ctype 0
axiom 0
    forall 1 1 4
      var x
        bool
      pat 1
        fun $bool_id 1
        var x
          bool
      attribute qid 1
        string-attr VccPrelu.2211:31
      attribute uniqueId 1
        string-attr 257
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $bool_id 1
    var x
      bool
    var x
      bool
axiom 0
    =
    fun $min.i1 0
    -
    int-num 0
    int-num 128
axiom 0
    =
    fun $max.i1 0
    int-num 127
axiom 0
    =
    fun $min.i2 0
    -
    int-num 0
    int-num 32768
axiom 0
    =
    fun $max.i2 0
    int-num 32767
axiom 0
    =
    fun $min.i4 0
    -
    int-num 0
    *
    int-num 65536
    int-num 32768
axiom 0
    =
    fun $max.i4 0
    -
    *
    int-num 65536
    int-num 32768
    int-num 1
axiom 0
    =
    fun $min.i8 0
    -
    int-num 0
    *
    *
    *
    int-num 65536
    int-num 65536
    int-num 65536
    int-num 32768
axiom 0
    =
    fun $max.i8 0
    -
    *
    *
    *
    int-num 65536
    int-num 65536
    int-num 65536
    int-num 32768
    int-num 1
axiom 0
    =
    fun $max.u1 0
    int-num 255
axiom 0
    =
    fun $max.u2 0
    int-num 65535
axiom 0
    =
    fun $max.u4 0
    -
    *
    int-num 65536
    int-num 65536
    int-num 1
axiom 0
    =
    fun $max.u8 0
    -
    *
    *
    *
    int-num 65536
    int-num 65536
    int-num 65536
    int-num 65536
    int-num 1
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_i1 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2253:31
      attribute uniqueId 1
        string-attr 258
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $read_i1 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_i2 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2254:31
      attribute uniqueId 1
        string-attr 259
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $read_i2 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_i4 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2255:31
      attribute uniqueId 1
        string-attr 260
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $read_i4 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_i8 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2256:31
      attribute uniqueId 1
        string-attr 261
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $read_i8 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_u1 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2257:31
      attribute uniqueId 1
        string-attr 262
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $read_u1 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_u2 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2258:31
      attribute uniqueId 1
        string-attr 263
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $read_u2 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_u4 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2259:31
      attribute uniqueId 1
        string-attr 264
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $read_u4 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_u8 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2260:31
      attribute uniqueId 1
        string-attr 265
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $read_u8 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.mem 2
    fun $memory 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    =
    fun $ptr_to_u8 1
    fun $null 0
    int-num 0
axiom 0
    =
    fun $ptr_to_i8 1
    fun $null 0
    int-num 0
axiom 0
    =
    fun $ptr_to_u4 1
    fun $null 0
    int-num 0
axiom 0
    =
    fun $ptr_to_i4 1
    fun $null 0
    int-num 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_u8 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2277:15
      attribute uniqueId 1
        string-attr 266
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    fun $ref 1
    var p
      type-con $ptr 0
    <=
    fun $ref 1
    var p
      type-con $ptr 0
    fun $max.u8 0
    =
    fun $ptr_to_u8 1
    var p
      type-con $ptr 0
    fun $ref 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_i8 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2278:15
      attribute uniqueId 1
        string-attr 267
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i8 0
    fun $ref 1
    var p
      type-con $ptr 0
    <=
    fun $ref 1
    var p
      type-con $ptr 0
    fun $max.i8 0
    =
    fun $ptr_to_i8 1
    var p
      type-con $ptr 0
    fun $ref 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_u4 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2279:15
      attribute uniqueId 1
        string-attr 268
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    fun $ref 1
    var p
      type-con $ptr 0
    <=
    fun $ref 1
    var p
      type-con $ptr 0
    fun $max.u4 0
    =
    fun $ptr_to_u4 1
    var p
      type-con $ptr 0
    fun $ref 1
    var p
      type-con $ptr 0
axiom 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $ptr_to_i4 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2280:15
      attribute uniqueId 1
        string-attr 269
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i4 0
    fun $ref 1
    var p
      type-con $ptr 0
    <=
    fun $ref 1
    var p
      type-con $ptr 0
    fun $max.i4 0
    =
    fun $ptr_to_i4 1
    var p
      type-con $ptr 0
    fun $ref 1
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 4
      var p1
        type-con $ptr 0
      var p2
        type-con $ptr 0
      pat 1
        fun $byte_ptr_subtraction 2
        var p1
          type-con $ptr 0
        var p2
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2282:44
      attribute uniqueId 1
        string-attr 270
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $byte_ptr_subtraction 2
    var p1
      type-con $ptr 0
    var p2
      type-con $ptr 0
    -
    fun $ref 1
    var p1
      type-con $ptr 0
    fun $ref 1
    var p2
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_i1 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2285:15
      attribute uniqueId 1
        string-attr 271
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    <=
    fun $min.i1 0
    fun $read_i1 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    fun $read_i1 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $max.i1 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_i2 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2286:15
      attribute uniqueId 1
        string-attr 272
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    <=
    fun $min.i2 0
    fun $read_i2 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    fun $read_i2 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $max.i2 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_i4 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2287:15
      attribute uniqueId 1
        string-attr 273
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    <=
    fun $min.i4 0
    fun $read_i4 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    fun $read_i4 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $max.i4 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_i8 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2288:15
      attribute uniqueId 1
        string-attr 274
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    <=
    fun $min.i8 0
    fun $read_i8 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    fun $read_i8 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $max.i8 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_u1 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2289:15
      attribute uniqueId 1
        string-attr 275
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    <=
    int-num 0
    fun $read_u1 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    fun $read_u1 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $max.u1 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_u2 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2290:15
      attribute uniqueId 1
        string-attr 276
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    <=
    int-num 0
    fun $read_u2 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    fun $read_u2 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $max.u2 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_u4 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2291:15
      attribute uniqueId 1
        string-attr 277
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    <=
    int-num 0
    fun $read_u4 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    fun $read_u4 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $max.u4 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $read_u8 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2292:15
      attribute uniqueId 1
        string-attr 278
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    <=
    int-num 0
    fun $read_u8 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    fun $read_u8 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $max.u8 0
axiom 0
    and 64
    =
    fun $_pow2 1
    int-num 0
    int-num 1
    =
    fun $_pow2 1
    int-num 1
    int-num 2
    =
    fun $_pow2 1
    int-num 2
    int-num 4
    =
    fun $_pow2 1
    int-num 3
    int-num 8
    =
    fun $_pow2 1
    int-num 4
    int-num 16
    =
    fun $_pow2 1
    int-num 5
    int-num 32
    =
    fun $_pow2 1
    int-num 6
    int-num 64
    =
    fun $_pow2 1
    int-num 7
    int-num 128
    =
    fun $_pow2 1
    int-num 8
    int-num 256
    =
    fun $_pow2 1
    int-num 9
    int-num 512
    =
    fun $_pow2 1
    int-num 10
    int-num 1024
    =
    fun $_pow2 1
    int-num 11
    int-num 2048
    =
    fun $_pow2 1
    int-num 12
    int-num 4096
    =
    fun $_pow2 1
    int-num 13
    int-num 8192
    =
    fun $_pow2 1
    int-num 14
    int-num 16384
    =
    fun $_pow2 1
    int-num 15
    int-num 32768
    =
    fun $_pow2 1
    int-num 16
    int-num 65536
    =
    fun $_pow2 1
    int-num 17
    int-num 131072
    =
    fun $_pow2 1
    int-num 18
    int-num 262144
    =
    fun $_pow2 1
    int-num 19
    int-num 524288
    =
    fun $_pow2 1
    int-num 20
    int-num 1048576
    =
    fun $_pow2 1
    int-num 21
    int-num 2097152
    =
    fun $_pow2 1
    int-num 22
    int-num 4194304
    =
    fun $_pow2 1
    int-num 23
    int-num 8388608
    =
    fun $_pow2 1
    int-num 24
    int-num 16777216
    =
    fun $_pow2 1
    int-num 25
    int-num 33554432
    =
    fun $_pow2 1
    int-num 26
    int-num 67108864
    =
    fun $_pow2 1
    int-num 27
    int-num 134217728
    =
    fun $_pow2 1
    int-num 28
    int-num 268435456
    =
    fun $_pow2 1
    int-num 29
    int-num 536870912
    =
    fun $_pow2 1
    int-num 30
    int-num 1073741824
    =
    fun $_pow2 1
    int-num 31
    int-num 2147483648
    =
    fun $_pow2 1
    int-num 32
    int-num 4294967296
    =
    fun $_pow2 1
    int-num 33
    int-num 8589934592
    =
    fun $_pow2 1
    int-num 34
    int-num 17179869184
    =
    fun $_pow2 1
    int-num 35
    int-num 34359738368
    =
    fun $_pow2 1
    int-num 36
    int-num 68719476736
    =
    fun $_pow2 1
    int-num 37
    int-num 137438953472
    =
    fun $_pow2 1
    int-num 38
    int-num 274877906944
    =
    fun $_pow2 1
    int-num 39
    int-num 549755813888
    =
    fun $_pow2 1
    int-num 40
    int-num 1099511627776
    =
    fun $_pow2 1
    int-num 41
    int-num 2199023255552
    =
    fun $_pow2 1
    int-num 42
    int-num 4398046511104
    =
    fun $_pow2 1
    int-num 43
    int-num 8796093022208
    =
    fun $_pow2 1
    int-num 44
    int-num 17592186044416
    =
    fun $_pow2 1
    int-num 45
    int-num 35184372088832
    =
    fun $_pow2 1
    int-num 46
    int-num 70368744177664
    =
    fun $_pow2 1
    int-num 47
    int-num 140737488355328
    =
    fun $_pow2 1
    int-num 48
    int-num 281474976710656
    =
    fun $_pow2 1
    int-num 49
    int-num 562949953421312
    =
    fun $_pow2 1
    int-num 50
    int-num 1125899906842624
    =
    fun $_pow2 1
    int-num 51
    int-num 2251799813685248
    =
    fun $_pow2 1
    int-num 52
    int-num 4503599627370496
    =
    fun $_pow2 1
    int-num 53
    int-num 9007199254740992
    =
    fun $_pow2 1
    int-num 54
    int-num 18014398509481984
    =
    fun $_pow2 1
    int-num 55
    int-num 36028797018963968
    =
    fun $_pow2 1
    int-num 56
    int-num 72057594037927936
    =
    fun $_pow2 1
    int-num 57
    int-num 144115188075855872
    =
    fun $_pow2 1
    int-num 58
    int-num 288230376151711744
    =
    fun $_pow2 1
    int-num 59
    int-num 576460752303423488
    =
    fun $_pow2 1
    int-num 60
    int-num 1152921504606846976
    =
    fun $_pow2 1
    int-num 61
    int-num 2305843009213693952
    =
    fun $_pow2 1
    int-num 62
    int-num 4611686018427387904
    =
    fun $_pow2 1
    int-num 63
    int-num 9223372036854775808
axiom 0
    forall 3 1 4
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $unchk_add 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2318:33
      attribute uniqueId 1
        string-attr 279
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $unchk_add 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    +
    var x
      int
    var y
      int
axiom 0
    forall 3 1 4
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $unchk_sub 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2319:33
      attribute uniqueId 1
        string-attr 280
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $unchk_sub 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    -
    var x
      int
    var y
      int
axiom 0
    forall 3 1 4
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $unchk_mul 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2320:33
      attribute uniqueId 1
        string-attr 281
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $unchk_mul 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    *
    var x
      int
    var y
      int
axiom 0
    forall 3 1 4
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $unchk_div 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2321:33
      attribute uniqueId 1
        string-attr 282
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $unchk_div 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    /
    var x
      int
    var y
      int
axiom 0
    forall 3 1 4
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $unchk_mod 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2322:33
      attribute uniqueId 1
        string-attr 283
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $unchk_mod 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    %
    var x
      int
    var y
      int
axiom 0
    forall 3 1 4
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_shl 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2324:28
      attribute uniqueId 1
        string-attr 284
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $_shl 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $unchecked 2
    var t
      type-con $ctype 0
    *
    var x
      int
    fun $_pow2 1
    var y
      int
axiom 0
    forall 2 1 4
      var x
        int
      var y
        int
      pat 1
        fun $_shr 2
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2326:28
      attribute uniqueId 1
        string-attr 285
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $_shr 2
    var x
      int
    var y
      int
    /
    var x
      int
    fun $_pow2 1
    var y
      int
axiom 0
    forall 5 1 3
      var x
        int
      var from
        int
      var to
        int
      var xs
        int
      var val
        int
      pat 1
        fun $bv_update 5
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2333:15
      attribute uniqueId 1
        string-attr 286
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <
    var val
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
    and 2
    <=
    int-num 0
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    <
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    fun $_pow2 1
    var xs
      int
axiom 0
    forall 3 1 3
      var from
        int
      var to
        int
      var xs
        int
      pat 1
        fun $bv_update 5
        int-num 0
        var xs
          int
        var from
          int
        var to
          int
        int-num 0
      attribute qid 1
        string-attr VccPrelu.2339:15
      attribute uniqueId 1
        string-attr 287
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    =
    fun $bv_update 5
    int-num 0
    var xs
      int
    var from
      int
    var to
      int
    int-num 0
    int-num 0
axiom 0
    forall 5 1 3
      var from
        int
      var to
        int
      var val
        int
      var x
        int
      var xs
        int
      pat 1
        fun $bv_extract_signed 4
        fun $bv_update 5
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
        var val
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr VccPrelu.2343:15
      attribute uniqueId 1
        string-attr 288
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    implies
    and 2
    <=
    -
    int-num 0
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    var val
      int
    <
    var val
      int
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    =
    fun $bv_extract_signed 4
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
axiom 0
    forall 5 1 3
      var from
        int
      var to
        int
      var val
        int
      var x
        int
      var xs
        int
      pat 1
        fun $bv_extract_unsigned 4
        fun $bv_update 5
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
        var val
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr VccPrelu.2349:15
      attribute uniqueId 1
        string-attr 289
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <
    var val
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
    =
    fun $bv_extract_unsigned 4
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var x
        int
      var xs
        int
      pat 1
        fun $bv_extract_signed 4
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr VccPrelu.2355:15
      attribute uniqueId 1
        string-attr 290
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    and 2
    <=
    -
    int-num 0
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    fun $bv_extract_signed 4
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    <=
    fun $bv_extract_signed 4
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    -
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    int-num 1
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var x
        int
      var xs
        int
      pat 1
        fun $bv_extract_unsigned 4
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr VccPrelu.2360:15
      attribute uniqueId 1
        string-attr 291
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    and 2
    <=
    int-num 0
    fun $bv_extract_unsigned 4
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    <=
    fun $bv_extract_unsigned 4
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    -
    fun $_pow2 1
    -
    var to
      int
    var from
      int
    int-num 1
axiom 0
    forall 7 1 3
      var from
        int
      var to
        int
      var val
        int
      var x
        int
      var xs
        int
      var from2
        int
      var to2
        int
      pat 1
        fun $bv_extract_signed 4
        fun $bv_update 5
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
        var val
          int
        var xs
          int
        var from2
          int
        var to2
          int
      attribute qid 1
        string-attr VccPrelu.2365:15
      attribute uniqueId 1
        string-attr 292
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    implies
    and 3
    <=
    int-num 0
    var from2
      int
    <
    var from2
      int
    var to2
      int
    <=
    var to2
      int
    var xs
      int
    implies
    or 2
    <=
    var to2
      int
    var from
      int
    <=
    var to
      int
    var from2
      int
    =
    fun $bv_extract_signed 4
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    var xs
      int
    var from2
      int
    var to2
      int
    fun $bv_extract_signed 4
    var x
      int
    var xs
      int
    var from2
      int
    var to2
      int
axiom 0
    forall 7 1 3
      var from
        int
      var to
        int
      var val
        int
      var x
        int
      var xs
        int
      var from2
        int
      var to2
        int
      pat 1
        fun $bv_extract_unsigned 4
        fun $bv_update 5
        var x
          int
        var xs
          int
        var from
          int
        var to
          int
        var val
          int
        var xs
          int
        var from2
          int
        var to2
          int
      attribute qid 1
        string-attr VccPrelu.2372:15
      attribute uniqueId 1
        string-attr 293
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    implies
    and 3
    <=
    int-num 0
    var from2
      int
    <
    var from2
      int
    var to2
      int
    <=
    var to2
      int
    var xs
      int
    implies
    or 2
    <=
    var to2
      int
    var from
      int
    <=
    var to
      int
    var from2
      int
    =
    fun $bv_extract_unsigned 4
    fun $bv_update 5
    var x
      int
    var xs
      int
    var from
      int
    var to
      int
    var val
      int
    var xs
      int
    var from2
      int
    var to2
      int
    fun $bv_extract_unsigned 4
    var x
      int
    var xs
      int
    var from2
      int
    var to2
      int
axiom 0
    forall 3 1 3
      var from
        int
      var to
        int
      var xs
        int
      pat 1
        fun $bv_extract_signed 4
        int-num 0
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr VccPrelu.2379:15
      attribute uniqueId 1
        string-attr 294
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    =
    fun $bv_extract_signed 4
    int-num 0
    var xs
      int
    var from
      int
    var to
      int
    int-num 0
axiom 0
    forall 3 1 3
      var from
        int
      var to
        int
      var xs
        int
      pat 1
        fun $bv_extract_unsigned 4
        int-num 0
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr VccPrelu.2384:15
      attribute uniqueId 1
        string-attr 295
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    =
    fun $bv_extract_unsigned 4
    int-num 0
    var xs
      int
    var from
      int
    var to
      int
    int-num 0
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var val
        int
      var xs
        int
      pat 1
        fun $bv_extract_unsigned 4
        var val
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr VccPrelu.2389:15
      attribute uniqueId 1
        string-attr 296
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    <=
    int-num 0
    var val
      int
    =
    fun $bv_extract_unsigned 4
    var val
      int
    var xs
      int
    var from
      int
    var to
      int
    %
    /
    var val
      int
    fun $_pow2 1
    var from
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var val
        int
      var xs
        int
      pat 1
        fun $bv_extract_signed 4
        var val
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr VccPrelu.2394:15
      attribute uniqueId 1
        string-attr 297
      attribute bvZ3Native 1
        string-attr False
    implies
    and 5
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    <=
    int-num 0
    var val
      int
    <
    %
    /
    var val
      int
    fun $_pow2 1
    var from
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    =
    fun $bv_extract_signed 4
    var val
      int
    var xs
      int
    var from
      int
    var to
      int
    %
    /
    var val
      int
    fun $_pow2 1
    var from
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
axiom 0
    forall 4 1 3
      var from
        int
      var to
        int
      var val
        int
      var xs
        int
      pat 1
        fun $bv_extract_signed 4
        var val
          int
        var xs
          int
        var from
          int
        var to
          int
      attribute qid 1
        string-attr VccPrelu.2399:15
      attribute uniqueId 1
        string-attr 298
      attribute bvZ3Native 1
        string-attr False
    implies
    and 5
    <=
    int-num 0
    var from
      int
    <
    var from
      int
    var to
      int
    <=
    var to
      int
    var xs
      int
    <=
    int-num 0
    var val
      int
    >=
    %
    /
    var val
      int
    fun $_pow2 1
    var from
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    =
    fun $bv_extract_signed 4
    var val
      int
    var xs
      int
    var from
      int
    var to
      int
    -
    fun $_pow2 1
    -
    -
    var to
      int
    var from
      int
    int-num 1
    %
    /
    var val
      int
    fun $_pow2 1
    var from
      int
    fun $_pow2 1
    -
    var to
      int
    var from
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^i1 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2427:15
      attribute uniqueId 1
        string-attr 299
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^i1 0
    var val
      int
    and 2
    <=
    fun $min.i1 0
    var val
      int
    <=
    var val
      int
    fun $max.i1 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^i2 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2428:15
      attribute uniqueId 1
        string-attr 300
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^i2 0
    var val
      int
    and 2
    <=
    fun $min.i2 0
    var val
      int
    <=
    var val
      int
    fun $max.i2 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^i4 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2429:15
      attribute uniqueId 1
        string-attr 301
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^i4 0
    var val
      int
    and 2
    <=
    fun $min.i4 0
    var val
      int
    <=
    var val
      int
    fun $max.i4 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^i8 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2430:15
      attribute uniqueId 1
        string-attr 302
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^i8 0
    var val
      int
    and 2
    <=
    fun $min.i8 0
    var val
      int
    <=
    var val
      int
    fun $max.i8 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^u1 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2431:15
      attribute uniqueId 1
        string-attr 303
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^u1 0
    var val
      int
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u1 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^u2 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2432:15
      attribute uniqueId 1
        string-attr 304
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^u2 0
    var val
      int
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u2 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^u4 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2433:15
      attribute uniqueId 1
        string-attr 305
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^u4 0
    var val
      int
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u4 0
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $in_range_t 2
        fun ^^u8 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2434:15
      attribute uniqueId 1
        string-attr 306
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_range_t 2
    fun ^^u8 0
    var val
      int
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u8 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var val
        int
      pat 1
        fun $unchecked 2
        var t
          type-con $ctype 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2436:15
      attribute uniqueId 1
        string-attr 307
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var val
      int
    =
    fun $unchecked 2
    var t
      type-con $ctype 0
    var val
      int
    var val
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var val
        int
      pat 1
        fun $unchecked 2
        var t
          type-con $ctype 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2437:15
      attribute uniqueId 1
        string-attr 308
      attribute bvZ3Native 1
        string-attr False
    fun $in_range_t 2
    var t
      type-con $ctype 0
    fun $unchecked 2
    var t
      type-con $ctype 0
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^u1 0
        fun $unchecked 2
        fun ^^i1 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2439:15
      attribute uniqueId 1
        string-attr 309
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u1 0
    =
    fun $unchecked 2
    fun ^^u1 0
    fun $unchecked 2
    fun ^^i1 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^u2 0
        fun $unchecked 2
        fun ^^i2 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2440:15
      attribute uniqueId 1
        string-attr 310
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u2 0
    =
    fun $unchecked 2
    fun ^^u2 0
    fun $unchecked 2
    fun ^^i2 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^u4 0
        fun $unchecked 2
        fun ^^i4 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2441:15
      attribute uniqueId 1
        string-attr 311
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u4 0
    =
    fun $unchecked 2
    fun ^^u4 0
    fun $unchecked 2
    fun ^^i4 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^u8 0
        fun $unchecked 2
        fun ^^i8 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2442:15
      attribute uniqueId 1
        string-attr 312
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var val
      int
    <=
    var val
      int
    fun $max.u8 0
    =
    fun $unchecked 2
    fun ^^u8 0
    fun $unchecked 2
    fun ^^i8 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^i1 0
        fun $unchecked 2
        fun ^^u1 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2443:15
      attribute uniqueId 1
        string-attr 313
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i1 0
    var val
      int
    <=
    var val
      int
    fun $max.i1 0
    =
    fun $unchecked 2
    fun ^^i1 0
    fun $unchecked 2
    fun ^^u1 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^i2 0
        fun $unchecked 2
        fun ^^u2 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2444:15
      attribute uniqueId 1
        string-attr 314
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i2 0
    var val
      int
    <=
    var val
      int
    fun $max.i2 0
    =
    fun $unchecked 2
    fun ^^i2 0
    fun $unchecked 2
    fun ^^u2 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^i4 0
        fun $unchecked 2
        fun ^^u4 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2445:15
      attribute uniqueId 1
        string-attr 315
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i4 0
    var val
      int
    <=
    var val
      int
    fun $max.i4 0
    =
    fun $unchecked 2
    fun ^^i4 0
    fun $unchecked 2
    fun ^^u4 0
    var val
      int
    var val
      int
axiom 0
    forall 1 1 3
      var val
        int
      pat 1
        fun $unchecked 2
        fun ^^i8 0
        fun $unchecked 2
        fun ^^u8 0
        var val
          int
      attribute qid 1
        string-attr VccPrelu.2446:15
      attribute uniqueId 1
        string-attr 316
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    fun $min.i8 0
    var val
      int
    <=
    var val
      int
    fun $max.i8 0
    =
    fun $unchecked 2
    fun ^^i8 0
    fun $unchecked 2
    fun ^^u8 0
    var val
      int
    var val
      int
axiom 0
    forall 4 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      var z
        int
      pat 2
        %
        var x
          int
        fun $_pow2 1
        var y
          int
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var z
          int
      attribute qid 1
        string-attr VccPrelu.2452:15
      attribute uniqueId 1
        string-attr 317
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    -
    fun $_pow2 1
    var y
      int
    int-num 1
    >=
    var x
      int
    int-num 0
    =
    %
    var x
      int
    fun $_pow2 1
    var y
      int
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    -
    fun $_pow2 1
    var y
      int
    int-num 1
axiom 0
    forall 2 1 3
      var i
        int
      var j
        int
      pat 1
        /
        var i
          int
        var j
          int
      attribute qid 1
        string-attr VccPrelu.2458:15
      attribute uniqueId 1
        string-attr 318
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <
    int-num 0
    var j
      int
    <=
    /
    var i
      int
    var j
      int
    var i
      int
axiom 0
    forall 2 1 3
      var i
        int
      var j
        int
      pat 1
        /
        var i
          int
        var j
          int
      attribute qid 1
        string-attr VccPrelu.2460:15
      attribute uniqueId 1
        string-attr 319
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    >
    var i
      int
    int-num 0
    >
    var j
      int
    int-num 0
    and 2
    <
    -
    var i
      int
    var j
      int
    *
    /
    var i
      int
    var j
      int
    var j
      int
    <=
    *
    /
    var i
      int
    var j
      int
    var j
      int
    var i
      int
axiom 0
    forall 1 1 3
      var i
        int
      pat 1
        /
        var i
          int
        var i
          int
      attribute qid 1
        string-attr VccPrelu.2461:15
      attribute uniqueId 1
        string-attr 320
      attribute bvZ3Native 1
        string-attr False
    implies
    not
    =
    var i
      int
    int-num 0
    =
    /
    var i
      int
    var i
      int
    int-num 1
axiom 0
    forall 2 2 3
      var x
        int
      var y
        int
      pat 1
        %
        var x
          int
        var y
          int
      pat 1
        /
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2464:15
      attribute uniqueId 1
        string-attr 321
      attribute bvZ3Native 1
        string-attr False
    =
    %
    var x
      int
    var y
      int
    -
    var x
      int
    *
    /
    var x
      int
    var y
      int
    var y
      int
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        %
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2465:15
      attribute uniqueId 1
        string-attr 322
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var x
      int
    <
    int-num 0
    var y
      int
    and 2
    <=
    int-num 0
    %
    var x
      int
    var y
      int
    <
    %
    var x
      int
    var y
      int
    var y
      int
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        %
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2466:15
      attribute uniqueId 1
        string-attr 323
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var x
      int
    <
    var y
      int
    int-num 0
    and 2
    <=
    int-num 0
    %
    var x
      int
    var y
      int
    <
    %
    var x
      int
    var y
      int
    -
    int-num 0
    var y
      int
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        %
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2467:15
      attribute uniqueId 1
        string-attr 324
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    var x
      int
    int-num 0
    <
    int-num 0
    var y
      int
    and 2
    <
    -
    int-num 0
    var y
      int
    %
    var x
      int
    var y
      int
    <=
    %
    var x
      int
    var y
      int
    int-num 0
axiom 0
    forall 2 1 3
      var x
        int
      var y
        int
      pat 1
        %
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2468:15
      attribute uniqueId 1
        string-attr 325
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    var x
      int
    int-num 0
    <
    var y
      int
    int-num 0
    and 2
    <
    var y
      int
    %
    var x
      int
    var y
      int
    <=
    %
    var x
      int
    var y
      int
    int-num 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2477:15
      attribute uniqueId 1
        string-attr 326
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    and 2
    <=
    int-num 0
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    var x
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2478:15
      attribute uniqueId 1
        string-attr 327
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    int-num 0
    var y
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var y
      int
    and 2
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    var x
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2479:15
      attribute uniqueId 1
        string-attr 328
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    int-num 0
    var y
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var y
      int
    and 2
    <=
    int-num 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    +
    var x
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2480:15
      attribute uniqueId 1
        string-attr 329
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    int-num 0
    var y
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var y
      int
    and 2
    <=
    var x
      int
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    var y
      int
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
axiom 0
    forall 4 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      var z
        int
      pat 2
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
        fun $_pow2 1
        var z
          int
      attribute qid 1
        string-attr VccPrelu.2481:15
      attribute uniqueId 1
        string-attr 330
      attribute bvZ3Native 1
        string-attr False
    implies
    and 8
    <=
    int-num 0
    var x
      int
    <=
    int-num 0
    var y
      int
    <=
    int-num 0
    var z
      int
    <
    var z
      int
    int-num 64
    <
    var x
      int
    fun $_pow2 1
    var z
      int
    <
    var y
      int
    fun $_pow2 1
    var z
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var y
      int
    <
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $_pow2 1
    var z
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2484:15
      attribute uniqueId 1
        string-attr 331
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u1 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u1 0
    and 2
    <=
    int-num 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u1 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2485:15
      attribute uniqueId 1
        string-attr 332
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u2 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u2 0
    and 2
    <=
    int-num 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u2 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2486:15
      attribute uniqueId 1
        string-attr 333
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u4 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u4 0
    and 2
    <=
    int-num 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u4 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2487:15
      attribute uniqueId 1
        string-attr 334
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u8 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u8 0
    and 2
    <=
    int-num 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u8 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2489:15
      attribute uniqueId 1
        string-attr 335
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u1 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u1 0
    and 2
    <=
    int-num 0
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u1 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2490:15
      attribute uniqueId 1
        string-attr 336
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u2 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u2 0
    and 2
    <=
    int-num 0
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u2 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2491:15
      attribute uniqueId 1
        string-attr 337
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u4 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u4 0
    and 2
    <=
    int-num 0
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u4 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2492:15
      attribute uniqueId 1
        string-attr 338
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u8 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u8 0
    and 2
    <=
    int-num 0
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u8 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2494:15
      attribute uniqueId 1
        string-attr 339
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u1 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u1 0
    and 2
    <=
    int-num 0
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u1 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2495:15
      attribute uniqueId 1
        string-attr 340
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u2 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u2 0
    and 2
    <=
    int-num 0
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u2 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2496:15
      attribute uniqueId 1
        string-attr 341
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u4 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u4 0
    and 2
    <=
    int-num 0
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u4 0
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2497:15
      attribute uniqueId 1
        string-attr 342
      attribute bvZ3Native 1
        string-attr False
    implies
    and 4
    <=
    int-num 0
    var x
      int
    <=
    var x
      int
    fun $max.u8 0
    <=
    int-num 0
    var y
      int
    <=
    var y
      int
    fun $max.u8 0
    and 2
    <=
    int-num 0
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    <=
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $max.u8 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_not 2
        var t
          type-con $ctype 0
        var x
          int
      attribute qid 1
        string-attr VccPrelu.2499:15
      attribute uniqueId 1
        string-attr 343
      attribute bvZ3Native 1
        string-attr False
    fun $in_range_t 2
    var t
      type-con $ctype 0
    fun $_not 2
    var t
      type-con $ctype 0
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        fun $_not 2
        var t
          type-con $ctype 0
        var x
          int
      attribute qid 1
        string-attr VccPrelu.2504:15
      attribute uniqueId 1
        string-attr 344
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    int-num 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        fun $_not 2
        var t
          type-con $ctype 0
        var x
          int
      attribute qid 1
        string-attr VccPrelu.2505:15
      attribute uniqueId 1
        string-attr 345
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    var x
      int
    int-num 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        int-num 0
      attribute qid 1
        string-attr VccPrelu.2506:15
      attribute uniqueId 1
        string-attr 346
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    int-num 0
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        fun $_not 2
        var t
          type-con $ctype 0
        int-num 0
      attribute qid 1
        string-attr VccPrelu.2507:15
      attribute uniqueId 1
        string-attr 347
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    int-num 0
    fun $_not 2
    var t
      type-con $ctype 0
    int-num 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var x
          int
      attribute qid 1
        string-attr VccPrelu.2508:15
      attribute uniqueId 1
        string-attr 348
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var x
      int
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        int-num 0
      attribute qid 1
        string-attr VccPrelu.2509:15
      attribute uniqueId 1
        string-attr 349
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    int-num 0
    int-num 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        fun $_not 2
        var t
          type-con $ctype 0
        int-num 0
      attribute qid 1
        string-attr VccPrelu.2510:15
      attribute uniqueId 1
        string-attr 350
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    int-num 0
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var x
          int
      attribute qid 1
        string-attr VccPrelu.2511:15
      attribute uniqueId 1
        string-attr 351
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var x
      int
    var x
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2512:15
      attribute uniqueId 1
        string-attr 352
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_and 3
    var t
      type-con $ctype 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    var y
      int
    var y
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
        var x
          int
      attribute qid 1
        string-attr VccPrelu.2513:15
      attribute uniqueId 1
        string-attr 353
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_and 3
    var t
      type-con $ctype 0
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    var x
      int
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        int-num 0
      attribute qid 1
        string-attr VccPrelu.2514:15
      attribute uniqueId 1
        string-attr 354
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    int-num 0
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var x
          int
      attribute qid 1
        string-attr VccPrelu.2515:15
      attribute uniqueId 1
        string-attr 355
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var x
      int
    int-num 0
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        fun $_not 2
        var t
          type-con $ctype 0
        int-num 0
      attribute qid 1
        string-attr VccPrelu.2516:15
      attribute uniqueId 1
        string-attr 356
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    fun $_not 2
    var t
      type-con $ctype 0
    int-num 0
    fun $_not 2
    var t
      type-con $ctype 0
    var x
      int
axiom 0
    forall 2 1 3
      var t
        type-con $ctype 0
      var x
        int
      pat 1
        fun $_not 2
        var t
          type-con $ctype 0
        fun $_not 2
        var t
          type-con $ctype 0
        var x
          int
      attribute qid 1
        string-attr VccPrelu.2517:15
      attribute uniqueId 1
        string-attr 357
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $in_range_t 2
    var t
      type-con $ctype 0
    var x
      int
    =
    fun $_not 2
    var t
      type-con $ctype 0
    fun $_not 2
    var t
      type-con $ctype 0
    var x
      int
    var x
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_or 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2518:15
      attribute uniqueId 1
        string-attr 358
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_or 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $_or 3
    var t
      type-con $ctype 0
    var y
      int
    var x
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_xor 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2519:15
      attribute uniqueId 1
        string-attr 359
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_xor 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $_xor 3
    var t
      type-con $ctype 0
    var y
      int
    var x
      int
axiom 0
    forall 3 1 3
      var t
        type-con $ctype 0
      var x
        int
      var y
        int
      pat 1
        fun $_and 3
        var t
          type-con $ctype 0
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2520:15
      attribute uniqueId 1
        string-attr 360
      attribute bvZ3Native 1
        string-attr False
    =
    fun $_and 3
    var t
      type-con $ctype 0
    var x
      int
    var y
      int
    fun $_and 3
    var t
      type-con $ctype 0
    var y
      int
    var x
      int
axiom 0
    forall 2 1 4
      var x
        int
      var y
        int
      pat 1
        fun $_mul 2
        var x
          int
        var y
          int
      attribute qid 1
        string-attr VccPrelu.2524:28
      attribute uniqueId 1
        string-attr 361
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $_mul 2
    var x
      int
    var y
      int
    *
    var x
      int
    var y
      int
axiom 0
    forall 2 1 3
      var id
        int
      var length
        int
      pat 1
        fun $get_string_literal 2
        var id
          int
        var length
          int
      attribute qid 1
        string-attr VccPrelu.2531:15
      attribute uniqueId 1
        string-attr 362
      attribute bvZ3Native 1
        string-attr False
    fun $is 2
    fun $get_string_literal 2
    var id
      int
    var length
      int
    fun ^^u1 0
axiom 0
    forall 3 2 3
      var id
        int
      var length
        int
      var S
        type-con $state 0
      pat 1
        fun $typed 2
        var S
          type-con $state 0
        fun $get_string_literal 2
        var id
          int
        var length
          int
      pat 1
        fun $is_array 4
        var S
          type-con $state 0
        fun $get_string_literal 2
        var id
          int
        var length
          int
        fun ^^u1 0
        var length
          int
      attribute qid 1
        string-attr VccPrelu.2532:15
      attribute uniqueId 1
        string-attr 363
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    and 2
    fun $typed 2
    var S
      type-con $state 0
    fun $get_string_literal 2
    var id
      int
    var length
      int
    forall 1 2 3
      var i
        int
      pat 1
        fun $select.sm 2
        fun $statusmap 1
        var S
          type-con $state 0
        fun $idx 3
        fun $get_string_literal 2
        var id
          int
        var length
          int
        var i
          int
        fun ^^u1 0
      pat 1
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        fun $idx 3
        fun $get_string_literal 2
        var id
          int
        var length
          int
        var i
          int
        fun ^^u1 0
      attribute qid 1
        string-attr VccPrelu.2043:13
      attribute uniqueId 1
        string-attr 236
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var i
      int
    <
    var i
      int
    var length
      int
    and 3
    fun $ts_is_array_elt 1
    fun $select.tm 2
    fun $typemap 1
    var S
      type-con $state 0
    fun $idx 3
    fun $get_string_literal 2
    var id
      int
    var length
      int
    var i
      int
    fun ^^u1 0
    fun $is 2
    fun $idx 3
    fun $get_string_literal 2
    var id
      int
    var length
      int
    var i
      int
    fun ^^u1 0
    fun ^^u1 0
    fun $thread_local 2
    var S
      type-con $state 0
    fun $idx 3
    fun $get_string_literal 2
    var id
      int
    var length
      int
    var i
      int
    fun ^^u1 0
axiom 0
    forall 2 1 3
      var no
        int
      var t
        type-con $ctype 0
      pat 1
        fun $get_fnptr 2
        var no
          int
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.2543:21
      attribute uniqueId 1
        string-attr 364
      attribute bvZ3Native 1
        string-attr False
    =
    fun $get_fnptr 2
    var no
      int
    var t
      type-con $ctype 0
    fun $ptr 2
    var t
      type-con $ctype 0
    fun $get_fnptr_ref 1
    var no
      int
axiom 0
    forall 1 0 3
      var no
        int
      attribute qid 1
        string-attr VccPrelu.2550:15
      attribute uniqueId 1
        string-attr 365
      attribute bvZ3Native 1
        string-attr False
    =
    fun $get_fnptr_inv 1
    fun $get_fnptr_ref 1
    var no
      int
    var no
      int
axiom 0
    forall 3 2 3
      var S
        type-con $state 0
      var no
        int
      var t
        type-con $ctype 0
      pat 1
        fun $select.tm 2
        fun $typemap 1
        var S
          type-con $state 0
        fun $get_fnptr 2
        var no
          int
        var t
          type-con $ctype 0
      pat 1
        fun $select.sm 2
        fun $statusmap 1
        var S
          type-con $state 0
        fun $get_fnptr 2
        var no
          int
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.2553:15
      attribute uniqueId 1
        string-attr 366
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $is_fnptr_type 1
    var t
      type-con $ctype 0
    fun $good_state 1
    var S
      type-con $state 0
    fun $mutable 2
    var S
      type-con $state 0
    fun $get_fnptr 2
    var no
      int
    var t
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var t
        type-con $ctype 0
      pat 1
        fun $is_math_type 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.2560:15
      attribute uniqueId 1
        string-attr 367
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is_math_type 1
    var t
      type-con $ctype 0
    fun $is_primitive 1
    var t
      type-con $ctype 0
axiom 0
    forall 1 1 3
      var t
        type-con $ctype 0
      pat 1
        fun $is_fnptr_type 1
        var t
          type-con $ctype 0
      attribute qid 1
        string-attr VccPrelu.2561:15
      attribute uniqueId 1
        string-attr 368
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $is_fnptr_type 1
    var t
      type-con $ctype 0
    fun $is_primitive 1
    var t
      type-con $ctype 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      pat 2
        fun $full_stop 1
        var S
          type-con $state 0
        fun $valid_claim 2
        var S
          type-con $state 0
        var c
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2572:15
      attribute uniqueId 1
        string-attr 369
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $full_stop 1
    var S
      type-con $state 0
    fun $closed 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $valid_claim 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      pat 1
        fun $valid_claim 2
        var S
          type-con $state 0
        var c
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2575:15
      attribute uniqueId 1
        string-attr 370
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $valid_claim 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    and 2
    fun $closed 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $invok_state 1
    var S
      type-con $state 0
axiom 0
    forall 2 1 3
      var c1
        type-con $ptr 0
      var c2
        type-con $ptr 0
      pat 1
        fun $claims_claim 2
        var c1
          type-con $ptr 0
        var c2
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2600:15
      attribute uniqueId 1
        string-attr 373
      attribute bvZ3Native 1
        string-attr False
    implies
    and 3
    fun $is 2
    var c1
      type-con $ptr 0
    fun ^^claim 0
    fun $is 2
    var c2
      type-con $ptr 0
    fun ^^claim 0
    forall 1 0 3
      var S
        type-con $state 0
      attribute qid 1
        string-attr VccPrelu.2602:11
      attribute uniqueId 1
        string-attr 372
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $valid_claim 2
    var S
      type-con $state 0
    var c1
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var c2
      type-con $ptr 0
    fun $claims_claim 2
    var c1
      type-con $ptr 0
    var c2
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var c1
        type-con $ptr 0
      var c2
        type-con $ptr 0
      pat 2
        fun $valid_claim 2
        var S
          type-con $state 0
        var c1
          type-con $ptr 0
        fun $claims_claim 2
        var c1
          type-con $ptr 0
        var c2
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2606:15
      attribute uniqueId 1
        string-attr 374
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $valid_claim 2
    var S
      type-con $state 0
    var c1
      type-con $ptr 0
    fun $claims_claim 2
    var c1
      type-con $ptr 0
    var c2
      type-con $ptr 0
    fun $valid_claim 2
    var S
      type-con $state 0
    var c2
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      var o
        type-con $ptr 0
      pat 2
        fun $closed 2
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        fun $claims_obj 2
        var c
          type-con $ptr 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2609:15
      attribute uniqueId 1
        string-attr 375
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $good_state 1
    var S
      type-con $state 0
    implies
    and 2
    fun $claims_obj 2
    var c
      type-con $ptr 0
    var o
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    and 3
    fun $instantiate_ptrset 1
    fun $owns 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    fun $closed 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    >
    fun $ref_cnt 2
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    int-num 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      var o
        type-con $ptr 0
      pat 2
        fun $valid_claim 2
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        fun $claims_obj 2
        var c
          type-con $ptr 0
        var o
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2614:15
      attribute uniqueId 1
        string-attr 376
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $valid_claim 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $claims_obj 2
    var c
      type-con $ptr 0
    var o
      type-con $ptr 0
    fun $inv2 4
    var S
      type-con $state 0
    var S
      type-con $state 0
    var o
      type-con $ptr 0
    fun $typ 1
    var o
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S
        type-con $state 0
      var c
        type-con $ptr 0
      var r
        int
      pat 2
        fun $valid_claim 2
        var S
          type-con $state 0
        var c
          type-con $ptr 0
        fun $claims_obj 2
        var c
          type-con $ptr 0
        fun $ptr 2
        fun ^^claim 0
        var r
          int
      attribute qid 1
        string-attr VccPrelu.2618:15
      attribute uniqueId 1
        string-attr 377
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $valid_claim 2
    var S
      type-con $state 0
    var c
      type-con $ptr 0
    fun $claims_obj 2
    var c
      type-con $ptr 0
    fun $ptr 2
    fun ^^claim 0
    var r
      int
    fun $valid_claim 2
    var S
      type-con $state 0
    fun $ptr 2
    fun ^^claim 0
    var r
      int
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $not_shared 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2623:34
      attribute uniqueId 1
        string-attr 378
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $not_shared 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    and 7
    fun $closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    =
    fun $owner 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    fun $is 2
    var p
      type-con $ptr 0
    fun $typ 1
    var p
      type-con $ptr 0
    fun $typed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    not
    =
    fun $kind_of 1
    fun $typ 1
    var p
      type-con $ptr 0
    fun $kind_primitive 0
    fun $is_non_primitive 1
    fun $typ 1
    var p
      type-con $ptr 0
    or 2
    not
    fun $is_claimable 1
    fun $typ 1
    var p
      type-con $ptr 0
    =
    fun $ref_cnt 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    int-num 0
axiom 0
    forall 2 1 4
      var s
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $claimed_closed 2
        var s
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2626:38
      attribute uniqueId 1
        string-attr 379
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $claimed_closed 2
    var s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $closed 2
    var s
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    forall 2 1 3
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 2
        fun $invok_state 1
        var S
          type-con $state 0
        fun $claimed_closed 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2629:15
      attribute uniqueId 1
        string-attr 380
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $invok_state 1
    var S
      type-con $state 0
    fun $claimed_closed 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $inv2 4
    var S
      type-con $state 0
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $typ 1
    var p
      type-con $ptr 0
axiom 0
    =
    fun $no_claim 0
    fun $ptr 2
    fun ^^claim 0
    int-num 0
axiom 0
    forall 2 1 4
      var S
        type-con $state 0
      var p
        type-con $ptr 0
      pat 1
        fun $ref_cnt 2
        var S
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2685:31
      attribute uniqueId 1
        string-attr 388
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    =
    fun $ref_cnt 2
    var S
      type-con $state 0
    var p
      type-con $ptr 0
    fun $st_ref_cnt 1
    fun $select.sm 2
    fun $statusmap 1
    var S
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    fun $is_claimable 1
    fun ^^claim 0
axiom 0
    forall 1 0 3
      var p
        type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.2729:15
      attribute uniqueId 1
        string-attr 390
      attribute bvZ3Native 1
        string-attr False
    =
    fun $int_to_ptrset 1
    fun $ptrset_to_int 1
    var p
      type-con $ptrset 0
    var p
      type-con $ptrset 0
axiom 0
    forall 1 0 3
      var p
        type-con $version 0
      attribute qid 1
        string-attr VccPrelu.2733:15
      attribute uniqueId 1
        string-attr 391
      attribute bvZ3Native 1
        string-attr False
    =
    fun $int_to_version 1
    fun $version_to_int 1
    var p
      type-con $version 0
    var p
      type-con $version 0
axiom 0
    forall 1 0 3
      var p
        type-con $vol_version 0
      attribute qid 1
        string-attr VccPrelu.2737:15
      attribute uniqueId 1
        string-attr 392
      attribute bvZ3Native 1
        string-attr False
    =
    fun $int_to_vol_version 1
    fun $vol_version_to_int 1
    var p
      type-con $vol_version 0
    var p
      type-con $vol_version 0
axiom 0
    forall 1 0 3
      var p
        type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2741:15
      attribute uniqueId 1
        string-attr 393
      attribute bvZ3Native 1
        string-attr False
    =
    fun $int_to_ptr 1
    fun $ptr_to_int 1
    var p
      type-con $ptr 0
    var p
      type-con $ptr 0
axiom 0
    forall 3 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var W
        type-con $ptrset 0
      pat 1
        fun $updated_only_values 3
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var W
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.2752:15
      attribute uniqueId 1
        string-attr 395
      attribute bvZ3Native 1
        string-attr False
    implies
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $dont_instantiate 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2754:11
      attribute uniqueId 1
        string-attr 394
      attribute bvZ3Native 1
        string-attr False
    implies
    or 2
    fun $is_primitive 1
    fun $typ 1
    var p
      type-con $ptr 0
    fun $is_non_primitive 1
    fun $typ 1
    var p
      type-con $ptr 0
    implies
    and 2
    fun $typed 2
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    not
    or 2
    not
    =
    fun $owner 2
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $me 0
    and 2
    =
    fun $kind_of 1
    fun $typ 1
    var p
      type-con $ptr 0
    fun $kind_primitive 0
    fun $closed 2
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    or 2
    =
    fun $select.mem 2
    fun $memory 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.mem 2
    fun $memory 1
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    fun $set_in 2
    var p
      type-con $ptr 0
    var W
      type-con $ptrset 0
    fun $updated_only_values 3
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var W
      type-con $ptrset 0
axiom 0
    forall 3 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var W
        type-con $ptrset 0
      pat 1
        fun $updated_only_domains 3
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var W
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.2759:15
      attribute uniqueId 1
        string-attr 397
      attribute bvZ3Native 1
        string-attr False
    implies
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $dont_instantiate 1
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2761:11
      attribute uniqueId 1
        string-attr 396
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    fun $set_in 2
    var p
      type-con $ptr 0
    var W
      type-con $ptrset 0
    not
    =
    fun $kind_of 1
    fun $typ 1
    var p
      type-con $ptr 0
    fun $kind_primitive 0
    or 2
    =
    fun $select.mem 2
    fun $memory 1
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.mem 2
    fun $memory 1
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    fun $domain_updated_at 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var W
      type-con $ptrset 0
    fun $updated_only_domains 3
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var W
      type-con $ptrset 0
axiom 0
    forall 4 1 3
      var S1
        type-con $state 0
      var S2
        type-con $state 0
      var p
        type-con $ptr 0
      var W
        type-con $ptrset 0
      pat 1
        fun $domain_updated_at 4
        var S1
          type-con $state 0
        var S2
          type-con $state 0
        var p
          type-con $ptr 0
        var W
          type-con $ptrset 0
      attribute qid 1
        string-attr VccPrelu.2777:29
      attribute uniqueId 1
        string-attr 399
      attribute bvZ3Native 1
        string-attr False
    =
    fun $domain_updated_at 4
    var S1
      type-con $state 0
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var W
      type-con $ptrset 0
    and 2
    forall 1 1 3
      var q
        type-con $ptr 0
      pat 1
        fun $fetch_from_domain 2
        fun $read_version 2
        var S2
          type-con $state 0
        var p
          type-con $ptr 0
        var q
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.2778:13
      attribute uniqueId 1
        string-attr 398
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    =
    fun $kind_of 1
    fun $typ 1
    var q
      type-con $ptr 0
    fun $kind_primitive 0
    not
    fun $set_in 2
    var q
      type-con $ptr 0
    var W
      type-con $ptrset 0
    =
    fun $fetch_from_domain 2
    fun $read_version 2
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    fun $fetch_from_domain 2
    fun $read_version 2
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
    var q
      type-con $ptr 0
    =
    fun $domain 2
    var S1
      type-con $state 0
    var p
      type-con $ptr 0
    fun $domain 2
    var S2
      type-con $state 0
    var p
      type-con $ptr 0
axiom 0
    =
    fun #distTp1 0
    fun $ptr_to 1
    fun ^^u1 0
axiom 0
    fun $type_code_is 2
    int-num 1
    fun ^^u4 0
axiom 0
    fun $file_name_is 2
    int-num 1
    fun #file^Z?3A?5CC?5Cmax.c 0
var-decl $s 0
    type-con $state 0
vc maximum 1
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 0
    var L#max
      int
    <=
    var L#max
      int
    fun $max.u1 0
    implies
    and 2
    <=
    int-num 0
    var L#p
      int
    <=
    var L#p
      int
    fun $max.u4 0
    implies
    and 2
    <=
    int-num 0
    var SL#witness
      int
    <=
    var SL#witness
      int
    fun $max.u4 0
    implies
    <
    var P#len
      int
    int-num 1099511627776
    implies
    <
    int-num 0
    var P#len
      int
    implies
    and 6
    fun $closed 2
    var $s
      type-con $state 0
    fun $ptr 2
    fun $array 2
    fun ^^u1 0
    var P#len
      int
    fun $ref 1
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    =
    fun $owner 2
    var $s
      type-con $state 0
    fun $ptr 2
    fun $array 2
    fun ^^u1 0
    var P#len
      int
    fun $ref 1
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    fun $me 0
    fun $is 2
    fun $ptr 2
    fun $array 2
    fun ^^u1 0
    var P#len
      int
    fun $ref 1
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    fun $array 2
    fun ^^u1 0
    var P#len
      int
    fun $typed 2
    var $s
      type-con $state 0
    fun $ptr 2
    fun $array 2
    fun ^^u1 0
    var P#len
      int
    fun $ref 1
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    not
    =
    fun $kind_of 1
    fun $array 2
    fun ^^u1 0
    var P#len
      int
    fun $kind_primitive 0
    fun $is_non_primitive 1
    fun $array 2
    fun ^^u1 0
    var P#len
      int
    implies
    true
    implies
    fun $function_entry 1
    var $s
      type-con $state 0
    implies
    and 2
    fun $good_state_ext 2
    fun #tok$1^6.1 0
    var $s
      type-con $state 0
    fun $full_stop 1
    var $s
      type-con $state 0
    implies
    forall 1 1 3
      var f
        type-con $pure_function 0
      pat 1
        fun $frame_level 1
        var f
          type-con $pure_function 0
      attribute qid 1
        string-attr VccPrelu.2703:13
      attribute uniqueId 1
        string-attr 389
      attribute bvZ3Native 1
        string-attr False
    <
    fun $frame_level 1
    var f
      type-con $pure_function 0
    fun $current_frame_level 0
    implies
    and 2
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^6.1 0
    fun #loc.arr 0
    fun $ptr_to_int 1
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    fun $ptr_to 1
    fun ^^u1 0
    fun $local_value_is_ptr 5
    var $s
      type-con $state 0
    fun #tok$1^6.1 0
    fun #loc.arr 0
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    fun $ptr_to 1
    fun ^^u1 0
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^6.1 0
    fun #loc.len 0
    var P#len
      int
    fun ^^u4 0
    implies
    =
    var #wrTime$1^6.1
      int
    fun $current_timestamp 1
    var $s
      type-con $state 0
    implies
    forall 1 1 3
      var #p
        type-con $ptr 0
      pat 1
        fun $in_writes_at 2
        var #wrTime$1^6.1
          int
        var #p
          type-con $ptr 0
      attribute qid 1
        string-attr nofile.0:0
      attribute uniqueId 1
        string-attr 2
      attribute bvZ3Native 1
        string-attr False
    =
    fun $in_writes_at 2
    var #wrTime$1^6.1
      int
    var #p
      type-con $ptr 0
    false
    implies
    and 2
    <=
    int-num 0
    var P#len
      int
    <=
    var P#len
      int
    fun $max.u4 0
    and 2
    label neg 7 27
    fun $in_domain_lab 4
    var $s
      type-con $state 0
    fun $ptr 2
    fun $array 2
    fun ^^u1 0
    var P#len
      int
    fun $ref 1
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    fun $ptr 2
    fun $array 2
    fun ^^u1 0
    var P#len
      int
    fun $ref 1
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    fun l#public 0
    implies
    fun $in_domain_lab 4
    var $s
      type-con $state 0
    fun $ptr 2
    fun $array 2
    fun ^^u1 0
    var P#len
      int
    fun $ref 1
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    fun $ptr 2
    fun $array 2
    fun ^^u1 0
    var P#len
      int
    fun $ref 1
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    fun l#public 0
    and 2
    label neg 12 14
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    int-num 0
    fun ^^u1 0
    fun ^^u1 0
    fun $typed 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    int-num 0
    fun ^^u1 0
    implies
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    int-num 0
    fun ^^u1 0
    fun ^^u1 0
    fun $typed 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    int-num 0
    fun ^^u1 0
    and 2
    label neg 12 14
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    int-num 0
    fun ^^u1 0
    fun ^^u1 0
    fun $thread_local 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    int-num 0
    fun ^^u1 0
    implies
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    int-num 0
    fun ^^u1 0
    fun ^^u1 0
    fun $thread_local 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    int-num 0
    fun ^^u1 0
    implies
    =
    var L#max@0
      int
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    int-num 0
    fun ^^u1 0
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^12.3 0
    fun #loc.max 0
    var L#max@0
      int
    fun ^^u1 0
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^14.3 0
    fun #loc.witness 0
    int-num 0
    fun ^^u4 0
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^16.8 0
    fun #loc.p 0
    int-num 1
    fun ^^u4 0
    implies
    and 4
    <=
    int-num 1
    int-num 1
    <=
    int-num 1
    int-num 1
    <=
    int-num 0
    int-num 0
    <=
    int-num 0
    int-num 0
    and 2
    label neg 17 17
    <=
    int-num 1
    var P#len
      int
    implies
    <=
    int-num 1
    var P#len
      int
    and 2
    label neg 18 17
    forall 1 0 3
      var Q#i$1^18.17#tc1
        int
      attribute qid 1
        string-attr maxc.18:17
      attribute uniqueId 1
        string-attr 3
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var Q#i$1^18.17#tc1
      int
    <=
    var Q#i$1^18.17#tc1
      int
    fun $max.u4 0
    implies
    <
    var Q#i$1^18.17#tc1
      int
    int-num 1
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^18.17#tc1
      int
    fun ^^u1 0
    var L#max@0
      int
    implies
    forall 1 0 3
      var Q#i$1^18.17#tc1
        int
      attribute qid 1
        string-attr maxc.18:17
      attribute uniqueId 1
        string-attr 3
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var Q#i$1^18.17#tc1
      int
    <=
    var Q#i$1^18.17#tc1
      int
    fun $max.u4 0
    implies
    <
    var Q#i$1^18.17#tc1
      int
    int-num 1
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^18.17#tc1
      int
    fun ^^u1 0
    var L#max@0
      int
    and 2
    label neg 19 17
    and 2
    <
    int-num 0
    var P#len
      int
    =
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    int-num 0
    fun ^^u1 0
    var L#max@0
      int
    implies
    and 2
    <
    int-num 0
    var P#len
      int
    =
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    int-num 0
    fun ^^u1 0
    var L#max@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 0
    var L#max@1
      int
    <=
    var L#max@1
      int
    fun $max.u1 0
    implies
    and 2
    <=
    int-num 0
    var SL#witness@0
      int
    <=
    var SL#witness@0
      int
    fun $max.u4 0
    implies
    and 2
    <=
    int-num 0
    var L#p@0
      int
    <=
    var L#p@0
      int
    fun $max.u4 0
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    <=
    var L#p@0
      int
    var P#len
      int
    implies
    forall 1 0 3
      var Q#i$1^18.17#tc1
        int
      attribute qid 1
        string-attr maxc.18:17
      attribute uniqueId 1
        string-attr 3
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var Q#i$1^18.17#tc1
      int
    <=
    var Q#i$1^18.17#tc1
      int
    fun $max.u4 0
    implies
    <
    var Q#i$1^18.17#tc1
      int
    var L#p@0
      int
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^18.17#tc1
      int
    fun ^^u1 0
    var L#max@1
      int
    implies
    and 2
    <
    var SL#witness@0
      int
    var P#len
      int
    =
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var SL#witness@0
      int
    fun ^^u1 0
    var L#max@1
      int
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    and 2
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    not
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    and 2
    fun $good_state_ext 2
    fun #tok$1^16.3 0
    var $s
      type-con $state 0
    fun $full_stop 1
    var $s
      type-con $state 0
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    and 2
    label neg 27 3
    fun $position_marker 0
    implies
    fun $position_marker 0
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    =
    var L#max@4
      int
    var L#max@1
      int
    implies
    =
    var L#p@2
      int
    var L#p@0
      int
    implies
    =
    var SL#witness@2
      int
    var SL#witness@0
      int
    implies
    =
    var $result@0
      int
    var L#max@1
      int
    implies
    label pos 0 0
    true
    and 2
    label neg 9 14
    forall 1 0 3
      var Q#i$1^9.14#tc1
        int
      attribute qid 1
        string-attr maxc.9:14
      attribute uniqueId 1
        string-attr 1
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var Q#i$1^9.14#tc1
      int
    <=
    var Q#i$1^9.14#tc1
      int
    fun $max.u4 0
    implies
    <
    var Q#i$1^9.14#tc1
      int
    var P#len
      int
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^9.14#tc1
      int
    fun ^^u1 0
    var $result@0
      int
    implies
    forall 1 0 3
      var Q#i$1^9.14#tc1
        int
      attribute qid 1
        string-attr maxc.9:14
      attribute uniqueId 1
        string-attr 1
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var Q#i$1^9.14#tc1
      int
    <=
    var Q#i$1^9.14#tc1
      int
    fun $max.u4 0
    implies
    <
    var Q#i$1^9.14#tc1
      int
    var P#len
      int
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^9.14#tc1
      int
    fun ^^u1 0
    var $result@0
      int
    and 2
    label neg 10 14
    exists 1 0 3
      var Q#i$1^10.14#tc1
        int
      attribute qid 1
        string-attr maxc.10:14
      attribute uniqueId 1
        string-attr 0
      attribute bvZ3Native 1
        string-attr False
    and 4
    <=
    int-num 0
    var Q#i$1^10.14#tc1
      int
    <=
    var Q#i$1^10.14#tc1
      int
    fun $max.u4 0
    <
    var Q#i$1^10.14#tc1
      int
    var P#len
      int
    =
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^10.14#tc1
      int
    fun ^^u1 0
    var $result@0
      int
    implies
    exists 1 0 3
      var Q#i$1^10.14#tc1
        int
      attribute qid 1
        string-attr maxc.10:14
      attribute uniqueId 1
        string-attr 0
      attribute bvZ3Native 1
        string-attr False
    and 4
    <=
    int-num 0
    var Q#i$1^10.14#tc1
      int
    <=
    var Q#i$1^10.14#tc1
      int
    fun $max.u4 0
    <
    var Q#i$1^10.14#tc1
      int
    var P#len
      int
    =
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^10.14#tc1
      int
    fun ^^u1 0
    var $result@0
      int
    true
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    and 7
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $select.sm 2
        fun $statusmap 1
        var $s
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1970:13
      attribute uniqueId 1
        string-attr 220
      attribute bvZ3Native 1
        string-attr False
    implies
    not
    =
    fun $kind_of 1
    fun $typ 1
    fun $owner 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $kind_thread 0
    not
    =
    fun $kind_of 1
    fun $typ 1
    fun $owner 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $kind_thread 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $select.mem 2
        fun $memory 1
        var $s
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1972:13
      attribute uniqueId 1
        string-attr 221
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $thread_local 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    =
    fun $select.mem 2
    fun $memory 1
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.mem 2
    fun $memory 1
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $thread_local 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $select.sm 2
        fun $statusmap 1
        var $s
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1974:13
      attribute uniqueId 1
        string-attr 222
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $thread_local 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    =
    fun $select.sm 2
    fun $statusmap 1
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.sm 2
    fun $statusmap 1
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $thread_local 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    forall 1 1 3
      var p
        type-con $ptr 0
      pat 1
        fun $select.tm 2
        fun $typemap 1
        var $s
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1976:13
      attribute uniqueId 1
        string-attr 223
      attribute bvZ3Native 1
        string-attr False
    implies
    fun $thread_local 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    and 2
    =
    fun $select.tm 2
    fun $typemap 1
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $select.tm 2
    fun $typemap 1
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $thread_local 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    <=
    fun $current_timestamp 1
    var $s
      type-con $state 0
    fun $current_timestamp 1
    var $s
      type-con $state 0
    forall 1 1 4
      var p
        type-con $ptr 0
      pat 1
        fun $timestamp 2
        var $s
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1274:13
      attribute uniqueId 1
        string-attr 139
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    <=
    fun $timestamp 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $timestamp 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $call_transition 2
    var $s
      type-con $state 0
    var $s
      type-con $state 0
    implies
    and 3
    <=
    fun $current_timestamp 1
    var $s
      type-con $state 0
    fun $current_timestamp 1
    var $s
      type-con $state 0
    forall 1 1 4
      var p
        type-con $ptr 0
      pat 1
        fun $timestamp 2
        var $s
          type-con $state 0
        var p
          type-con $ptr 0
      attribute qid 1
        string-attr VccPrelu.1274:13
      attribute uniqueId 1
        string-attr 139
      attribute bvZ3Native 1
        string-attr False
      attribute weight 1
        expr-attr
          int-num 0
    <=
    fun $timestamp 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $timestamp 2
    var $s
      type-con $state 0
    var p
      type-con $ptr 0
    fun $call_transition 2
    var $s
      type-con $state 0
    var $s
      type-con $state 0
    implies
    and 2
    fun $good_state_ext 2
    fun #tok$1^16.3 0
    var $s
      type-con $state 0
    fun $full_stop 1
    var $s
      type-con $state 0
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^16.3 0
    fun #loc.p 0
    var L#p@0
      int
    fun ^^u4 0
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^16.3 0
    fun #loc.witness 0
    var SL#witness@0
      int
    fun ^^u4 0
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^16.3 0
    fun #loc.max 0
    var L#max@1
      int
    fun ^^u1 0
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^16.3 0
    fun #loc.len 0
    var P#len
      int
    fun ^^u4 0
    implies
    and 2
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^16.3 0
    fun #loc.arr 0
    fun $ptr_to_int 1
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    fun $ptr_to 1
    fun ^^u1 0
    fun $local_value_is_ptr 5
    var $s
      type-con $state 0
    fun #tok$1^16.3 0
    fun #loc.arr 0
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    fun $ptr_to 1
    fun ^^u1 0
    implies
    and 2
    =
    fun $typemap 1
    var $s
      type-con $state 0
    fun $typemap 1
    var $s
      type-con $state 0
    =
    fun $statusmap 1
    var $s
      type-con $state 0
    fun $statusmap 1
    var $s
      type-con $state 0
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    and 2
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    <
    var L#p@0
      int
    var P#len
      int
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    and 2
    label neg 21 9
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    fun ^^u1 0
    fun $typed 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    implies
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    fun ^^u1 0
    fun $typed 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    and 2
    label neg 21 9
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    fun ^^u1 0
    fun $thread_local 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    implies
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    fun ^^u1 0
    fun $thread_local 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    and 2
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    >
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    var L#max@1
      int
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    and 2
    label neg 23 13
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    fun ^^u1 0
    fun $typed 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    implies
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    fun ^^u1 0
    fun $typed 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    and 2
    label neg 23 13
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    fun ^^u1 0
    fun $thread_local 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    implies
    and 2
    fun $is 2
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    fun ^^u1 0
    fun $thread_local 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    implies
    =
    var L#max@2
      int
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^23.7 0
    fun #loc.max 0
    var L#max@2
      int
    fun ^^u1 0
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^24.47 0
    fun #loc.witness 0
    var L#p@0
      int
    fun ^^u4 0
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 1
    var L#p@0
      int
    implies
    label pos 0 0
    true
    implies
    =
    var L#max@3
      int
    var L#max@2
      int
    implies
    =
    var SL#witness@1
      int
    var L#p@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@1
      int
    and 2
    label neg 16 24
    and 2
    <=
    int-num 0
    +
    var L#p@0
      int
    int-num 1
    <=
    +
    var L#p@0
      int
    int-num 1
    fun $max.u4 0
    implies
    and 2
    <=
    int-num 0
    +
    var L#p@0
      int
    int-num 1
    <=
    +
    var L#p@0
      int
    int-num 1
    fun $max.u4 0
    implies
    =
    var L#p@1
      int
    +
    var L#p@0
      int
    int-num 1
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^16.24 0
    fun #loc.p 0
    var L#p@1
      int
    fun ^^u4 0
    implies
    and 2
    <=
    int-num 2
    var L#p@1
      int
    <=
    int-num 0
    var SL#witness@1
      int
    implies
    label pos 0 0
    true
    and 2
    label neg 17 17
    <=
    var L#p@1
      int
    var P#len
      int
    implies
    <=
    var L#p@1
      int
    var P#len
      int
    and 2
    label neg 18 17
    forall 1 0 3
      var Q#i$1^18.17#tc1
        int
      attribute qid 1
        string-attr maxc.18:17
      attribute uniqueId 1
        string-attr 3
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var Q#i$1^18.17#tc1
      int
    <=
    var Q#i$1^18.17#tc1
      int
    fun $max.u4 0
    implies
    <
    var Q#i$1^18.17#tc1
      int
    var L#p@1
      int
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^18.17#tc1
      int
    fun ^^u1 0
    var L#max@3
      int
    implies
    forall 1 0 3
      var Q#i$1^18.17#tc1
        int
      attribute qid 1
        string-attr maxc.18:17
      attribute uniqueId 1
        string-attr 3
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var Q#i$1^18.17#tc1
      int
    <=
    var Q#i$1^18.17#tc1
      int
    fun $max.u4 0
    implies
    <
    var Q#i$1^18.17#tc1
      int
    var L#p@1
      int
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^18.17#tc1
      int
    fun ^^u1 0
    var L#max@3
      int
    and 2
    label neg 19 17
    and 2
    <
    var SL#witness@1
      int
    var P#len
      int
    =
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var SL#witness@1
      int
    fun ^^u1 0
    var L#max@3
      int
    implies
    and 2
    <
    var SL#witness@1
      int
    var P#len
      int
    =
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var SL#witness@1
      int
    fun ^^u1 0
    var L#max@3
      int
    implies
    false
    true
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var L#p@0
      int
    fun ^^u1 0
    var L#max@1
      int
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    =
    var L#max@3
      int
    var L#max@1
      int
    implies
    =
    var SL#witness@1
      int
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@1
      int
    and 2
    label neg 16 24
    and 2
    <=
    int-num 0
    +
    var L#p@0
      int
    int-num 1
    <=
    +
    var L#p@0
      int
    int-num 1
    fun $max.u4 0
    implies
    and 2
    <=
    int-num 0
    +
    var L#p@0
      int
    int-num 1
    <=
    +
    var L#p@0
      int
    int-num 1
    fun $max.u4 0
    implies
    =
    var L#p@1
      int
    +
    var L#p@0
      int
    int-num 1
    implies
    fun $local_value_is 5
    var $s
      type-con $state 0
    fun #tok$1^16.24 0
    fun #loc.p 0
    var L#p@1
      int
    fun ^^u4 0
    implies
    and 2
    <=
    int-num 2
    var L#p@1
      int
    <=
    int-num 0
    var SL#witness@1
      int
    implies
    label pos 0 0
    true
    and 2
    label neg 17 17
    <=
    var L#p@1
      int
    var P#len
      int
    implies
    <=
    var L#p@1
      int
    var P#len
      int
    and 2
    label neg 18 17
    forall 1 0 3
      var Q#i$1^18.17#tc1
        int
      attribute qid 1
        string-attr maxc.18:17
      attribute uniqueId 1
        string-attr 3
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var Q#i$1^18.17#tc1
      int
    <=
    var Q#i$1^18.17#tc1
      int
    fun $max.u4 0
    implies
    <
    var Q#i$1^18.17#tc1
      int
    var L#p@1
      int
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^18.17#tc1
      int
    fun ^^u1 0
    var L#max@3
      int
    implies
    forall 1 0 3
      var Q#i$1^18.17#tc1
        int
      attribute qid 1
        string-attr maxc.18:17
      attribute uniqueId 1
        string-attr 3
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var Q#i$1^18.17#tc1
      int
    <=
    var Q#i$1^18.17#tc1
      int
    fun $max.u4 0
    implies
    <
    var Q#i$1^18.17#tc1
      int
    var L#p@1
      int
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^18.17#tc1
      int
    fun ^^u1 0
    var L#max@3
      int
    and 2
    label neg 19 17
    and 2
    <
    var SL#witness@1
      int
    var P#len
      int
    =
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var SL#witness@1
      int
    fun ^^u1 0
    var L#max@3
      int
    implies
    and 2
    <
    var SL#witness@1
      int
    var P#len
      int
    =
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var SL#witness@1
      int
    fun ^^u1 0
    var L#max@3
      int
    implies
    false
    true
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    >=
    var L#p@0
      int
    var P#len
      int
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    and 2
    label neg 27 3
    fun $position_marker 0
    implies
    fun $position_marker 0
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    and 2
    <=
    int-num 1
    var L#p@0
      int
    <=
    int-num 0
    var SL#witness@0
      int
    implies
    label pos 0 0
    true
    implies
    =
    var L#max@4
      int
    var L#max@1
      int
    implies
    =
    var L#p@2
      int
    var L#p@0
      int
    implies
    =
    var SL#witness@2
      int
    var SL#witness@0
      int
    implies
    =
    var $result@0
      int
    var L#max@1
      int
    implies
    label pos 0 0
    true
    and 2
    label neg 9 14
    forall 1 0 3
      var Q#i$1^9.14#tc1
        int
      attribute qid 1
        string-attr maxc.9:14
      attribute uniqueId 1
        string-attr 1
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var Q#i$1^9.14#tc1
      int
    <=
    var Q#i$1^9.14#tc1
      int
    fun $max.u4 0
    implies
    <
    var Q#i$1^9.14#tc1
      int
    var P#len
      int
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^9.14#tc1
      int
    fun ^^u1 0
    var $result@0
      int
    implies
    forall 1 0 3
      var Q#i$1^9.14#tc1
        int
      attribute qid 1
        string-attr maxc.9:14
      attribute uniqueId 1
        string-attr 1
      attribute bvZ3Native 1
        string-attr False
    implies
    and 2
    <=
    int-num 0
    var Q#i$1^9.14#tc1
      int
    <=
    var Q#i$1^9.14#tc1
      int
    fun $max.u4 0
    implies
    <
    var Q#i$1^9.14#tc1
      int
    var P#len
      int
    <=
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^9.14#tc1
      int
    fun ^^u1 0
    var $result@0
      int
    and 2
    label neg 10 14
    exists 1 0 3
      var Q#i$1^10.14#tc1
        int
      attribute qid 1
        string-attr maxc.10:14
      attribute uniqueId 1
        string-attr 0
      attribute bvZ3Native 1
        string-attr False
    and 4
    <=
    int-num 0
    var Q#i$1^10.14#tc1
      int
    <=
    var Q#i$1^10.14#tc1
      int
    fun $max.u4 0
    <
    var Q#i$1^10.14#tc1
      int
    var P#len
      int
    =
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^10.14#tc1
      int
    fun ^^u1 0
    var $result@0
      int
    implies
    exists 1 0 3
      var Q#i$1^10.14#tc1
        int
      attribute qid 1
        string-attr maxc.10:14
      attribute uniqueId 1
        string-attr 0
      attribute bvZ3Native 1
        string-attr False
    and 4
    <=
    int-num 0
    var Q#i$1^10.14#tc1
      int
    <=
    var Q#i$1^10.14#tc1
      int
    fun $max.u4 0
    <
    var Q#i$1^10.14#tc1
      int
    var P#len
      int
    =
    fun $read_u1 2
    var $s
      type-con $state 0
    fun $idx 3
    fun $ptr 2
    fun ^^u1 0
    var P#arr
      int
    var Q#i$1^10.14#tc1
      int
    fun ^^u1 0
    var $result@0
      int
    true
