theory S_L_Spark_User
imports
  S_L_Spark_Specification
  S_L_Spark_Declaration
  Global_User
begin


lemma goal2'1:
  assumes "0 <= j''"
  assumes "j'' <= 79"
  shows "(rotate_definition___default_arr''
     (0 := 11, 1 := 14, 2 := 15, 3 := 12, 4 := 5, 5 := 8, 6 := 7, 7 := 9,
      8 := 11, 9 := 13, 10 := 14, 11 := 15, 12 := 6, 13 := 7, 14 := 9,
      15 := 8, 16 := 7, 17 := 6, 18 := 8, 19 := 13, 20 := 11, 21 := 9,
      22 := 7, 23 := 15, 24 := 7, 25 := 12, 26 := 15, 27 := 9, 28 := 11,
      29 := 7, 30 := 13, 31 := 12, 32 := 11, 33 := 13, 34 := 6, 35 := 7,
      36 := 14, 37 := 9, 38 := 13, 39 := 15, 40 := 14, 41 := 8, 42 := 13,
      43 := 6, 44 := 5, 45 := 12, 46 := 7, 47 := 5, 48 := 11, 49 := 12,
      50 := 14, 51 := 15, 52 := 14, 53 := 15, 54 := 9, 55 := 8, 56 := 9,
      57 := 14, 58 := 5, 59 := 6, 60 := 8, 61 := 6, 62 := 5, 63 := 12,
      64 := 9, 65 := 15, 66 := 5, 67 := 11, 68 := 6, 69 := 8, 70 := 13,
      71 := 12, 72 := 5, 73 := 12, 74 := 13, 75 := 14, 76 := 11, 77 := 8,
      78 := 5, 79 := 6))
     j'' =
    S_L_Spark_Specification.s_l' j''"
proof -
  note nth_list_to_fun_eff_eq
  moreover have "0 <= nat j''" by simp
  moreover from `j'' <= 79` have "nat j'' < length s_list"
    unfolding s_list_def by simp
  ultimately have conversion:
    "int (s_list ! nat j'') =
      list_to_fun_eff
        s_list 0 rotate_definition___default_arr'' (int (nat j''))" .
  show ?thesis unfolding s_def conversion
    unfolding s_list_def using `0 <= j''` `j'' <= 79`
    by simp
qed


lemma goal2'2:
  assumes "0 <= j''"
  assumes "j'' <= 79"
  shows "0 \<le> (rotate_definition___default_arr''
         (0 := 11, 1 := 14, 2 := 15, 3 := 12, 4 := 5, 5 := 8, 6 := 7,
          7 := 9, 8 := 11, 9 := 13, 10 := 14, 11 := 15, 12 := 6, 13 := 7,
          14 := 9, 15 := 8, 16 := 7, 17 := 6, 18 := 8, 19 := 13, 20 := 11,
          21 := 9, 22 := 7, 23 := 15, 24 := 7, 25 := 12, 26 := 15, 27 := 9,
          28 := 11, 29 := 7, 30 := 13, 31 := 12, 32 := 11, 33 := 13,
          34 := 6, 35 := 7, 36 := 14, 37 := 9, 38 := 13, 39 := 15, 40 := 14,
          41 := 8, 42 := 13, 43 := 6, 44 := 5, 45 := 12, 46 := 7, 47 := 5,
          48 := 11, 49 := 12, 50 := 14, 51 := 15, 52 := 14, 53 := 15,
          54 := 9, 55 := 8, 56 := 9, 57 := 14, 58 := 5, 59 := 6, 60 := 8,
          61 := 6, 62 := 5, 63 := 12, 64 := 9, 65 := 15, 66 := 5, 67 := 11,
          68 := 6, 69 := 8, 70 := 13, 71 := 12, 72 := 5, 73 := 12, 74 := 13,
          75 := 14, 76 := 11, 77 := 8, 78 := 5, 79 := 6))
         j''"
unfolding goal2'1[OF assms]
by simp


lemma goal2'3:
  assumes "0 <= j''"
  assumes "j'' <= 79"
  shows "(rotate_definition___default_arr''
     (0 := 11, 1 := 14, 2 := 15, 3 := 12, 4 := 5, 5 := 8, 6 := 7, 7 := 9,
      8 := 11, 9 := 13, 10 := 14, 11 := 15, 12 := 6, 13 := 7, 14 := 9,
      15 := 8, 16 := 7, 17 := 6, 18 := 8, 19 := 13, 20 := 11, 21 := 9,
      22 := 7, 23 := 15, 24 := 7, 25 := 12, 26 := 15, 27 := 9, 28 := 11,
      29 := 7, 30 := 13, 31 := 12, 32 := 11, 33 := 13, 34 := 6, 35 := 7,
      36 := 14, 37 := 9, 38 := 13, 39 := 15, 40 := 14, 41 := 8, 42 := 13,
      43 := 6, 44 := 5, 45 := 12, 46 := 7, 47 := 5, 48 := 11, 49 := 12,
      50 := 14, 51 := 15, 52 := 14, 53 := 15, 54 := 9, 55 := 8, 56 := 9,
      57 := 14, 58 := 5, 59 := 6, 60 := 8, 61 := 6, 62 := 5, 63 := 12,
      64 := 9, 65 := 15, 66 := 5, 67 := 11, 68 := 6, 69 := 8, 70 := 13,
      71 := 12, 72 := 5, 73 := 12, 74 := 13, 75 := 14, 76 := 11, 77 := 8,
      78 := 5, 79 := 6))
     j''
    \<le> 15"
proof -
  have "s_list ! nat j'' \<le> foldl max 0 s_list"
    by (insert assms, rule list_max) (simp_all add: s_list_def)
  thus ?thesis unfolding goal2'1[OF assms] s_def
    by (rule list_max_int) (simp_all add: assms s_list_def)
qed

lemmas userlemmas = goal2'2 goal2'3 goal2'1

end
