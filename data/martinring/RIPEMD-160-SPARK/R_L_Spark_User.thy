theory R_L_Spark_User
imports
  R_L_Spark_Specification
  R_L_Spark_Declaration
  Global_User
begin

lemma goal2'1:
  assumes "0 <= j''"
  assumes "j'' <= 79"
  shows
  "(block_permutation___default_arr''
    (0 := 0, 1 := 1, 2 := 2, 3 := 3, 4 := 4, 5 := 5, 6 := 6, 7 := 7,
     8 := 8, 9 := 9, 10 := 10, 11 := 11, 12 := 12, 13 := 13, 14 := 14,
     15 := 15, 16 := 7, 17 := 4, 18 := 13, 19 := 1, 20 := 10, 21 := 6,
     22 := 15, 23 := 3, 24 := 12, 25 := 0, 26 := 9, 27 := 5, 28 := 2,
     29 := 14, 30 := 11, 31 := 8, 32 := 3, 33 := 10, 34 := 14, 35 := 4,
     36 := 9, 37 := 15, 38 := 8, 39 := 1, 40 := 2, 41 := 7, 42 := 0,
     43 := 6, 44 := 13, 45 := 11, 46 := 5, 47 := 12, 48 := 1, 49 := 9,
     50 := 11, 51 := 10, 52 := 0, 53 := 8, 54 := 12, 55 := 4, 56 := 13,
     57 := 3, 58 := 7, 59 := 15, 60 := 14, 61 := 5, 62 := 6, 63 := 2,
     64 := 4, 65 := 0, 66 := 5, 67 := 9, 68 := 7, 69 := 12, 70 := 2,
     71 := 10, 72 := 14, 73 := 1, 74 := 3, 75 := 8, 76 := 11, 77 := 6,
     78 := 15, 79 := 13))
    j'' =
   R_L_Spark_Specification.r_l' j''"
proof -
  note nth_list_to_fun_eff_eq
  moreover have "0 <= nat j''" by simp
  moreover from `j'' <= 79` have "nat j'' < length r_list"
    unfolding r_list_def by simp
  ultimately have conversion:
    "int (r_list ! nat j'') =
      list_to_fun_eff
        r_list 0 block_permutation___default_arr'' (int (nat j''))" .
  show ?thesis
    unfolding r_def conversion
    unfolding r_list_def
    using `0 <= j''` `j'' <= 79`
    by simp
qed

lemma goal2'2:
  assumes "0 <= j''"
  assumes "j'' <= 79"
  shows "0 \<le> (block_permutation___default_arr''
   (0 := 0, 1 := 1, 2 := 2, 3 := 3, 4 := 4, 5 := 5, 6 := 6, 7 := 7,
    8 := 8, 9 := 9, 10 := 10, 11 := 11, 12 := 12, 13 := 13, 14 := 14,
    15 := 15, 16 := 7, 17 := 4, 18 := 13, 19 := 1, 20 := 10, 21 := 6,
    22 := 15, 23 := 3, 24 := 12, 25 := 0, 26 := 9, 27 := 5, 28 := 2,
    29 := 14, 30 := 11, 31 := 8, 32 := 3, 33 := 10, 34 := 14, 35 := 4,
    36 := 9, 37 := 15, 38 := 8, 39 := 1, 40 := 2, 41 := 7, 42 := 0,
    43 := 6, 44 := 13, 45 := 11, 46 := 5, 47 := 12, 48 := 1, 49 := 9,
    50 := 11, 51 := 10, 52 := 0, 53 := 8, 54 := 12, 55 := 4, 56 := 13,
    57 := 3, 58 := 7, 59 := 15, 60 := 14, 61 := 5, 62 := 6, 63 := 2,
    64 := 4, 65 := 0, 66 := 5, 67 := 9, 68 := 7, 69 := 12, 70 := 2,
    71 := 10, 72 := 14, 73 := 1, 74 := 3, 75 := 8, 76 := 11, 77 := 6,
    78 := 15, 79 := 13))
   j''"
  unfolding goal2'1[OF assms]
by simp

lemma goal2'3:
  assumes "0 <= j''"
  assumes "j'' <= 79"
  shows
   "(block_permutation___default_arr''
     (0 := 0, 1 := 1, 2 := 2, 3 := 3, 4 := 4, 5 := 5, 6 := 6, 7 := 7,
      8 := 8, 9 := 9, 10 := 10, 11 := 11, 12 := 12, 13 := 13, 14 := 14,
      15 := 15, 16 := 7, 17 := 4, 18 := 13, 19 := 1, 20 := 10, 21 := 6,
      22 := 15, 23 := 3, 24 := 12, 25 := 0, 26 := 9, 27 := 5, 28 := 2,
      29 := 14, 30 := 11, 31 := 8, 32 := 3, 33 := 10, 34 := 14, 35 := 4,
      36 := 9, 37 := 15, 38 := 8, 39 := 1, 40 := 2, 41 := 7, 42 := 0,
      43 := 6, 44 := 13, 45 := 11, 46 := 5, 47 := 12, 48 := 1, 49 := 9,
      50 := 11, 51 := 10, 52 := 0, 53 := 8, 54 := 12, 55 := 4, 56 := 13,
      57 := 3, 58 := 7, 59 := 15, 60 := 14, 61 := 5, 62 := 6, 63 := 2,
      64 := 4, 65 := 0, 66 := 5, 67 := 9, 68 := 7, 69 := 12, 70 := 2,
      71 := 10, 72 := 14, 73 := 1, 74 := 3, 75 := 8, 76 := 11, 77 := 6,
      78 := 15, 79 := 13))
     j''
    \<le> 15"
proof -
  have "r_list ! nat j'' \<le> foldl max 0 r_list"
    by (insert assms, rule list_max) (simp_all add: r_list_def)
  thus ?thesis unfolding goal2'1[OF assms] r_def
    by (rule list_max_int) (simp_all add: assms r_list_def)
qed

lemmas userlemmas = goal2'1 goal2'2 goal2'3
end
