theory S_R_Spark_User
imports
  S_R_Spark_Specification
  S_R_Spark_Declaration
  Global_User
begin


lemma goal2'1:
  assumes "0 <= j''"
  assumes "j'' <= 79"
  shows "(rotate_definition___default_arr''
     (0 := 8, 1 := 9, 2 := 9, 3 := 11, 4 := 13, 5 := 15, 6 := 15, 7 := 5,
      8 := 7, 9 := 7, 10 := 8, 11 := 11, 12 := 14, 13 := 14, 14 := 12,
      15 := 6, 16 := 9, 17 := 13, 18 := 15, 19 := 7, 20 := 12, 21 := 8,
      22 := 9, 23 := 11, 24 := 7, 25 := 7, 26 := 12, 27 := 7, 28 := 6,
      29 := 15, 30 := 13, 31 := 11, 32 := 9, 33 := 7, 34 := 15, 35 := 11,
      36 := 8, 37 := 6, 38 := 6, 39 := 14, 40 := 12, 41 := 13, 42 := 5,
      43 := 14, 44 := 13, 45 := 13, 46 := 7, 47 := 5, 48 := 15, 49 := 5,
      50 := 8, 51 := 11, 52 := 14, 53 := 14, 54 := 6, 55 := 14, 56 := 6,
      57 := 9, 58 := 12, 59 := 9, 60 := 12, 61 := 5, 62 := 15, 63 := 8,
      64 := 8, 65 := 5, 66 := 12, 67 := 9, 68 := 12, 69 := 5, 70 := 14,
      71 := 6, 72 := 8, 73 := 13, 74 := 6, 75 := 5, 76 := 15, 77 := 13,
      78 := 11, 79 := 11))
     j'' =
    S_R_Spark_Specification.s_r' j''"
proof -
  note nth_list_to_fun_eff_eq
  moreover have "0 <= nat j''" by simp
  moreover from `j'' <= 79` have "nat j'' < length s'_list"
    unfolding s'_list_def by simp
  ultimately have conversion:
    "int (s'_list ! nat j'') =
      list_to_fun_eff
        s'_list 0 rotate_definition___default_arr'' (int (nat j''))" .
  show ?thesis unfolding s'_def conversion
    unfolding s'_list_def using `0 <= j''` `j'' <= 79`
    by simp
qed


lemma goal2'2:
  assumes "0 <= j''"
  assumes "j'' <= 79"
  shows "0 <= (rotate_definition___default_arr''
     (0 := 8, 1 := 9, 2 := 9, 3 := 11, 4 := 13, 5 := 15, 6 := 15, 7 := 5,
      8 := 7, 9 := 7, 10 := 8, 11 := 11, 12 := 14, 13 := 14, 14 := 12,
      15 := 6, 16 := 9, 17 := 13, 18 := 15, 19 := 7, 20 := 12, 21 := 8,
      22 := 9, 23 := 11, 24 := 7, 25 := 7, 26 := 12, 27 := 7, 28 := 6,
      29 := 15, 30 := 13, 31 := 11, 32 := 9, 33 := 7, 34 := 15, 35 := 11,
      36 := 8, 37 := 6, 38 := 6, 39 := 14, 40 := 12, 41 := 13, 42 := 5,
      43 := 14, 44 := 13, 45 := 13, 46 := 7, 47 := 5, 48 := 15, 49 := 5,
      50 := 8, 51 := 11, 52 := 14, 53 := 14, 54 := 6, 55 := 14, 56 := 6,
      57 := 9, 58 := 12, 59 := 9, 60 := 12, 61 := 5, 62 := 15, 63 := 8,
      64 := 8, 65 := 5, 66 := 12, 67 := 9, 68 := 12, 69 := 5, 70 := 14,
      71 := 6, 72 := 8, 73 := 13, 74 := 6, 75 := 5, 76 := 15, 77 := 13,
      78 := 11, 79 := 11))
     j''"
unfolding goal2'1[OF assms]
by simp


lemma goal2'3:
  assumes "0 <= j''"
  assumes "j'' <= 79"
  shows "(rotate_definition___default_arr''
     (0 := 8, 1 := 9, 2 := 9, 3 := 11, 4 := 13, 5 := 15, 6 := 15, 7 := 5,
      8 := 7, 9 := 7, 10 := 8, 11 := 11, 12 := 14, 13 := 14, 14 := 12,
      15 := 6, 16 := 9, 17 := 13, 18 := 15, 19 := 7, 20 := 12, 21 := 8,
      22 := 9, 23 := 11, 24 := 7, 25 := 7, 26 := 12, 27 := 7, 28 := 6,
      29 := 15, 30 := 13, 31 := 11, 32 := 9, 33 := 7, 34 := 15, 35 := 11,
      36 := 8, 37 := 6, 38 := 6, 39 := 14, 40 := 12, 41 := 13, 42 := 5,
      43 := 14, 44 := 13, 45 := 13, 46 := 7, 47 := 5, 48 := 15, 49 := 5,
      50 := 8, 51 := 11, 52 := 14, 53 := 14, 54 := 6, 55 := 14, 56 := 6,
      57 := 9, 58 := 12, 59 := 9, 60 := 12, 61 := 5, 62 := 15, 63 := 8,
      64 := 8, 65 := 5, 66 := 12, 67 := 9, 68 := 12, 69 := 5, 70 := 14,
      71 := 6, 72 := 8, 73 := 13, 74 := 6, 75 := 5, 76 := 15, 77 := 13,
      78 := 11, 79 := 11))
     j''
    \<le> 15"
proof -
  have "s'_list ! nat j'' \<le> foldl max 0 s'_list"
    by (insert assms, rule list_max) (simp_all add: s'_list_def)
  thus ?thesis unfolding goal2'1[OF assms] s'_def
    by (rule list_max_int) (simp_all add: assms s'_list_def)
qed

lemmas userlemmas = goal2'2 goal2'3 goal2'1

end
